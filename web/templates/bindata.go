// Code generated by go-bindata. DO NOT EDIT.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/index/index.go.html
// web/templates/monitor/details_processor.go.html
// web/templates/monitor/details_view.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html

package templates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataWebTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func bindataWebTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}



func bindataWebTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/base.go.html",
		size: 141,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x73\xf2\x36\x18\xbc\xe7\x57\x78\x74\xe1\x90\x5a\xc2\x98\x16\x92\xc1\xe9\xa4\xa4\xe5\x23\x5f\x04\x12\x08\xbd\x74\x84\xf4\xd8\x96\x23\x4b\x8e\x25\x03\x2e\xe5\xbf\x77\x1c\x4a\xc2\xa4\x79\x3f\x72\x78\x6f\x7e\xd6\xab\xf5\xee\xfa\x19\x6d\x36\x1c\x42\xa1\xc0\x41\x31\x50\x8e\xb6\xdb\xa3\x4e\xf5\x70\x76\xe4\x38\x8e\xd3\x49\xc1\x52\x87\xc5\x34\x37\x60\x03\x54\xd8\xd0\x6d\xa3\xc3\x57\xb1\xb5\x99\x0b\xcf\x85\x58\x06\x68\xed\x16\xd4\x65\x3a\xcd\xa8\x15\x0b\x09\xc8\x61\x5a\x59\x50\x36\x40\x02\x02\xe0\x11\xec\x4f\x5a\x61\x25\x9c\x6d\x36\x38\xa3\x11\xfc\xf5\x32\x6d\xb7\x1d\xb2\x83\x0f\xc4\x15\x4d\x21\x40\x1c\x0c\xcb\x45\x66\x85\x56\x07\x92\xe8\xff\xc4\xa5\x80\x55\xa6\x73\x7b\xc0\x5a\x09\x6e\xe3\x80\xc3\x52\x30\x70\x5f\x86\x9f\x1c\xa1\x84\x15\x54\xba\x86\x51\x09\x81\xb7\x17\x92\x42\x3d\x39\x71\x0e\x61\x50\xab\x42\x99\x53\x42\x42\xad\xac\xc1\x91\xd6\x91\x04\x9a\x09\x83\x99\x4e\x09\x33\xe6\xd7\x90\xa6\x42\x96\xc1\x6d\x06\xea\x78\x42\x95\x39\xee\x6a\xc5\x41\x19\xe0\xa7\x7e\xbd\xfe\xcf\x2b\x5e\x73\x72\x90\x41\xcd\xd8\x52\x82\x89\x01\x6c\xcd\xb1\x65\x06\x41\xcd\xc2\xda\x56\x4a\xb5\xc3\x8f\x57\x5c\xf4\xc6\x45\x3b\x37\x68\xef\x26\xa5\x6b\xc6\x15\x5e\x68\x6d\x8d\xcd\x69\x56\x0d\x95\xa1\x57\x80\xf8\xd8\xc7\xad\x4a\xf6\x0d\xc3\xa9\x50\x98\x19\x83\x1c\xa1\x2c\x44\xb9\xb0\x65\x80\x4c\x4c\xfd\x76\xd3\xfd\x6d\x3a\x17\x62\x32\xf8\x03\x2e\x3d\xde\x4b\x87\xe3\xf3\xa7\x92\x15\xfd\xf3\xfe\x38\xf2\x1b\xb7\xe9\x03\x5b\xad\x5a\x5a\xf9\xe3\x39\x8f\x9a\x53\x7a\x3c\x4a\x27\xf7\xe6\x6f\x72\xf9\x4b\x7b\xb9\xe0\xbf\x27\x71\xb3\x40\x0e\xcb\xb5\x31\x3a\x17\x91\x50\x01\xa2\x4a\xab\x32\xd5\x85\x41\x3f\x3a\x94\x6b\x63\x48\xe1\x6b\xd1\xf2\x7e\xa9\x6f\x3c\x31\x36\xd3\xc7\x69\x53\x5d\xd4\x87\x85\x95\xaa\x47\x8d\xec\x0e\x8b\x6e\xab\x58\x25\xbc\x98\x9d\x4c\xa6\xf9\xd5\x72\x3c\xd7\x7a\x94\x35\x16\xb3\x79\x94\x46\xc3\xbb\xc1\xe3\x4a\x92\x49\xf6\xad\x68\xbb\x8d\x74\x4c\xce\x02\x44\x08\x4d\xe8\xfa\xfd\x9a\x54\x18\x91\x62\x61\x48\xf2\x5c\x40\x5e\x12\x0f\x7b\x1e\xae\xff\x37\xbd\x78\x4f\x0c\x3a\xeb\x90\x9d\xd4\x07\xba\x9f\xad\x28\x79\xff\xdb\x93\x0f\xab\xb9\x67\x3f\x0f\xee\xc4\xa2\xde\x68\x3d\x2f\xcb\x64\x72\x1d\xf6\x93\xdb\x6b\x7a\xf5\x14\x16\xb3\xe9\xfa\xcf\xf5\xc3\x48\x75\x87\xe7\x2d\xd9\x48\xbb\xb3\x9b\x41\xd6\x3b\x49\x7b\xdd\x8b\xf6\xaa\x77\x33\x60\xa3\x8b\xd6\xfd\x9a\x7e\xb9\x9a\xef\xc8\xc2\xb8\x4a\x0c\x66\x52\x17\x3c\x94\x34\x87\x77\x55\x49\xcd\xa9\x89\x71\x62\x48\x13\x7b\x2d\xec\xed\x81\x4f\xb4\xc5\xfd\xc4\x60\x9d\x47\x84\xfb\x78\xd9\xfc\xe0\x64\x87\xec\xae\xb7\xcd\x06\x14\xdf\x6e\x8f\xfe\x0d\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func bindataWebTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}



func bindataWebTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/head.go.html",
		size: 1280,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4\x0b\x38\x08\x72\x13\x57\x8d\x6a\x1c\x94\x36\x91\x50\x94\xbb\x23\x98\x36\xc0\xcc\x2a\xb1\xfe\x8b\xde\x8f\x4b\x71\x3c\x7b\x65\xc0\x77\xd6\x84\xb5\x76\x46\x29\x83\x15\xda\xb6\x01\x95\xf2\x44\x11\xae\xc7\xb3\xe3\x99\x92\xec\x38\x76\x00\xc6\xf9\x46\xd9\xa0\x3b\x79\xe5\xf8\x93\xfc\xcf\x8e\xa7\x0b\x93\x6b\x39\x80\xa1\x9b\x7c\x8a\xa4\x0e\x61\x89\x3c\x0f\xf8\x80\x10\xf4\x55\xbc\x5d\x07\x5c\xfc\xb6\x87\xf8\x79\x99\xc8\xae\x8f\x4f\x38\xbe\x90\x5d\x4d\x4f\x87\xa8\x77\x3e\xdf\x3b\x6d\x10\xa1\x8f\x8d\xcf\xde\xe7\xfc\xab\x4f\xf2\xc7\x7f\x62\x4a\xb9\x11\xa5\x4c\x12\xec\x7a\xdd\xca\xdb\xf7\x07\x59\x77\x84\x4b\xad\x0d\x60\x75\x6d\x32\x7d\x92\x9b\x4a\xc7\xc5\xf4\x4a\x79\xec\x4a\x01\x56\x07\xb5\x76\x5f\x01\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func bindataWebTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}



func bindataWebTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/menu.go.html",
		size: 369,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4a\xc4\x30\x10\x87\xef\x7d\x8a\x21\xec\xd1\x6e\x51\xf6\x24\x6d\x0f\x3e\x80\xf8\x0a\x43\x67\xba\x09\xa4\xd3\xa5\x8d\xab\x30\xcc\xbb\x8b\x4b\xac\xa6\x0a\x5e\x92\xcc\x7c\x5f\xfe\xfc\xa2\x4a\x3c\x06\x61\x70\xc3\x2c\x89\x25\x39\xb3\xaa\xa5\x70\x85\x21\xe2\xba\x76\x6e\x99\xdf\x5c\x5f\x01\xfc\xec\x7d\xaa\x18\x84\x97\x1b\xd9\xb3\x58\x4f\x54\xdf\x3f\x64\x06\xa0\xba\xa0\x9c\x19\x0e\x41\x88\xdf\xef\xe0\x30\xcc\xd3\x65\x16\x96\x04\x8f\x1d\x1c\xb7\x6a\x35\xcb\x3b\xfe\x3b\x71\x6f\x5c\x50\x38\xc2\x6d\xac\x89\x47\x7c\x8d\xa9\x70\xff\xb0\x6b\xcf\x48\x41\xce\x3b\x0f\xa0\xf5\xa7\x52\x4c\x21\x45\x76\x7d\x8b\xe0\x17\x1e\x3b\xa7\xfa\x1d\xe0\xf8\x84\x2b\xbf\x60\xf2\x66\x8d\xeb\x0b\xf2\x8c\x13\x9b\xb5\x0d\xfe\xba\xa0\xf1\xa7\xbe\x2a\x5f\xd7\x50\xb8\x16\xe1\xca\x46\x51\xaa\xb2\x50\xfe\xaa\x0d\xe4\x45\x9e\xbe\x94\x8f\x00\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd\x01\x00\x00")

func bindataWebTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}



func bindataWebTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/index/index.go.html",
		size: 477,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsprocessorGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5b\x73\xdb\x36\xd6\xef\xf9\x15\xa7\xfc\x1e\x44\x36\x32\x19\xdb\xfd\x5e\x6c\x4b\x3b\x49\xd3\xdd\xa6\x93\xdb\xb4\x9e\xed\x83\xd7\xe3\x81\x48\x48\x42\x4c\x01\x1c\x00\x94\xac\x7a\xf4\xdf\x77\x00\xf0\x02\x02\xd4\xc5\x4e\xba\x49\x77\xed\x87\xc4\x02\x0e\x0e\x0e\xce\xfd\x1c\x40\xbe\xbf\xcf\xf0\x94\x50\x0c\x41\xca\xa8\xc4\x54\x06\x9b\xcd\xb3\x8b\x8c\x2c\x21\xcd\x91\x10\xa3\x80\xb3\x55\x30\x7e\x06\x60\x8f\x29\x50\x44\x28\xe6\x7a\xc6\x9d\xcb\x8f\x16\xd9\xd1\xf1\x49\x35\x07\x70\x31\x3f\x1e\xdf\xdf\xc7\x92\xc8\x1c\x6f\x36\x17\xc9\xfc\x78\xfc\xac\x9e\xb2\x16\x16\x88\xe2\x1c\xf4\xbf\x47\x19\x9e\xa2\x32\x97\x0d\x8a\xed\x90\x73\x8c\x32\x42\x67\x16\xa4\xda\xf0\x74\xfc\x11\x71\x49\x24\x61\x14\x2e\xd1\x24\xc7\x10\xfe\x26\x91\xc4\xd1\x45\x32\x3f\xb5\x90\x26\x19\x59\x36\xc4\xf4\x6c\x72\x34\x61\xd9\xba\x8b\x5b\x6a\x74\x15\x90\xf9\xa0\xff\x3d\x12\x92\x93\x02\x67\x1d\x68\x05\xaf\x28\xec\x8e\xa9\x51\xee\x0e\x69\x50\xd0\x4c\x1a\x05\x0d\xf5\x01\x70\xb6\x12\x05\xa2\xa3\xe0\x24\x68\x0f\x75\x91\xc8\xf9\x4e\x04\xea\xb4\xa5\x00\x36\x05\x39\xc7\x50\x70\x96\x62\x21\x18\xef\xa2\xd3\x2c\x39\x08\x95\x80\xac\xe4\x84\xce\x80\xe3\x94\x2d\x31\x5f\x07\x90\xb2\xdc\x20\x3a\x0d\xc6\xbf\x56\xa3\x0f\xc4\x55\x52\x90\x64\x81\x2d\x5c\x27\xc1\xf8\x77\x4e\x24\x16\x7d\x98\x2e\x12\x9f\x6b\xfb\x18\x79\x49\x16\x58\x71\xa1\x40\x42\xe0\xac\x21\x1f\x04\x83\x29\xe2\xc1\x58\xcd\xef\xa5\xfa\x7d\xb9\x98\x60\xae\xd0\x2c\xb0\x10\x68\x86\x45\x8d\x08\x67\x50\x60\x0e\x02\xa7\x8c\x66\xc1\xf8\xd7\x43\xf8\xd9\x83\x2d\x47\xb3\x99\xe2\xc8\x04\xcf\x09\xcd\xe0\xe7\xdf\xdf\x05\xe3\xb7\x68\xf6\x18\x54\x65\x91\x21\xf9\x79\x64\x4d\xd6\x72\x0b\xa2\x57\xeb\x83\x45\xa3\xa0\x3c\xc5\xbf\x90\xca\x9e\x80\x64\x95\xe5\x28\x75\x20\x42\x92\x54\xb8\x56\x93\x68\xc8\x8e\xe1\x25\x7a\x89\x67\xbc\x9d\x0f\x7f\xba\x5b\xf9\x85\x11\x2a\x92\xb7\x8c\xdd\x96\x85\xe8\x75\x26\x5b\x31\x7f\x2d\x5f\x72\xb9\x2e\xb4\x09\x74\x6d\x5f\x8d\xee\xd5\x89\x4b\x56\x90\xd4\x59\xa7\x86\xf6\x2e\xfc\xc2\xfe\x4b\xbb\xf0\x6f\xdd\x77\xfd\x10\x8c\xdf\xd0\x94\x2d\x08\xed\x35\xdc\x27\xef\x75\x00\xaa\xaf\xe3\xbd\x3a\x98\x68\x83\x89\x4d\xa7\x02\x4b\x31\xd4\x2a\xb8\x24\x78\x05\xa4\x39\x6c\x30\xfe\xa0\x67\xe1\x90\x83\x2a\x45\x81\x0c\xe7\x68\xbd\x05\x97\x96\xf3\x16\x4c\x0f\x77\xad\x9f\x18\xa1\x5a\x59\xff\x2a\x4e\xf5\x0d\x2d\x4a\x09\x97\x1c\x4d\xa7\xca\xb7\xd8\x4e\x15\xe0\xa2\xcc\xf5\xa9\x88\x02\xd2\xde\xa7\x7b\xae\x8b\xa4\xcc\xed\x14\xee\x5b\xf5\xc2\x8f\x75\xa5\x6f\x91\x90\x60\x94\xad\xbb\xbc\x52\xc0\x70\x41\x68\x82\x96\xb3\x64\x81\xee\xa2\xbd\xd8\x94\x31\x29\xdd\xc6\x4b\x4c\xa5\xe8\x66\x5e\x3f\xa9\x31\x38\xc8\xdc\x6a\x34\xda\xd8\xba\x58\x94\x95\x1d\x86\xe4\x2d\x9a\xc1\x94\xf1\xca\xce\x00\xd1\xcc\x75\xa9\xa7\xda\x91\x40\x68\x20\x12\x35\xdb\x7b\xc4\xc7\xf8\x56\x73\x5a\xae\x0e\x42\x28\x48\x26\x51\xae\x44\x22\x51\xbe\x97\x70\x6b\xa9\xf2\x2f\x45\x13\xec\xc6\x1f\x31\x87\xc3\x83\x9c\x66\xd5\xa3\x28\x68\x57\x7e\x16\x01\xef\x08\x55\x6e\x27\x18\xbf\x23\xfb\x81\x5f\x2e\x67\x06\xf8\xe5\x72\xbf\xcb\x7b\x87\xee\x2a\xcc\xe8\xee\xcb\x78\x35\x6d\xff\x7f\xbd\x84\xf1\x43\x29\x67\x4c\x45\xc7\x27\xf7\xd6\xbb\xf0\x2b\x3b\xa4\x27\xcf\x71\x30\x01\x0f\x37\x59\x56\xca\x3f\xd3\x66\x45\xca\x49\x21\x41\xae\x0b\x95\x63\xe1\x3b\x99\x7c\x42\x4b\x64\x46\xad\xad\x96\x88\x43\x8e\x84\x7c\x53\x3b\x10\x01\x23\xc8\x4e\xe3\x9c\xa5\x28\x0f\xa3\x73\x0f\xf0\x43\x43\xf6\x3e\xc8\xcb\xba\x88\xdd\x07\xf8\x4b\x9d\x92\xed\x80\x13\xba\xe4\x79\x87\x0a\x18\xc1\xbd\xc5\x93\x17\x67\x10\x08\xc9\x0a\x65\xaa\x43\x6b\xfc\xf8\x0c\x02\x42\x89\x24\x28\x27\x7f\x28\xd7\x63\x4f\x9e\x9c\xe9\x86\x1e\xc5\xa9\x74\xa7\x4e\xcf\x20\xa8\x0a\x00\x77\xea\x87\x33\x08\x0a\x8e\x0b\xe4\xcd\xfc\xbf\x5a\x54\x52\xaa\xc6\x9b\xe1\x4d\xf7\x00\xbc\xa4\xef\x58\x86\xfb\x4f\x80\x52\x49\x96\xd8\x3b\x80\x90\x88\x66\x93\xb5\x47\x7b\x45\xe0\x11\xa3\xf9\xba\xb3\x61\x97\x65\x38\x15\x97\xec\x3d\xa2\x0c\x46\x70\xfc\xa2\xfe\x71\xa0\x38\xa6\x19\xe6\xaf\xb1\x44\x24\x57\x02\x98\x96\x34\x55\x4a\x1e\x36\xda\x2f\x22\xb8\x7f\x66\x51\x40\xa6\x60\x4d\xc2\x68\x04\xb4\xcc\xf3\xa8\x73\x28\x00\x8e\x65\xc9\xe9\xb9\x35\xb6\xb1\x91\xa8\xad\x4d\x19\x72\xd9\xed\x75\xd8\x24\x28\xa1\xbb\xbb\xdb\xea\x00\xa3\x56\x2f\xae\x34\x70\x6c\x4a\xe3\xeb\x73\x6f\x45\xc5\x7f\x18\x59\x92\xa8\xd6\xfc\x6a\x06\xae\xcf\xbb\xfb\xa8\x73\x36\x48\xf3\x1c\x67\xee\x11\xa1\x25\x43\x89\x4a\x81\x04\xdd\x8d\x37\x3e\x19\x38\xfd\x89\x66\xba\xa4\x31\xc4\x8b\xb8\xae\xb1\x9b\x5f\xf4\xec\x77\x23\x08\x02\xf8\xdb\x4e\x98\xb3\x6a\xf6\x3d\x5b\xf5\x1c\xd8\x86\x1c\x41\x48\xf1\x0a\x5e\x23\x89\xc3\x96\x84\x08\x8e\xa0\x19\x76\x36\xfa\x4d\x22\x2e\x35\x50\x04\x89\x56\x9f\xf8\xc5\xf6\x4d\x74\x84\x19\xc1\x0e\x08\x95\xaa\x7a\x27\xfe\x79\xb5\x80\x23\x77\xd0\xa4\xee\xe7\xbe\xd0\x57\x9c\x48\xbc\x7d\x27\x3d\xad\xcb\x58\x33\xdf\x01\x48\x12\xc8\xb1\x1c\x08\x48\xe7\x38\xbd\x55\xb2\x5d\x61\x98\xa3\x25\x06\x04\x05\xc7\x4b\xc2\x4a\x01\x19\x92\xa8\x4e\xb6\xd5\xff\x72\x8e\x17\x20\x99\xfa\x9f\x70\x17\x5d\xca\x38\xc7\xa9\x84\x25\xca\x4b\x2c\x3c\x6a\x94\x63\xab\x9d\x5a\xd7\x1b\xc6\x33\x2c\x43\x39\x27\x22\xea\x51\xb8\x66\x99\xaf\x6c\x49\x02\x19\x99\x4e\x15\x41\x0d\xc5\x9a\x75\x2a\xcc\x99\x32\x5e\x38\x4b\x14\x21\xaa\x2e\x78\xad\xd6\x8d\x6a\x75\x7e\xcf\x56\x70\xd4\x12\xa8\x3e\xdb\x32\x76\x70\xd4\x66\x50\x6a\x53\xb7\x9d\xa3\x4f\x22\xb8\x0a\xe1\x6a\x55\x55\x96\xd9\xbb\x3b\x73\x8a\x92\x9a\xe4\x73\x07\xfd\xc6\xa5\xcd\xd6\x88\x6a\x2b\xd3\x21\x8f\x7f\x64\x25\xed\xee\x63\x4f\xec\xda\xa4\xa3\x46\x5d\xa4\x66\xb4\x07\xa9\x9e\xd8\x8e\xb4\xeb\x06\x1c\x6d\x10\x95\x36\x0c\x8d\x30\x5d\xa5\x30\x7e\x14\x06\x17\x32\x1b\x0f\xe0\x79\x65\x2c\x8d\xff\x8d\x25\xfb\x3b\xb9\xc3\x59\xf8\x22\x82\xe7\x30\xb8\x48\x64\x36\xfe\x17\x1d\xc0\x73\xe7\x54\x9d\xf5\xa5\x80\xe7\x10\x40\x18\xc0\xf3\xc6\x2f\x3e\x87\x41\xb4\x7f\x75\xc7\xa9\x3c\x87\x81\x38\x7c\x89\x12\xd3\x83\xa9\xb5\xbd\xc7\x41\x0b\x1a\x8d\x78\xf0\x56\xad\xdc\xb7\x2c\xed\xc4\xb2\x73\x37\x98\xcd\x38\x2b\x8b\x1f\xe7\x88\x50\x18\xc1\x4d\x9c\xaa\xdf\xac\x30\x19\xff\x43\xcd\x47\xe7\xce\xaa\x06\xe0\x2d\x11\x12\x46\x16\x96\x0e\x99\xf1\x94\xe4\x12\xf3\xb0\x89\x8c\x4b\xdf\xf6\x2a\x45\x59\xc6\x56\xde\xf5\x9d\x89\xcd\x8e\x36\x46\x5d\xdc\x0b\x54\x58\x88\x87\x9a\xa6\x37\x3d\xc1\xae\xda\xe0\x26\x46\x42\x90\x19\x0d\xef\x37\x43\xcf\xfc\xed\xdd\x87\x3d\xee\x01\x60\xf0\x9e\xad\x06\x67\x6d\xd8\x59\x6a\xf7\xe3\x63\x02\x18\x34\xcc\x19\x9c\x29\xa2\x04\x7e\x43\x65\x58\x51\xe7\x2f\xf0\xa8\x89\xdc\x63\xc7\xc6\x55\x87\x51\x2c\x18\x97\xaf\xd6\xa1\xb5\x43\x35\x19\x76\xcd\x2f\x49\x40\x81\x02\xca\xf3\x56\x54\xa2\x0b\x60\xb2\x98\x21\x60\x2a\x31\xd7\xa1\x83\xe3\x05\x5b\x62\x1d\x4d\x1c\x71\x67\x26\xc3\x15\x38\xc7\xa9\x0c\x83\xff\x73\xef\x79\xa2\x6a\xea\x65\x9e\x87\x41\x6b\xe4\x13\x76\x17\x44\xb1\xc2\x17\x76\x14\xa6\x73\xc2\x2c\x9e\xcb\x45\x1e\xf6\x26\x55\x0e\xa0\x26\x35\x8c\x62\x54\x14\x98\x66\x61\x20\x79\x10\xc5\xba\x06\xc6\x59\x18\x74\xb6\x1d\x82\xe4\x25\x8e\x1e\x80\xfb\x8e\xc8\x30\x8a\x0d\x0f\xc2\xc8\x35\x13\x93\x6e\x9a\x9e\xa6\x95\xe9\xa9\xb3\xb9\x1a\xa7\x83\x97\x2a\x93\x15\xd3\x90\x44\x57\x2f\x7a\xd2\x3a\x51\xd7\x0d\x0a\xe0\xd8\x4d\xe1\x54\xc8\x34\x4d\x8a\x2a\x4c\xc3\x0a\x0f\x38\x06\xd3\x74\x90\x0c\x32\x22\x8a\x1c\xad\x63\x77\x95\x72\xc8\xc0\x26\x9f\x54\x80\x5f\x91\x3c\x87\x09\x06\x21\x19\xc7\x99\x0a\xb6\x4e\xc1\x24\x19\xa4\x28\x4f\xcb\x1c\x55\xd5\xa3\x00\xa4\x76\xca\x73\x8f\xdc\x8a\x8a\x91\x67\x1a\x01\x65\xab\xc0\x32\x0b\x4f\xc1\x83\x54\x05\xae\xdf\xca\x45\x70\x06\x37\xb1\x28\x17\x55\x68\x32\xf1\xac\x1f\xfa\xe5\x72\xa6\xa1\x17\x18\xd1\xdd\xe0\xba\x33\xe0\x23\x37\x71\xad\x1f\xba\x07\x79\x1f\xb8\xf2\x94\x1e\x1b\x34\x75\xdb\x33\xb9\x66\xfa\xe5\x72\xd6\x0f\xa1\x29\xd8\x8e\xa0\x99\x6e\x10\xec\xcd\xcf\x5a\x79\x7e\xc5\xfc\xcc\xa8\x47\x4c\x9d\x04\x8d\xee\x4d\xd0\x6a\x24\x7d\x29\x99\xcd\xec\x7a\x87\x5a\x99\x3a\xdb\xd4\x83\xbb\xb2\x23\x70\x85\xd3\xc1\xa8\x86\x3c\x8c\x2f\x97\xb3\xdd\x18\x6d\x61\xd6\xe8\x6a\x85\xec\xa0\xab\x07\x0f\x44\xd7\x25\xb0\x56\x5a\x1f\xe3\x1e\x02\x37\x3b\x72\xb9\x24\x01\x94\x65\xda\x6c\x2b\xd3\x9e\x32\xae\xaf\xb1\x28\xbe\x93\xc0\x59\x49\x33\x2f\xf9\xb3\x54\xad\x4d\xfe\xcc\x72\x57\xe5\x74\xd0\xc0\x39\x5a\xf7\xb8\x8c\x05\xa1\xda\xfe\x48\x6d\x7e\xaf\x15\x60\x64\x67\x2f\x89\x55\xf7\xbb\x56\xac\xec\xd6\xb1\xdf\x07\x22\x40\x77\x7a\x3d\xba\x7b\xc4\xf2\xcd\xee\x2c\xd7\xf8\xfd\x83\xf2\x36\x9b\x03\x6f\x91\x90\x55\x19\xd1\x4d\xe2\x82\x24\x30\xa0\xed\x61\xf7\xc3\x36\x07\xdb\x0a\x7a\x00\x79\x8d\xb9\x3c\x7e\xe5\xcb\xe5\xec\xc1\x8b\x1b\x23\x78\xfc\xca\xc7\x6c\x6b\x0b\xc3\x70\xec\x2d\x9a\xb9\x4c\x4b\x14\xa4\xd6\x6a\x05\xdd\x4c\x9e\x44\x07\x56\x14\x1d\x31\x1e\xb4\x0b\x46\x8f\xdb\xa6\xd1\x80\x83\x76\x41\x77\xdb\x36\xe9\x58\xf5\xc6\x4d\x31\x57\x8c\xdf\xaa\x7c\x84\xd1\x3a\xe5\x08\x4c\x82\x34\xc7\x1c\x07\x67\x36\xf0\xf7\xd6\x87\xae\x3f\x08\x74\x81\x11\x9c\xf9\x99\xc5\x8b\x9e\x41\x95\xf7\xab\x1f\x6f\xd8\xec\xdc\xbf\x02\x82\x52\x60\x7e\x94\xe6\x24\xbd\x55\x10\x81\x4e\x26\x82\x33\x38\x3e\x19\x2a\x74\x9b\x9e\x25\xfe\x98\x97\xa7\x6f\x5c\xcf\xd0\xfe\xfe\x7d\xe2\xa4\x8f\x68\x36\xe3\x78\x86\xa4\xa9\x30\x5e\xad\x2f\xab\xfc\xd0\xef\x5a\x6a\x76\x0c\x41\xb0\x92\xa7\xb8\xaa\xad\xff\x69\x7c\xac\xdb\x50\x4c\x12\x08\x8f\x23\x98\x61\x93\xe8\x2b\xef\xdd\xc4\x6d\x04\xb9\xaa\xcc\x56\x4a\x14\x7a\xc6\x78\x26\x8a\x16\x18\x88\x86\x50\x83\xb7\x78\x0d\x03\x3d\x33\xe8\x4f\x61\x35\x35\x7d\x85\xa1\x29\x0b\x1d\x8e\xc4\xd3\x1c\xc9\x77\xa8\x08\x3d\xe6\xb5\x75\x9a\x3a\x4a\x5f\xb4\xb7\xea\x34\x55\xd8\x69\xb8\x2b\xc3\x85\xeb\xbe\x2a\x0b\x9c\x76\xeb\xd0\x10\xdc\x8f\x1a\xaa\x9e\xa7\xb8\x0a\x6e\x34\x58\x70\x0d\x23\xb3\xc0\x8f\xc3\x1d\x6a\xf4\xaa\x7e\x98\x4d\xe4\x8f\xbb\x6a\x63\xd5\x6e\x7e\xd6\x25\xe7\x98\x9a\xca\x19\x88\x84\xc9\xda\xc4\x5f\xb4\xc0\x1d\x50\x0d\xf0\x6a\x7d\x50\x0d\xdd\x1e\xaf\xbf\x86\x0c\xdd\x38\x9d\x24\xa0\x92\xb6\xaa\xa7\xd8\x9d\xfa\xbe\xf3\xd1\x33\xcf\x8e\x4d\x5d\x79\x9c\xf0\xad\xcc\x97\xa2\x05\x73\xba\x0d\xc6\x37\xf6\xeb\xed\x76\xa7\x2d\xcf\xb3\x91\x93\xa8\xea\xa1\x36\x56\x68\x1e\xec\x98\xc4\x47\xb2\x19\x96\x73\xcc\x75\x06\x84\x51\x3a\x37\x7a\x21\x5c\x34\x2b\x3c\x50\x46\xc6\x11\x15\x8c\x2f\x4c\x8f\x55\x30\x6b\x05\xcc\x91\x00\x44\xdb\xf2\x4b\xce\x6b\x33\x64\x53\xa3\x48\xfd\x46\x56\xa7\xf3\x5a\xf3\x8d\xad\x87\xad\xf5\x0d\x5b\x45\x6f\xa1\x77\x74\x39\x34\x85\x53\xc6\x17\x16\xb8\xcf\x56\x95\x00\x56\xdc\x60\x5c\x79\x84\x54\xdf\x03\x18\x26\xe8\xe7\x68\xd5\x31\xc2\x1e\x49\x82\x6b\xf8\x96\x31\xa2\x34\xad\x92\xc2\x7e\x53\x4c\x12\x98\x31\x60\x4b\x6c\xd2\x4d\x94\xa6\x65\x2d\x09\x44\x33\x30\xa5\xbd\xe1\xaa\x1e\x86\x29\x67\x8b\x2a\x33\x5d\x55\x44\xf9\xee\x1f\xe0\x26\x9e\x32\xfe\x13\x4a\xe7\xbe\xf3\x31\xd3\xb7\x78\x2d\x14\x75\xbd\x3d\x1b\xeb\x00\xb7\x78\xbd\xdd\x89\xa0\x34\xbd\xba\xc5\xeb\xeb\xb8\x28\xc5\xbc\x72\x52\xea\x73\x8f\x2b\x80\xde\x28\xe2\xb5\x77\xa0\x2f\xb4\x68\x36\xe1\x45\x21\xd7\x9a\x41\x0b\x55\xa2\x33\x7e\x56\x0d\x29\x95\x32\x09\xbb\x72\xfb\x4d\x83\x00\x56\x88\x4a\x0f\xd1\x4d\xfc\x07\x29\x3e\x68\xb6\x85\x56\x30\x19\x56\x7e\xb6\x33\xd4\xf0\x60\xa7\x83\xbe\xba\xee\x39\x41\xe4\xaa\x44\xe4\x38\xa0\xfe\xf6\x70\xab\xa2\x3b\x6f\xdc\x5a\xb0\xaa\xdf\x78\x13\x4b\xf6\x11\x11\x2e\xc2\xde\xc8\xea\x35\x30\x87\x75\x82\x30\x84\xab\x4a\x9d\x87\xa0\xaf\xcd\x85\xfa\xa5\x49\x93\xd4\x87\x36\x6b\x56\x9f\x74\x71\x10\x5c\x47\x5e\x83\xcd\xf2\x9b\x96\xd5\xb3\xa9\x89\xc5\xda\x85\x0c\x5d\x27\x60\xc9\x2b\x64\x14\xb7\x2e\xa7\xa1\x37\xea\x6e\x62\xda\x4e\x5a\xfd\xf5\x5b\x12\xed\x46\xaa\x0b\xc7\x2a\x86\x9b\xf1\x09\xbb\xdb\xd3\xb3\x73\x9f\xda\xec\xef\xd9\x75\xb9\x6e\xa9\x87\xd7\x64\xad\xa4\x99\x39\xad\xae\xcd\x17\xea\xdf\x59\xcd\xb7\xbe\xd6\xe1\xf6\x69\xaf\xa9\xd7\xdb\xd5\x33\x4f\x03\x9e\xda\x7a\xd6\xcf\x53\x5b\xaf\x6f\xfa\x3f\xd8\xd6\xb3\x9e\xab\x3c\xf5\xf5\x9e\xfa\x7a\xf6\xcf\x17\xef\xeb\xd9\xba\xb6\xaf\xb1\xf7\x19\x0d\xaf\xff\xc6\x8e\xd2\xee\x06\x89\x15\xbd\xcd\xab\xb9\x9e\xf0\x5d\x4d\xf8\xf1\xbb\x7d\x67\xf7\x19\x49\x8f\x11\x6d\x5f\xd6\xe3\x66\x34\x7d\x29\x83\xf7\xd4\x6f\x7f\xce\xe0\x50\xfd\xd5\x93\x06\xc3\x80\xed\x59\x43\xef\xfc\xbe\xb4\xc1\xdc\x27\xda\xcf\xff\xf6\x3c\xfd\x4a\x12\x2d\x79\x9c\x63\x21\xda\xef\x6d\x0a\xc8\x18\x1d\x48\x93\x42\x9a\x37\xbc\x7e\x95\xd8\xbc\xe6\xda\xf6\x60\xad\xef\xc9\x9a\xd7\xa7\x6e\x1f\xd0\x8c\xac\xa0\xde\x13\x87\x9e\x1e\xa8\xfd\x0f\x3e\x50\xe3\x18\x65\xbb\x36\x42\xd9\x37\xfb\x3c\xad\x31\xc2\xa7\xd7\x69\x8f\x7f\x9d\xe6\x93\xd6\x1c\x6f\x0c\x2f\xfa\x09\x6a\x34\xa6\x22\x46\x17\x20\x3d\xcf\xd7\xac\xf1\xdd\x69\x92\xad\x66\x1d\x9c\xfe\xeb\x35\x6b\xfc\xb1\x89\x52\x57\x77\x1e\xf5\x96\x4d\xae\x0b\x7c\xf8\xdb\x35\x11\x3f\x20\x55\x72\x1e\xcb\x3d\xbd\x90\xd3\x0b\x8c\xca\x3d\x62\xa7\x4a\xb1\x1e\xf5\xe6\xb0\xd6\xb6\xa6\x45\xf4\x60\x2c\x1d\x65\xd6\xed\xa4\xce\xfd\x72\xb4\xfd\xf2\xad\x45\xe6\xa5\x96\xf8\x4e\x72\x94\x9a\x8b\x9f\x4f\x8c\x50\xd3\x3d\xd5\x8f\xbe\xb4\x7b\x5d\x12\x54\xe5\xe6\x6a\xbc\xd1\xa4\xa3\x37\xaf\x9d\x5c\x46\x2d\xc6\x59\x93\x61\x6e\x79\xff\xd7\xdc\xec\xf8\x17\x56\xdb\x1e\xde\x35\x0d\x69\x07\x65\xfc\x8b\xde\xd1\xb9\x10\xe9\x3c\xe6\x2b\xb6\x5e\xe6\x54\xf5\x4d\x7b\xa1\xa5\xbf\x5f\x38\xc7\xed\x09\xab\xc0\x52\x75\x4b\x9c\xe5\xc5\x55\x75\xdb\xb5\xf5\xfa\xa7\xb8\xb2\x1e\xd7\x29\x28\x73\xb8\x1e\x30\x65\xfe\x1a\x62\xa0\x58\x38\x70\x21\xaa\xe3\x17\xde\x45\x8c\x13\xd2\xfa\x6e\x87\x9a\xbb\x9a\xce\xc2\x7a\x54\x8b\xbf\x3a\xb6\xe6\xad\x9b\x9e\xe6\xfa\x0f\x19\x6c\x17\xa9\xf9\x43\x07\x3d\x32\xd5\x39\xe8\x16\xde\x3b\xe2\xd4\xa0\xf1\xc7\xf6\xbb\x16\xbb\xc5\xb9\xed\x6d\xe6\x37\x29\x4f\xc3\xbf\x6f\x49\xa2\x0b\xcc\x67\xc6\x48\xcd\x3d\x51\xca\x68\x8a\x64\xd8\xda\xee\xd0\x12\x7a\xd4\x6d\x71\xd5\x17\x8d\xb5\x6f\x30\xcd\xe8\xc9\xba\xcf\x3d\x58\xcb\xba\x5b\x5a\x9f\xf4\x23\xd4\x56\xb8\x68\x08\x93\xbe\x56\x29\xc7\xa2\xcc\x95\x02\x22\x1d\x28\xcd\xb7\xa3\xf0\x8f\x6c\x51\x20\x8e\xc3\x89\x1e\x74\xae\x42\x54\xe2\x51\x2f\x1b\xf5\xe5\x1d\x36\x4e\x45\xbc\x8f\x54\x6b\xee\xae\x52\xe1\x21\x7b\xb4\x3a\x78\x04\x93\xf6\xd3\x2e\xf4\x95\x8e\x18\x24\x6e\x55\xeb\x48\xe5\x73\x1e\xe0\xb6\x7f\x0d\x60\x7f\x49\x6e\xc9\x6e\xfb\xc3\xdb\x26\x17\xfa\xa2\x4f\x6e\xb7\x62\xdd\x5a\x60\xdb\x81\x6e\x45\x68\xc6\x56\x2a\x39\x7b\xa3\xa8\x58\xa2\x3c\xdc\x72\x43\x95\x9d\xc6\x9f\x04\xa3\x61\x70\x7f\x1f\x4f\x90\xc0\x37\x05\x92\xf3\xcd\x26\x51\xe7\x4f\x9a\x7a\x3b\xb9\xbf\x8f\x97\x88\x8b\x98\x64\x77\x9b\x4d\x30\xec\x7e\x87\xcc\x22\x71\x33\x84\x13\x15\x99\x2d\x5a\x54\x65\xa2\x62\x2d\x91\x50\x7d\x3d\x2f\x5f\x3f\xfb\x53\xb6\xbf\x48\xcc\x97\x1d\xab\x3f\xc2\x55\x7f\x55\xb2\xf9\xe5\xfe\x1e\xd3\x6c\xb3\xf9\x77\x00\x00\x00\xff\xff\x2d\xf9\xd5\xf9\xe3\x4b\x00\x00")

func bindataWebTemplatesMonitorDetailsprocessorGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsprocessorGoHtml,
		"web/templates/monitor/details_processor.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsprocessorGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsprocessorGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details_processor.go.html",
		size: 19427,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1618393948, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsviewGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x98\xe3\x3d\x58\x42\x6c\x29\x7f\x7a\x2f\xb6\xe5\xc3\xb5\xb9\x45\x03\xa4\xd9\xa2\x0d\xba\x0f\xbb\x8b\x82\x11\xc7\x36\xbb\x32\x29\x90\x94\x9c\xac\xa0\xef\xbe\x20\x25\x4b\x94\xe2\x34\x29\x76\xfb\x60\x9b\xf3\xe7\x37\xc3\x99\xe1\x8f\x6c\xaa\x8a\xe1\x9a\x0b\x04\x92\x4a\x61\x50\x18\x52\xd7\x27\x4b\xc6\x4b\x48\x33\xaa\x75\x42\x94\xdc\x93\xd5\x09\x80\x2f\xb3\xa6\x94\x0b\x54\x4e\x33\xd6\x65\xb3\x1d\x9b\x9d\x5f\x1c\x74\xdb\xf3\xd5\x17\x8e\x7b\xa8\xaa\xc8\x70\x93\x61\x5d\x2f\xe3\xed\xf9\xea\xe4\x89\x67\x4e\x05\x66\xe0\x3e\x67\x0c\xd7\xb4\xc8\x4c\x8b\xf1\xbc\xdd\x16\x29\xe3\x62\xd3\xd9\xd9\x78\x97\xab\x3b\x7a\x9f\x21\x68\x43\x0d\xd7\x86\xa7\x7a\x19\x6f\x2f\x3b\xa4\x98\xf1\xb2\x8d\x7e\x04\x77\x76\x2f\xd9\xa3\x0f\x67\x1c\x56\x6b\xd2\x2c\xdc\xe7\x4c\x1b\xc5\x73\x64\x9e\xad\xb5\xb6\x09\xf9\x12\x2b\x53\x43\x81\x33\x03\x57\x8b\x84\x7c\xa4\xca\x70\xc3\xa5\x20\xa0\xe4\x5e\xe7\x54\x24\xe4\x82\xac\x3a\xf1\x32\x36\xdb\xef\xb8\x7f\x36\xd4\x14\x1a\xe4\x1a\xcc\x16\x21\x57\x32\x45\xad\xa5\x1a\x82\x59\x23\x7c\x05\x90\x06\x56\x28\x2e\x36\xa0\x30\x95\x25\xaa\x47\x02\xa9\xcc\x1a\x98\x4b\xb2\xfa\xd4\x4a\x7f\x08\xa9\x10\x60\xf8\x0e\x3d\xa4\x37\x64\x75\x2d\x52\xb9\xb3\xea\x3b\x45\xd7\x6b\x9e\x3e\x45\x5c\xc6\xe3\xaa\x7d\xbf\x8c\x77\x7c\x87\xb6\x0a\x39\xd5\x1a\x59\xb7\x01\xd0\x12\xd6\x54\x91\x95\xd5\xbf\x90\xf7\x6d\xb1\xbb\x47\x65\x41\x76\xa8\x35\xdd\xa0\x3e\xc0\x20\x83\x1c\x15\x68\x4c\xa5\x60\x64\xf5\xe9\xe5\x6a\x1e\xc1\xca\xe8\x66\x63\xb7\x7c\x8f\x5b\x2e\x18\xbc\xff\xe5\x03\x59\xdd\xd0\xcd\x8f\x03\x15\x39\xa3\xe6\xef\xa4\x74\xff\x68\x9e\x81\x79\x6b\x35\x2f\xe0\x88\x0e\x47\xae\xd7\x1a\x8d\x9e\xba\xd1\x2b\xed\x11\xe7\xdd\x36\xc9\xea\x67\xa7\x85\x97\xb7\x68\xc7\x03\x18\x66\xf4\xf1\x19\x24\xd7\xdb\xa3\x38\xe3\x29\xb1\x16\xa3\xf3\xb7\x34\xf6\x40\x03\x67\x09\xb1\xc0\x9f\x3b\x4e\x20\x23\x47\x6b\xe6\x1d\xfb\xd8\x1d\xf2\x11\x69\xc0\x88\x3f\x96\x3a\x55\x3c\x37\x60\x1e\x73\xbb\x11\x7c\x30\xf1\x37\x5a\xd2\x46\x4a\x3a\x92\x29\xa9\x82\x8c\x6a\xf3\xa5\x4d\x40\x43\x02\xec\x32\xca\x64\x4a\xb3\x20\x5c\x78\x56\xda\x1d\xe7\x0f\x34\x87\x04\xaa\xb3\x39\xd1\x46\xe6\x96\x63\xa6\x70\x3e\x27\x5c\x70\xc3\x69\xc6\xff\xb4\x55\x99\xc2\xc5\xdc\xf2\xb0\xc0\xd4\x34\xeb\xcb\x39\x69\xe7\xb5\x59\xbf\x99\x93\x5c\x61\x4e\xdb\xe5\x7f\xe6\x40\x54\x21\x84\x5d\xd5\x0b\x3f\x35\x8d\xa9\xbe\x93\xb7\x54\x48\x48\xe0\xfc\xec\xf0\x6f\x60\xa3\x50\x30\x54\x57\x68\x28\xcf\x6c\xfa\xeb\x42\xa4\x96\x9e\x82\xfc\x40\x54\x3a\xac\x4e\xba\xf2\xf1\xb5\xa7\x80\x24\x01\x51\x64\x59\x58\x79\x15\x57\x68\x0a\x25\x16\x9d\xa4\xee\x9d\x6d\xbc\x66\x3a\xbf\x0c\x3a\xe6\x87\xb5\x85\x1a\x44\xf4\xeb\x07\x49\x5f\xc8\x5f\x9d\x65\xd4\xf0\xe4\xef\x0b\xdf\x81\xaf\x83\x4e\x99\x65\xc8\x06\xf9\x41\x8f\x45\x74\xa3\x27\x0b\x4f\x5f\x8f\x22\x2b\x4c\xff\x2f\x98\x1b\xd5\x26\xba\x8e\x0e\x7c\xd9\xfd\x70\xda\x7f\x25\x40\x08\xfc\xf7\xbb\x36\xf3\x56\x7b\x2b\xf7\x8b\xa7\x71\x7a\xbb\x04\x02\x81\x7b\xb8\xa2\x06\x83\x3e\x81\x10\x66\xd0\x89\x47\x61\x3e\x1b\xaa\x8c\x33\x0a\x21\x76\xcd\x8e\xce\x9e\x0b\x61\x49\x05\x12\x78\x56\x7f\x43\x37\x4f\xf7\xfa\x7e\xbf\x83\xd9\x58\xd8\x70\xc1\x62\xdc\xad\x54\x16\xc2\x3c\x17\xc5\xb2\x54\xaf\xf3\x5d\xe3\x18\x32\x34\x13\x0d\xe9\x16\xd3\x3f\x80\xaf\x61\x8f\xb0\xa5\x25\x02\x85\x5c\x61\xc9\x65\xa1\x81\x51\x43\x2d\xff\x50\xc1\xc0\x7e\x9b\x2d\xee\xc0\x48\xfb\xcd\xd5\x10\x2c\x95\x4a\x61\x6a\xa0\xa4\x59\x81\x7a\x94\x86\x3d\xb7\x87\x33\x3b\x38\xc3\xd1\x06\x4d\x60\xb6\x5c\x87\xe3\xa1\xea\x5c\x46\x03\x15\xc7\xc0\xf8\x7a\x6d\xb3\xe8\xd2\x74\x85\x02\x2e\x5a\x0a\xd6\x03\x07\x1b\xdf\xb2\xe3\x95\xf5\x4a\x20\xe8\x86\x02\x66\x7d\x5e\x76\xed\xf7\x72\x80\xd0\x8e\x78\xe1\xce\xa0\x4f\x0f\xa3\xd4\x60\xdc\xf4\xf1\xdc\xb4\x6c\xee\xc7\x1d\xe9\xc2\xf8\x90\xea\x62\x00\x5d\x0f\x33\xf2\x7b\xde\x06\xb9\x16\x79\x61\xa2\x77\x56\x31\x08\xe0\xc9\x9f\x03\xf7\x86\x64\x00\xe6\x2e\xb2\x23\x60\x4e\x7e\x1c\xcc\x3f\xd0\xc3\x46\xeb\xb6\xd1\xd3\xa6\x5b\xe1\x93\x39\x76\x97\xd7\x38\x85\x2b\x2b\x0c\xe3\x9e\x5c\x07\x6e\x0d\xfd\xc1\x64\x69\xd8\x6a\x72\xda\xf8\x75\x8c\x19\x19\xf9\x13\x7f\x40\x16\x9c\x85\xa7\x93\x65\x6c\xd8\xea\x37\x31\x39\x1d\x6c\xdc\x73\x2c\xf4\x0b\x46\x3e\x65\x9c\x4e\xf4\xab\x6c\x6d\x51\x5f\x9f\x86\xc7\x08\x2f\x58\x76\xed\x7f\x3d\xf8\xa1\xc7\x3f\x56\x95\x43\x1b\x9a\xe1\xbc\xa1\x9b\xd7\xbb\xbb\x76\x76\xe6\x17\xa1\x57\x33\xef\xbe\x5a\x0c\x2f\xac\x8d\x92\x45\xfe\x6e\x4b\xb9\x80\x04\xbe\x46\xa9\xfd\xe5\xdd\x81\xd1\xc7\xfe\x9e\x5c\x0c\x1c\x3b\x9b\x1b\xae\x0d\x24\x1e\xd0\x20\xb7\x68\x47\xf3\xa0\xbb\xfe\xca\xa9\xf3\xbb\x1e\xdf\x59\xde\x68\x7d\x8d\xa8\xd6\x7c\x23\x82\x27\x06\x00\x55\x3d\x3d\x22\x2d\x8f\x09\x2b\x98\xdc\xca\xfd\x64\xde\xdf\x28\xe1\x31\x33\x80\x49\xb7\x91\x09\xcc\x6d\x76\x1a\xaf\x85\x09\xda\x34\x8f\xf9\xd4\x4f\x64\xe1\x88\x3a\xc2\xa8\xe1\xe4\x20\x8c\xb4\x54\xe6\xed\x63\xe0\x45\x69\x95\x81\x7f\x1e\xe3\x18\xac\x21\xd0\x2c\xeb\x0b\xab\x7d\x75\xf3\xb0\x98\x02\x0a\x83\xca\xdd\x0e\x0a\x77\xb2\x44\x77\x61\x0c\x1a\xc3\x9a\x57\x9a\xc6\x0c\x53\x13\x90\x7f\x8f\x9e\x8f\x61\xab\xf9\x5f\x96\x05\xa4\x3f\xbb\xf7\xf2\x81\x84\x91\x05\x0b\x06\x9d\xf5\xb6\xc6\xa2\xad\xd9\x65\xc1\xb1\x27\xce\xc0\xca\xa5\x18\x84\x11\xcd\x73\x14\x2c\x20\x46\x91\x30\x72\xff\x11\x45\x16\x90\x41\xc4\x29\x18\x55\x60\xf8\x5a\xe0\x07\x6e\x82\x30\x6a\x36\x1e\x84\x87\xf2\xf5\x23\xbd\xe7\x82\xc9\xbd\x25\xbe\x6b\x9b\x43\x49\xb3\x7e\xf4\x42\xe8\x47\x8e\x5d\x46\xdf\xb4\x14\x01\xa9\xaa\xe8\x9e\x6a\xfc\x9a\x53\xb3\xad\xeb\xd8\x6e\x3f\xb6\xf5\x8a\xab\x2a\x2a\xa9\xd2\x11\x67\x0f\x75\x4d\xa6\xc3\x77\x64\x97\x54\x3d\x85\x8b\xb3\xb3\xb3\xbe\x93\xf6\x56\xb6\x3d\xe4\x06\xda\x57\x6f\xf6\x78\xf2\x4f\xc5\x6c\x9f\xf1\xcd\x2b\xdd\xfd\x69\xa3\x79\xd2\xb7\x5f\x55\x85\x82\xd5\xf5\xc9\x5f\x01\x00\x00\xff\xff\xb6\xfc\x7d\x2a\x1a\x11\x00\x00")

func bindataWebTemplatesMonitorDetailsviewGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsviewGoHtml,
		"web/templates/monitor/details_view.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsviewGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsviewGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details_view.go.html",
		size: 4378,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1602774383, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xc1\x8e\xda\x30\x10\x86\xef\xfb\x14\xa3\x88\xf6\x54\x12\x15\xed\x69\x1b\x90\xda\xaa\x42\x6c\xd1\x06\xb5\xa1\xd7\xca\xe0\x81\x58\xf5\xda\x96\xe3\x40\x2b\xcb\xef\x5e\x39\x90\x6c\x48\xa0\x39\xd0\x5d\xb5\x17\xb0\x3d\xbf\xc7\xdf\x4c\xc6\x1e\x6b\x29\x6e\x98\x40\x08\xd6\x52\x18\x14\x26\x70\xee\x26\xa6\x6c\x07\x6b\x4e\xf2\x7c\x1c\x68\xb9\x0f\x26\x37\x00\xcd\x35\x2f\x25\x4c\xa0\x2e\x2d\x6d\x1b\x1f\x3e\xd2\xe1\xdb\xd1\xd1\x06\x10\x67\xa3\xc9\x42\xcb\x35\xe6\xb9\xd4\x79\x1c\x65\xa3\xca\x62\xed\x60\x45\x72\xfc\xae\x88\xc9\xe0\x6e\x0c\x61\x3d\x73\xae\x96\x68\x22\xb6\x08\x03\x26\x28\xfe\x7c\x03\x03\x55\x79\x2a\x37\xd4\xb3\xbc\xde\xd1\x87\xd3\x56\x28\x22\x90\x43\xf9\x3b\xa4\xb8\x21\x05\x37\x27\xda\x33\xea\x61\x86\x84\x32\xb1\x6d\xe9\x7c\xa8\xb7\xa7\x42\xc3\x0c\xc7\x60\x12\x13\xc8\x34\x6e\xc6\x41\x33\x62\xe7\xa2\x1a\x3f\xb2\xf6\x10\xa1\x73\xc1\xc4\xda\xa7\x28\xc3\xa9\x26\x2a\x0b\xa7\x5a\x16\xca\xb9\x38\x22\x9d\x23\xa3\xec\xb6\x85\x1b\x51\xb6\xeb\x8b\x60\x25\xe9\xaf\x0e\xbe\xb5\xb0\x67\x26\x83\xc1\xd6\x1f\xea\x13\xdc\x06\x81\x46\x9a\x8f\xae\x0b\xde\x76\xd3\xf8\x6a\x48\xb7\x38\xa3\xfe\xbb\xf9\x51\xe9\xb1\xf4\x1d\xce\x84\x2a\xcc\x57\xa3\x91\x3c\xe6\x1d\x9f\x00\x31\x67\x93\xd9\xc3\x62\x99\xde\xf9\x22\xf1\x7b\xc3\x54\x2a\xb6\x76\x0e\x5e\x6b\xa2\xf5\x3b\xb0\x56\x69\x26\xcc\x06\x82\x57\x69\x70\x70\x1f\x7e\x94\x14\xd7\x3e\x4b\x9c\x9d\x63\x42\x41\xcf\x1c\xd5\xcf\x7a\x2f\x99\x30\x29\x59\x71\xbc\x84\x7a\x9f\xcc\x1e\xfe\x09\xd4\xb9\x94\x3f\x0a\xf5\x47\xd6\x79\x92\x7c\x5e\x2e\x5e\x02\xb6\xaa\x25\x79\x24\x6a\x70\x4e\xeb\xc5\x0b\x94\xd3\x2f\xc9\x72\x91\xbe\xff\x30\xff\x54\x92\x3e\x39\xe9\xe1\x6d\x08\xaf\xa2\xe6\x52\xaa\xd3\xbc\xaa\x43\xb5\x5e\xce\xea\x21\xa7\x7e\x63\x0f\x63\x29\x79\xa6\x02\x48\x0a\xd3\x7b\xb1\x92\x65\xfa\x02\x37\x2b\x8e\xba\x2f\x83\xb5\x80\x82\xb6\x1f\x91\xce\x83\xd5\x5a\x38\x99\x36\x0f\xab\x0d\xc7\xc1\xd5\x6d\xea\x1b\xc3\xfd\xd5\x1d\x6a\xc7\x70\x5f\x6a\xfd\xe0\xff\xec\x4b\x9e\xbc\xdd\x92\xfc\x5a\x55\x2a\xcf\xda\x87\xfe\x5a\x39\x1c\xff\x2a\xc9\xef\x00\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func bindataWebTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}



func bindataWebTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/index.go.html",
		size: 2283,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\x83\x30\x10\x46\xf7\x9e\x62\x08\x2e\xfe\x1f\x4a\xb2\x2f\x31\x5b\x2f\xd0\xbd\xa4\x3a\xd6\x80\x4d\x42\xa2\x6d\x61\x98\xbb\x97\x54\x70\x25\xa5\xab\x99\xc5\xe3\x7b\x8f\x68\xc0\xd1\x79\x04\x71\x47\xbf\x76\x7d\xf0\x0b\xfa\x45\x30\x57\x44\xc9\xfa\x1b\x42\xed\xfc\x80\xaf\x13\xd4\x31\x85\x1e\xce\x0d\xc8\xf2\x60\xce\x21\x65\xe6\x0a\x40\xcf\xce\x68\x0b\x53\xc2\xb1\x11\x44\xb5\xbc\xda\x8c\x5d\xb4\xcb\xc4\xac\x76\x56\x11\x6d\x4b\xcc\xc2\x10\x7d\xd6\x64\x9b\x6c\x9c\x64\x9b\xc2\x1a\x99\xe1\x6f\x87\xff\xb5\xb2\x46\xab\xd9\x99\x8a\x08\xfd\xf0\x35\xe7\xe1\xf0\xf9\x43\x49\xc1\x0e\x23\x2e\x21\xba\xbe\xe8\x0b\x71\x68\xde\xee\x3b\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func bindataWebTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}



func bindataWebTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/menu.go.html",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x08\xa3\x39\xb4\xb2\xd0\xe4\xd6\x50\xea\xa5\x39\x15\x28\x50\xf4\xd0\x63\x40\x89\x23\x89\x28\x4d\xaa\xe4\x30\x8e\x21\xe8\xbf\x2f\xf4\x19\x5b\x96\xed\x2c\x16\x0b\xec\x45\xc9\x68\x3e\x38\xef\xcd\xe3\x58\x4d\x23\xb1\x50\x06\x81\xe5\xd6\x10\x1a\x62\x6d\x7b\xc7\xa5\x7a\x83\x5c\x0b\xef\x13\xe6\xec\x9e\xa5\x77\x00\x00\xc7\x6f\xbb\x60\xa1\x0c\xba\xd1\xb7\xf4\x7f\x64\xad\x79\x73\xab\xa3\x9d\x8c\x7e\x7d\x5c\xc4\x00\xf0\xea\x31\xfd\x3b\xa0\x3b\xc0\x9f\x78\xf0\x3c\xae\x1e\x97\x11\x4d\xa3\x0a\xd8\xa2\x73\xd6\xb5\xed\x32\xfb\xe8\x0c\xa1\xd1\x11\xf4\xcf\x48\x0a\x53\xa2\x9b\x0c\xe5\x77\xca\x7b\x95\x69\x64\xe0\xac\xc6\x31\xf6\xac\x17\x00\x9e\x05\x22\x6b\x80\x0e\x35\x26\x6c\x30\xd8\x0c\x42\x5b\x8f\x0c\xa4\x20\x31\xd5\x9c\x2b\x71\x5f\x0b\x93\xfe\x44\x6a\x87\xfe\x99\xc7\xbd\xc5\xe3\xa1\xc0\xca\x31\x9e\x9c\x35\x65\xfa\xd2\x81\xba\xe7\xf1\x68\x42\xd3\x0c\x38\xb7\x2f\xeb\x68\x63\xa9\xde\xce\xe9\x41\x23\xcf\x42\x07\xd2\xf6\xc2\x19\x65\xca\x4f\xd3\x36\xc6\xff\xf0\xbc\xfd\x3b\xf4\x79\xca\xdc\xd8\xfc\xb7\x73\x37\xb1\xe7\x6d\x70\x39\xfa\x15\x3f\x2f\xac\xdb\x81\x35\x3e\x64\x3b\x45\x09\xdb\x2b\x23\xed\x7e\xab\x6d\x2e\x48\x59\x03\x09\x3c\x34\xcd\x36\x13\x1e\x5f\x6b\x41\x55\xdb\xc6\x4d\xb3\xf5\xa8\x31\x27\x94\xaf\x43\xdd\xb6\x8d\x1f\xe0\x67\xf0\x28\x5c\x5e\x6d\xdf\x84\x0e\xf8\x0c\x0e\x29\x38\x03\x85\xd0\x1e\x9f\x57\x78\x5e\x0e\x4f\x99\x3a\x50\x54\x3a\x1b\x6a\x38\xfa\x3f\xd2\xe5\x85\xe4\x2b\x05\xa2\x8c\xcc\x95\xac\x9b\x63\xce\xc8\x40\x46\x26\x92\x58\x88\xa0\x09\xa4\xb3\xb5\xb4\x7b\x13\x91\x2d\x4b\x3d\x09\x60\x30\x12\x36\x79\x59\xba\x46\x4d\x2f\x8b\x59\x3f\xc2\x61\x27\x95\x5b\xea\x38\xe9\x34\xe8\x29\x7d\xee\x63\x87\x26\xdc\x00\x08\xfd\xf0\x37\xf3\xe4\xe0\xb7\x04\x8e\xe7\xf8\x89\x64\xd7\xad\x1e\xd8\x28\x23\xf1\xfd\x17\xd8\x0c\x88\xfa\x3a\x97\xf5\x74\xd6\xbd\x56\x29\x17\x50\x39\x2c\x12\x76\xdc\x4f\xaf\xa4\xcd\xc4\x52\xc7\xdd\x6c\xf0\x58\xa4\x3c\xd6\xea\x33\x00\xd7\x55\x7f\xd2\x41\x1c\xf4\x15\x05\xad\x5d\xa6\x23\x77\xaf\x2a\x50\x32\x61\x83\xbc\xd9\xa8\x18\xc2\x77\x9a\xf5\xd2\xdd\xa1\xa8\xfb\x59\x71\x56\x33\x70\xf8\x7f\x50\x0e\xe5\xf7\x97\xed\x70\x69\x2f\xc9\x96\xa5\xff\xf4\x2d\xdf\x96\xd9\x15\x12\x2e\xb8\x78\xdc\x61\x3e\x7f\xdf\x34\xa8\x3d\xae\xed\x99\xeb\x7b\x7a\xb1\x95\xff\xb2\x30\x4a\x0c\x0a\x1b\x8c\xbc\x87\x3f\x94\x84\x83\x0d\x50\x58\x57\x22\x01\x59\x10\x44\x22\xaf\x80\x2a\xdc\xfd\x7e\xa1\xcb\x35\x79\x2c\x42\x17\xe6\xb0\x2e\xfb\x15\x76\x94\xc7\x2b\x17\xaf\x7f\x2b\xd4\xc2\xa0\x86\xfe\x39\x6f\x8b\xc1\xf2\x21\xcf\xd1\xfb\x2b\x5f\x12\x43\x5c\x85\x42\x76\x04\xac\x70\x5c\x3d\x9d\x86\x92\x22\x8d\xfd\x96\xf9\x0f\x0f\xdd\x35\xa9\x9e\xd2\x6b\xd8\xd6\x0f\xcc\xac\x3c\xac\x9d\x56\x3b\xec\x4a\x8f\xd8\x79\xdc\xd9\x5f\xc5\xdc\x07\xd7\xa3\x6b\xfc\x33\x79\xbe\x04\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func bindataWebTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}



func bindataWebTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/query/index.go.html",
		size: 2479,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html":               bindataWebTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html":               bindataWebTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html":               bindataWebTemplatesCommonMenuGoHtml,
	"web/templates/index/index.go.html":               bindataWebTemplatesIndexIndexGoHtml,
	"web/templates/monitor/details_processor.go.html": bindataWebTemplatesMonitorDetailsprocessorGoHtml,
	"web/templates/monitor/details_view.go.html":      bindataWebTemplatesMonitorDetailsviewGoHtml,
	"web/templates/monitor/index.go.html":             bindataWebTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html":              bindataWebTemplatesMonitorMenuGoHtml,
	"web/templates/query/index.go.html":               bindataWebTemplatesQueryIndexGoHtml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"web": {Func: nil, Children: map[string]*bintree{
		"templates": {Func: nil, Children: map[string]*bintree{
			"common": {Func: nil, Children: map[string]*bintree{
				"base.go.html": {Func: bindataWebTemplatesCommonBaseGoHtml, Children: map[string]*bintree{}},
				"head.go.html": {Func: bindataWebTemplatesCommonHeadGoHtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesCommonMenuGoHtml, Children: map[string]*bintree{}},
			}},
			"index": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesIndexIndexGoHtml, Children: map[string]*bintree{}},
			}},
			"monitor": {Func: nil, Children: map[string]*bintree{
				"details_processor.go.html": {Func: bindataWebTemplatesMonitorDetailsprocessorGoHtml, Children: map[string]*bintree{}},
				"details_view.go.html": {Func: bindataWebTemplatesMonitorDetailsviewGoHtml, Children: map[string]*bintree{}},
				"index.go.html": {Func: bindataWebTemplatesMonitorIndexGoHtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesMonitorMenuGoHtml, Children: map[string]*bintree{}},
			}},
			"query": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesQueryIndexGoHtml, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
