// Code generated by go-bindata.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/monitor/processor.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html
// web/templates/graph/index.go.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x01\xaa\xc9\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x02\x14\x07\x04\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func webTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}

func webTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/base.go.html", size: 141, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x4d\x73\xe2\x38\x10\xbd\xe7\x57\xb8\x7c\xe1\x90\xb5\x85\x81\x5d\x48\x0a\x67\x2b\x4b\x76\xf8\xc8\x17\x81\x04\xc2\x5c\xa6\x84\xd5\xb6\xe5\xc8\x92\x23\xc9\x80\x87\xe1\xbf\x8f\x1c\x86\x84\xca\x64\x3e\x72\x18\x4e\xea\x47\xf7\xeb\xf7\x9e\x55\x5a\xaf\x09\x84\x94\x83\x65\xc7\x80\x89\xbd\xd9\x1c\xb4\xcb\xc3\xc9\x81\x65\x7e\xed\x14\x34\xb6\x82\x18\x4b\x05\xda\xb7\x73\x1d\x3a\x2d\x7b\xff\xaf\x58\xeb\xcc\x81\xc7\x9c\x2e\x7c\x7b\xe5\xe4\xd8\x09\x44\x9a\x61\x4d\xe7\x0c\x6c\x2b\x10\x5c\x03\x37\x73\x14\x7c\x20\x11\xec\x26\x35\xd5\x0c\x4e\xd6\x6b\x37\xc3\x11\x7c\x7a\xaa\x36\x9b\x36\xda\xc2\x7b\xe4\x1c\xa7\xe0\xdb\x04\x54\x20\x69\xa6\xa9\xe0\x7b\x94\xf6\xf7\x8d\x0b\x0a\xcb\x4c\x48\xbd\xd7\xb5\xa4\x44\xc7\x3e\x81\x05\x0d\xc0\x79\x2a\xfe\xb2\x28\xa7\x9a\x62\xe6\xa8\x00\x33\xf0\xbd\x1d\x11\xa3\xfc\xc1\x8a\x25\x84\x7e\xa5\x34\xa5\x8e\x11\x0a\x0d\x8d\x72\x23\x21\x22\x06\x38\xa3\xca\x35\xe6\x50\xa0\xd4\xbf\x21\x4e\x29\x2b\xfc\xeb\x0c\xf8\xe1\x18\x73\x75\xd8\x11\x9c\x00\x57\x40\x8e\xeb\xd5\xea\x97\x67\xbc\x62\x49\x60\x7e\x45\xe9\x82\x81\x8a\x01\x74\xc5\xd2\x45\x06\x7e\x45\xc3\x4a\x97\x4c\x95\xfd\xe5\x65\xaf\xfd\xd2\x6b\x6f\xd5\xd8\x3b\x35\x29\x5e\x05\x84\xbb\x73\x21\xb4\xd2\x12\x67\x65\x51\x0a\x7a\x06\x50\xdd\xad\xbb\xcd\x92\xf6\x05\x73\x53\x6a\xba\x94\xb2\x8d\x6d\x0d\x91\xa4\xba\x30\x3b\x62\x5c\x6f\x35\x9c\xff\x26\x33\x4a\xc7\xfd\x0f\x70\xee\x91\x6e\x3a\x18\x9d\x3e\x14\x41\xde\x3b\xed\x8d\xa2\x7a\xed\x3a\xbd\x0b\x96\xcb\xa6\xe0\xf5\xd1\x8c\x44\x8d\x09\x3e\x1c\xa6\xe3\x5b\xf5\x19\x9d\xff\xd3\x5a\xcc\xc9\xff\x49\xdc\xc8\x4d\xce\x52\x28\x25\x24\x8d\x28\xf7\x6d\xcc\x05\x2f\x52\x91\x2b\xfb\x4f\x9b\x72\x74\x0c\x29\xfc\xcc\x9a\xec\x15\xe2\xca\xa3\x23\x35\xb9\x9f\x34\xf8\x59\x75\x90\x6b\xc6\xbb\x58\xb1\xce\x20\xef\x34\xf3\x65\x42\xf2\xe9\xd1\x78\x22\x2f\x16\xa3\x99\x10\xc3\xac\x36\x9f\xce\xa2\x34\x1a\xdc\xf4\xef\x97\x0c\x8d\xb3\x5f\x59\xdb\xde\x48\x4b\xc9\xc0\xb7\x11\xc2\x09\x5e\xbd\xbe\x26\x25\x86\x18\x9d\x2b\x94\x3c\xe6\x20\x0b\xe4\xb9\x9e\xe7\x56\xbf\x55\x4f\xda\x13\x43\xd7\x46\x5b\xaa\x37\x78\xdf\x1b\x51\xf2\xfa\xb3\x27\x6f\x46\x73\x1b\xfc\xdd\xbf\xa1\xf3\x6a\xad\xf9\xb8\x28\x92\xf1\x65\xd8\x4b\xae\x2f\xf1\xc5\x43\x98\x4f\x27\xab\x8f\xab\xbb\x21\xef\x0c\x4e\x9b\xac\x96\x76\xa6\x57\xfd\xac\x7b\x94\x76\x3b\x67\xad\x65\xf7\xaa\x1f\x0c\xcf\x9a\xb7\x2b\xfc\xe3\x68\x7e\xc3\x8b\xd1\x9e\x98\x7c\x98\xc8\x49\xc8\xb0\x84\x57\x51\x31\x41\xb0\x8a\x8d\x70\xd4\x70\xbd\xa6\xeb\xed\x80\x77\xa4\x45\xea\x66\x81\x90\x91\x39\xb8\x8b\xc6\x1b\x93\x6d\xb4\x7d\xde\xd6\x6b\xe0\xc4\xbc\x76\x5f\x03\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func webTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}

func webTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/head.go.html", size: 1280, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x51\x4e\xc3\x30\x0c\x86\xdf\x7b\x0a\xcb\xef\x2c\x17\xc8\xfa\xce\x29\x26\xb7\xf1\xd4\x89\xe0\x4e\x4d\x82\x90\xac\xdc\x1d\xc3\x9a\x00\xdd\x53\x6c\xfd\x9f\xff\xdf\xb1\x6a\xe0\xeb\x4d\x18\xf0\x9d\xa5\x60\xad\x83\x17\xfa\x80\x39\x52\x4a\x67\xb4\x72\xa2\x0d\x1e\xcf\x8b\x91\x54\x62\xc6\x71\x00\xf0\xe1\xd6\xa9\x79\x95\x4c\xe6\xb1\xfd\x28\xff\xb5\x7d\x74\x61\x0a\x5d\x37\x82\x0e\xfa\xb4\x91\x04\x84\x65\xe3\xeb\x19\x55\x4f\x13\x25\xbe\xdc\x29\x2f\xb5\x3a\x1c\x5f\x25\xf0\xa7\x77\xb4\xdb\x3b\xf3\x7f\x4e\x9a\xd7\x18\xe9\x9e\xb8\x6d\xdb\xfa\xdf\xd0\x12\xff\xa4\x36\xcc\x9e\x4e\xa8\x4e\x71\x9d\xdf\x1e\xb7\xb8\x7c\x7f\x8b\x25\x23\x9c\xec\x2a\x0d\x60\x09\xbd\xf3\xae\xc4\xc3\x4a\x7b\xe1\x9d\xd9\x8e\x83\x2a\x18\x0f\x36\xf0\x15\x00\x00\xff\xff\xc7\x56\xa2\x02\x67\x01\x00\x00")

func webTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}

func webTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/menu.go.html", size: 359, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x4d\x6e\xc3\x20\x10\x85\xf7\x39\xc5\x08\x65\x59\xc7\x6a\x94\x55\xe5\xb0\x69\x36\xd9\xf5\x06\x15\x09\x93\x18\x89\x82\x05\xf4\x17\x71\xf7\x8e\x5d\x9b\xc4\x76\xd4\x6c\x6c\xcf\xbc\x6f\xcc\x7b\x40\x8c\x12\x4f\xca\x20\xb0\xa3\x35\x01\x4d\x60\x29\x2d\x2a\xa9\x3e\xe0\xa8\x85\xf7\x5b\xe6\xec\x27\xe3\x0b\x80\xeb\x5e\x8b\x0a\x1a\x72\x9d\x32\xd5\x74\xf1\x26\x8b\xc7\x75\xaf\x91\x5a\xaf\xf9\x8b\xb3\x47\xf4\xde\x3a\x5f\x95\x54\xf6\x4a\x8c\xcb\x83\xf0\xf8\xda\x88\x50\xc3\xd3\x16\x56\xb9\x22\x13\x03\xe2\x84\x39\x23\x2c\x95\x91\xf8\xf5\x00\xcb\x66\xf8\x53\x37\x90\x2b\x9f\x27\xee\xd9\x99\x12\x8d\x30\xa8\xa1\x7b\x16\xb4\x17\xe2\x5d\x87\x11\x7b\x83\x2e\x6a\x14\x52\x99\xf3\x84\x6b\xa3\x6e\xc6\x60\x50\x41\x23\xe3\x95\x80\xda\xe1\x69\xcb\xae\x13\xa7\x54\x66\xfb\x25\x09\x5d\xc2\x94\xd8\x65\xb3\xe0\xd2\xad\x4a\x31\x5b\xac\xac\x37\x7c\x31\x76\x5a\x92\xd5\x7b\xe6\x0f\x56\x7e\xcf\x9d\x4b\x3d\x50\x92\xf2\x59\xa7\x7e\xda\x43\xd6\x33\xb0\x45\x03\x7f\xd6\x8a\xee\x0a\xec\x77\xb4\x62\xb8\x85\x48\x4e\xde\x73\xbc\xd5\x1f\xbf\xdf\xb5\x41\x48\x9b\x25\x91\x9a\xff\x1f\x64\xd2\x18\x95\x31\xa2\x91\xfd\xf9\x67\xa1\xff\xe8\x5f\x03\xf2\x1b\x00\x00\xff\xff\x68\xfb\xe0\xd6\xef\x02\x00\x00")

func webTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}

func webTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/index.go.html", size: 751, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8d\xc1\x0a\xc2\x30\x10\x44\xef\x7e\xc5\x12\x7a\x94\xe6\x2e\x69\x2e\x7a\xf1\x2b\x4a\x6c\xb6\x36\x50\x37\x25\x89\x20\x2c\xfb\xef\x6e\x2b\x78\x9a\x81\x19\xde\x63\x8e\x38\x27\x42\x30\x2f\xa4\xf7\x38\x65\x6a\x48\xcd\x88\x9c\x98\x4b\xa0\x27\x42\x97\x28\xe2\xe7\x0c\xdd\x56\xf2\x04\x97\x01\xfa\xbd\x60\xad\xb9\x54\xbd\x01\xb8\x35\x79\x17\x60\x29\x38\x0f\x86\xb9\xeb\x1f\xa1\xe2\xb8\x85\xb6\x88\xd8\xff\xd7\xea\x72\x90\x44\x8c\xd7\xbe\x0f\xfd\x75\x4d\x6a\xbb\xdf\x44\x9c\x0d\xde\x59\x25\xa9\x17\x29\x1e\xfe\x5f\x7e\x03\x00\x00\xff\xff\x05\x69\x6c\x01\xa2\x00\x00\x00")

func webTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}

func webTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/menu.go.html", size: 162, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorProcessorGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x59\xdd\x8f\xdb\x36\x12\x7f\xdf\xbf\x82\xd5\x21\xb5\x54\xdb\xb2\x37\xc9\xf5\x61\x3f\x5c\xdc\xe1\x7a\x68\x80\xe6\x03\x49\xae\x7d\x58\x04\x06\x2d\xd1\x36\xb3\x94\x28\x88\xb4\xbd\x0b\xd7\xff\xfb\xcd\x90\x92\x4c\xc9\xf4\xda\xb9\x6b\x37\x0f\x0e\x45\xfe\x38\xdf\x1c\xce\x70\xb7\xdb\x94\xcd\x79\xce\x48\x90\xc8\x5c\xb3\x5c\x07\xbb\xdd\xc5\x4d\xca\xd7\x24\x11\x54\xa9\xdb\xa0\x94\x9b\x60\x72\x41\x88\x3b\x87\x50\x0a\x9b\x4a\xb3\xd2\x5d\x13\xc3\x2c\x1d\x5e\xbe\xf4\xac\x15\x34\x67\x82\x98\xdf\x21\xb0\xa5\x2b\xa1\x2b\xd4\x71\xdc\x92\xd1\x94\xe7\x8b\x06\x07\xc8\xe5\xe5\x64\xbb\x8d\x8b\x52\x26\x4c\x29\x59\xbe\xa3\x19\xdb\xed\x6e\x46\x30\x5d\xd3\x1a\x01\xb1\xa3\x84\x87\x33\x99\x3e\xba\xf4\x34\x9d\x09\x56\x43\xec\x87\xf9\x1d\x2a\x5d\xf2\x82\xa5\x0e\x16\xd1\x28\x91\x3b\x83\x73\x65\x7b\xc2\xc0\x26\x9f\x91\xc8\xcd\x08\x46\x87\x8b\x44\x73\x2d\x18\x4a\x54\xc2\x88\xcb\x9c\x2c\xa9\x5a\x06\x93\x0f\xf5\xf7\x89\x7d\x9f\x34\xd5\x2b\x45\xe4\x9c\x80\x3c\xa4\xb1\x45\x40\x26\x76\xe5\xc4\xf6\xb7\x80\xa6\x0b\xa6\xea\x9d\x2c\x25\x05\x2b\x89\x62\xe0\x5a\xd0\xf7\x23\xd5\x8c\x84\x99\x5a\x8c\x54\x74\x82\xd2\xfb\xf9\x5c\x31\x4d\x36\x4b\x56\x32\x2b\x4b\xa3\x91\xd2\x30\x44\xf3\x7d\xc2\xc1\x09\x3a\xef\x56\xd9\x0c\x24\x00\x85\xb2\x5a\x36\x41\x17\x0b\x70\x3d\x99\xb1\x25\xcf\x53\xf2\xcb\xef\x6f\x83\x89\x65\x37\xfc\x95\x2e\x4e\xd0\xfb\x85\x2f\x96\x64\x03\x7a\x94\x24\xa3\xe5\x3d\x09\xa5\x15\xb4\xb2\x58\xce\x1e\x74\xcd\x09\x18\x20\x1b\x50\x5d\xad\x32\x96\x46\xc1\x04\x58\x9d\x20\xff\xb3\xd2\x3c\x03\xea\x29\x4c\x64\x0c\xa9\x96\x60\xbb\x35\x2b\x1f\x09\xcf\x2b\x3b\xaa\x60\xf2\xf3\xe7\x8f\x24\x3c\x69\x43\x70\xc2\xa2\x04\x59\x5a\x64\x64\x89\x2e\x49\xe0\x48\xa2\x88\xb0\x02\xe6\xa8\x4d\x81\x1a\x2c\x37\x19\x91\x79\xc2\xea\x1d\x68\xe8\x0f\x15\xa1\x43\x7e\x30\xd3\x8a\x51\x44\x74\xe2\xf8\x46\xe3\xc1\x20\x3c\x75\xa2\xf2\x37\xce\x36\x41\x67\x1f\xa2\x9c\xd3\x33\x32\x67\xa5\x73\xf4\xec\xd1\x57\x09\x9c\x1f\x4d\xf4\x63\x01\x4a\x6a\xb0\xf8\xe8\x2b\x5d\x53\x3b\xdb\x50\x5d\xd3\x12\x54\xc8\x53\x56\x36\xb1\xaf\xc8\x2d\x99\xaf\xf2\x04\xc7\x61\x23\x8b\x8a\xb6\x0d\xd7\xc2\x85\x4e\xe3\x82\x27\xf7\xff\x7c\x74\xa0\x83\xfd\xfe\x35\x15\x2b\x36\x20\xf7\xec\x71\x40\xe4\xec\x2b\x4b\x74\x44\xb6\x8e\x46\x25\xd3\xab\x32\xc7\xf5\xd8\x04\xac\xfa\x9d\xeb\x65\x18\x2c\xe4\x3d\x8d\x0f\xd3\x4c\x10\x5d\x37\x7b\x77\xce\x18\xb5\x40\xf6\xbf\x72\xa5\x8d\x48\x73\x41\x35\xe4\xd3\x70\x1a\x67\xb4\x78\x52\x32\x70\x28\x7b\x88\x5c\x91\x90\x58\x22\xb3\x42\xe6\xe0\x7d\xd4\xd0\x40\x62\x55\x08\xae\xc3\x20\x0e\xa2\x58\x09\x9e\xb0\xf0\x25\x08\xe0\x6c\x1b\x8d\x08\x9f\x3b\x1b\x63\xc1\xf2\x05\x44\xd9\x77\xb7\xe4\xd5\xc0\xc4\x4c\xc6\x20\xa3\x25\x8a\x70\x45\x28\xd1\x12\xcc\x46\x54\xc1\x12\x3e\x87\x81\x5d\x6b\x93\x2b\x29\xec\x2a\x61\x2b\xcd\x61\xc3\xfe\x64\x6b\xa9\xa9\x70\xa0\x7c\x1e\x7e\x67\x65\xe4\x79\x22\x56\x29\x53\xd6\x80\x41\x44\xfe\xf8\xe3\x88\x44\x6d\x2f\x34\x7e\xb8\xfb\x72\xed\x4c\xef\x5a\x56\x01\x73\xdd\xf5\xac\x9c\x39\x78\xa3\xf7\x05\x4c\xe3\x10\xff\x2a\x79\x6e\xcc\xd3\xb2\x4a\x4d\xd7\x6c\xff\xe2\x7a\x0f\x6c\x52\xae\x98\x8b\x06\x95\x31\x0b\x48\xc1\x62\x21\x17\xa1\x39\x07\x44\x80\x4b\x5d\xb7\x8f\x46\x2e\xa6\x76\xba\x4b\xa6\x0e\x86\xcf\x25\x63\x26\x18\x30\x04\xa6\xf1\xa2\x94\xab\xa2\x0a\x53\xdc\x32\x68\x07\x79\xe4\x89\x4a\x9c\x8f\xf7\x1a\xc7\x6a\x35\xc3\x4b\x29\x5f\x84\xe3\xc1\xc1\x22\x5c\x60\xfa\x0d\x7a\xe1\xfd\xdc\x98\x21\x6a\x2b\x7b\x5e\xdc\xd5\x21\x52\x89\xfd\x1b\x62\x95\x23\x7c\xb5\x79\x4f\x2c\xda\x76\x12\x5b\x25\xfa\xda\x2f\xf7\xfa\x98\xc4\xbd\xb8\x17\xf5\x2f\xa3\xeb\x16\xb5\x96\xdc\x76\xe3\x31\x7e\x76\xf5\x6e\xfc\xa5\x4b\xc1\xfd\xae\xb4\xbb\xeb\x35\xf1\x63\xac\xe0\x85\x98\x15\x17\x73\xe8\x9e\x0a\xdb\x4e\x09\x17\x7b\xe0\x61\x30\x69\x08\x09\x37\x98\xba\xa1\x84\x21\xd3\x0d\xa5\x55\x91\xc2\x4d\xd3\x64\xc7\x0f\xa6\x3a\xf2\x65\x48\xc7\x34\xb8\xcf\x96\x32\xb7\xfb\x73\x1b\x5b\x5f\x74\xd3\xc8\x78\x70\x19\x55\x87\x27\xf0\xa4\xb4\x33\x28\x5c\x0e\x5e\xba\x14\x5a\x24\xf0\x9a\x01\x12\xc1\x8d\x4e\x27\x41\xdf\xc8\xd4\x0f\xe0\xd6\x48\x27\x76\x06\x69\x57\x13\xc1\x45\x27\x18\xcd\x85\xe4\x68\xda\xf1\xbd\xda\x70\x9d\x2c\xf7\xfa\x63\x02\x87\xda\x27\x36\x31\xda\xc1\x26\x54\x31\x32\xbe\xc2\x23\x2e\x0b\x96\xfb\x63\xa8\x87\x22\xdd\x28\x28\x13\xeb\x72\x50\xd0\x19\x18\xdb\xfc\xee\x4b\xd6\xf7\x40\xe0\x66\x84\xb0\x89\x91\xbb\x77\x7d\xc8\xea\xd2\xb0\xaa\xee\x66\x08\xfc\x8b\x0e\x47\x54\x6f\x5e\xca\xac\x65\xdd\x0a\x3e\x35\x17\xd1\xb4\xaa\x58\xbe\xff\xfe\x04\xc2\xea\x4b\x26\xb7\x63\xf2\xd3\x79\xd0\x2b\x32\xbe\xf6\xc8\x53\x62\xd9\x77\x4b\x1c\x83\xd6\x35\xd1\xb4\x2e\xca\xa6\x06\xe3\xb2\xf1\x43\xee\x7a\x97\x59\x8c\x03\x38\x40\xc0\x2d\xf2\xb1\xd3\xd2\xab\x3c\x16\x36\x3e\x3d\x60\xfe\x69\xf1\x93\x55\x09\x85\x84\xf6\x12\xad\xd6\x6a\x9b\xfa\xe8\xb7\x21\x4f\xb3\xb2\x18\xa8\x42\x81\x19\xca\x3b\xac\x99\x77\xc1\x78\xa3\x50\x91\xac\x04\x9a\xad\xae\xf3\x3c\x04\x9b\x12\x10\xcc\x1f\xd6\x8a\x0c\x4d\x84\x44\x3f\x5c\x8e\xc7\x64\x44\x42\x2d\x87\xe6\x3b\x8a\xb5\xfc\x37\x7f\x60\xa9\x29\x00\xda\xb4\x1c\x3a\x5c\xbd\xa3\xef\xc2\x7a\x22\xfa\x69\x7c\x55\x8f\x7d\x1a\x41\x26\x33\xbc\xc1\x29\x8d\x32\x11\x31\x25\x00\xdb\x33\x3c\x74\xa4\x7b\x72\x3e\x36\xd1\x6e\x8f\x05\xe9\x77\xc0\xf8\xcf\x20\x7b\x7d\xa4\xeb\xe8\xd1\xef\x9d\xde\x82\xca\x9f\x83\x6b\x9c\x73\x0e\x58\xcb\x73\x50\x60\x9d\x1a\x76\x14\xd5\x6a\x34\x2b\x4b\x07\xd0\x04\x3d\x62\x89\x0f\x3d\x08\xf4\x32\xd0\x7a\x6a\x2d\xb3\xab\x71\xf1\x70\x1d\xf8\x49\x21\x31\x0f\xa1\xe1\x8c\x42\x73\x57\x4a\xb7\x5d\x30\x53\x35\x7d\x20\xbe\xe1\xa9\x5e\x5e\x91\xd7\x2c\xbb\x26\x76\x0c\x3a\xed\x23\xa2\x4f\x7a\x2f\x90\xab\x57\xcf\x7d\xe4\xf4\x7b\x2f\x6c\x11\x5f\xff\xda\x04\x77\x98\xe1\x5e\xba\x19\x0e\x9b\x3d\x21\x58\xfa\x7f\xe5\xd5\x2a\x7e\xc8\x27\x4b\xeb\x54\x8a\x7d\xe5\x0a\xd0\x61\xfd\xac\xe9\xec\xd9\x92\x8f\xb9\x4f\x37\xed\x3b\xa3\x19\x4d\x85\xa4\xa9\x27\x7f\xfa\x00\xc7\x18\x80\x3d\xf3\xc3\x46\x1c\x5b\x87\x4a\xc0\x61\xa5\x03\x74\x10\xed\x5e\xf4\x40\xce\x27\x52\xe4\xa1\xa7\xd8\x1c\x3c\x88\xcd\xec\x2d\x79\x0b\x3d\x47\x0c\xe1\x5c\x67\xc1\x41\x35\x43\x1f\x42\x20\x33\x44\x27\xfc\xf0\x23\x54\xbf\xe3\xa8\xe3\x05\x68\x42\x8c\x6d\x6e\x61\xa9\x5b\x23\x22\x13\x61\x44\x81\x5c\xda\x29\x10\x99\x50\xec\x38\x3e\x6c\xb8\x3b\x69\xb9\x91\x37\x42\x39\xea\xfc\x6c\xc4\x6b\x56\x8e\x67\xe9\xdd\x85\xaf\xf1\x69\xa5\x50\x0c\xfe\x23\x39\xe9\x9b\xf3\xa7\xd9\x30\xac\x97\xc1\xc5\xa6\x20\x38\x46\xf7\x9c\xe4\x59\x41\x41\xdf\x6f\x61\x8b\x57\x8c\x1f\xf5\x67\x64\xce\xa3\x59\x93\xb8\x1f\x43\xb5\x4a\x12\x43\xfd\x7f\x49\xa5\x18\x11\x4f\x64\x51\x81\x46\x7b\x01\xfe\x84\xcb\x9e\xaf\x59\xfd\x7e\x75\x5e\x36\x7d\x6d\x93\xd9\x2a\xcf\x0f\x8a\xc5\x67\x4b\x2f\xad\xbb\xdc\x4a\x72\xfa\x6a\xfc\x2b\xd2\xeb\x37\x15\x06\xfb\x18\x43\x0b\xfa\x83\xbb\x91\xb6\x32\xc4\xb7\x52\xed\x26\xb8\xa3\x40\x5f\x8c\xfb\x4c\xa5\x72\x5a\xa8\xa5\xd4\x53\xdb\xdc\x81\xee\x5c\xb6\x0c\xe5\x03\xec\xfd\xe6\xb3\x90\xe7\x86\xfc\xbb\x09\xaa\x44\x48\x85\x41\xd5\x96\xa9\x72\x76\x50\xad\x06\x9e\xed\x3f\x36\xdb\x8f\x5d\xec\x81\x5d\xec\x6c\xae\x2e\xf4\xab\x23\x7b\xfe\x93\xdf\xe7\x72\x63\xde\x87\x35\x0b\xba\xb9\xd1\x19\x87\xed\x97\x1c\xdb\xd3\x72\xec\x7d\x83\xc0\xd7\x8e\x9b\x56\xb3\x6f\xbb\xc6\xbe\x81\x3a\xa8\x5d\xeb\x99\xc7\x5a\x75\x40\x20\x16\xe0\xb2\xa3\x70\x8f\x95\x2c\x83\xa3\x42\x60\x9a\xb6\xfa\x57\x6c\x5e\xd3\x57\xb1\x62\x82\x25\xd0\xf4\xfe\xad\xfd\x36\x1a\x55\x0b\xff\x10\x02\x1a\xe2\x66\x6d\x26\x1f\x60\x09\x69\x35\x5d\xbd\xf3\x90\x91\x46\xdb\x5a\xe4\x34\xb6\x8f\x0b\xee\x33\x45\x1a\x2f\x75\x26\x42\x5f\xdb\xef\xa2\x9e\x41\xa6\xd8\x98\x27\x8c\x62\x5a\x40\xcb\x9b\x86\x81\x2e\x81\x84\x49\xb2\x10\x7a\x41\x8b\x74\xf5\x9a\x76\x9e\xec\x31\x7b\xe0\x1a\xe8\x5a\xa3\x87\x51\xed\x9b\x5d\xe3\xb0\x0d\xc8\x20\x37\xa0\x89\x7e\x83\x32\x40\xe4\x87\xbe\x67\x00\xb0\xc2\x57\x05\x53\xc1\x76\x1b\xcf\x20\x66\xa7\x05\x5c\xd7\xbb\xdd\xa8\x79\xb6\x45\x7d\x47\xee\x3b\xee\x9b\x7f\xed\x76\x20\x6c\xf7\xc9\xb9\x91\x6e\x37\x20\xaf\xc7\xe3\xf1\x3e\xf4\x6c\x0b\x27\x08\x87\xaa\x27\x07\x30\x8c\x1f\x2f\xfe\x1a\xee\x50\xf1\x9a\xc7\xf1\xea\x4f\x67\xf5\x9f\xb1\xaa\x41\xf5\xdf\x76\x0b\x9b\x77\xbb\x8b\xff\x06\x00\x00\xff\xff\x37\x71\x3f\x03\xbb\x1b\x00\x00")

func webTemplatesMonitorProcessorGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorProcessorGoHtml,
		"web/templates/monitor/processor.go.html",
	)
}

func webTemplatesMonitorProcessorGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorProcessorGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/processor.go.html", size: 7099, mode: os.FileMode(436), modTime: time.Unix(1511964985, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\x26\x82\x71\xb3\xb8\x95\x85\x26\xbb\x46\x56\x37\xcd\xaa\x40\x81\xa2\x8b\x2e\x03\x5a\x1c\x4b\x44\x69\xd2\xe5\x23\x8e\x61\xf8\xdf\x3b\x12\x25\xc5\x96\x69\x25\x45\x51\xa0\x02\x2c\x7b\x34\x0f\x9e\x39\x3c\x1c\x6b\xbf\xe7\xb8\x12\x0a\x21\x29\xb5\x72\xa8\x5c\x72\x38\x5c\xe5\x5c\x3c\x41\x29\x99\xb5\x8b\xc4\xe8\x6d\x52\x5c\x01\x5d\xc7\x4f\x9b\x60\x46\x69\xa6\xf3\x8d\xfd\x2f\x59\x31\x6f\xa9\x65\xba\xe6\xe9\xfb\xdb\x51\x0c\x45\xd5\xb7\xc5\x57\x8f\x66\x07\x9f\x71\x67\xf3\x8c\xcc\x51\xc4\x7e\x2f\x56\x30\x47\x63\xb4\x21\xa4\xa3\xec\xa3\x35\x98\x44\xe3\xa0\xbd\xa7\x9c\xa9\x0a\x4d\x6f\x08\xbb\x16\xd6\x8a\xa5\xc4\x04\x8c\x96\xd8\xc5\x9e\x61\xa1\x7a\x4b\xef\x9c\x56\xe0\x76\x1b\x8a\x0a\x46\x32\x34\x21\xb5\xa5\x0a\x9c\x39\xd6\xd7\x1c\x2a\xe5\x76\xc3\x54\xf1\x9f\x13\x6b\xb4\xf7\x79\xd6\x5a\x79\x16\x0a\x44\x96\xb1\xce\x68\x55\x15\x0f\x4d\x53\xd7\x14\x1e\x4c\x6a\x35\xf4\x39\x7f\x88\x77\x9b\x51\xbb\xe7\xf4\xa0\xe2\x67\xa1\x81\xb4\x2d\x33\x4a\xa8\xea\xcd\xb4\x75\xf1\xff\x3c\x6f\xdf\x03\xce\x53\xe6\x3a\xf0\x7f\xce\x5d\xcf\x9e\xd5\xde\x94\x68\x23\xfe\x7c\xa5\xcd\x1a\xb4\xb2\x7e\xb9\x16\x6e\x91\x6c\x85\xe2\x7a\x3b\x97\xba\x64\x4e\x10\x0d\x0b\xb8\x21\x40\x4b\x66\xf1\x71\xc3\x5c\x7d\x38\x64\x64\x5a\x94\x58\x3a\xe4\x8f\xa1\x2e\x3d\xbc\x81\xff\xc1\x22\x33\x65\x3d\x7f\x62\xd2\xe3\x3d\x18\x74\xde\x28\x58\x31\x69\xf1\x3e\xc2\xf3\x78\xf3\x84\xda\x78\x97\x56\x46\xfb\x0d\x1c\xfd\x4e\x65\x75\x21\x79\xa2\x40\xba\x74\x6a\x22\xab\xcd\x9c\xda\x66\x4a\x07\xfa\xa4\x34\x5e\x98\x97\x0e\xb8\xd1\x1b\x62\x45\xa5\x4e\x57\x95\xec\x05\x10\x8c\x45\xd2\x7b\x93\x22\x46\x4d\x2b\x8b\x41\x3f\x8c\x68\x21\xa9\xbc\xa6\x8e\x13\xa4\x5e\xf6\xe9\x03\x8e\x35\x2a\xff\x4a\x83\xcd\xb5\xdf\xcf\x86\x9d\x83\x0f\x0b\x38\xde\xc7\x37\x24\x9b\x66\xf4\xc0\x8c\x14\x81\xcf\xef\x60\x16\x3a\x6a\xeb\x5c\xd6\xd3\x19\x7a\x29\x8a\x9c\x41\x6d\x70\xb5\x48\x8e\xf1\xb4\x4a\x9a\xf5\x2c\x35\xdc\x0d\x46\x9e\x31\xe2\x86\x12\xdf\x80\x31\xae\xfa\x13\x04\x99\x97\x13\x0a\x8a\x1d\xa6\x23\x77\xab\x2a\x10\x7c\x91\x04\x79\x27\x9d\x62\x1c\x3e\xbb\x41\x2f\xcd\x19\x4a\x9b\xbf\x15\x1a\x2d\x34\x5f\xf0\xa7\x17\x06\xf9\xdf\x97\x6d\x38\xb4\x97\x64\x9b\x14\xdf\x5a\xc8\xaf\xcb\x6c\x82\x84\x0b\xae\x3c\x6b\x7a\x3e\x7f\x4e\x1b\x42\xe7\x3d\x36\x67\xa6\xe7\xf4\x68\x2a\x7f\xd1\xd0\x49\x0c\x56\xda\x2b\x7e\x0d\x9f\x04\x87\x9d\xf6\x64\x9a\x0a\x1d\x38\x0d\xcc\x39\x56\xd6\xe0\x6a\x5c\x7f\xbc\x80\x32\x26\x8f\x51\xe8\xc8\x0c\xe3\xb2\x1d\x61\x47\x79\x79\x6d\xb2\xf8\xbb\x02\x1d\x63\x94\xd0\xde\x87\x69\x11\x2c\xeb\x4b\x82\x6f\x27\xde\x24\x42\x5c\x8d\x8c\x37\x04\x44\x38\xae\xef\x4e\x43\x9d\x70\x34\x7c\x9a\x29\xf3\x03\x77\xcd\x31\xa9\xef\x8a\xa9\xde\xe2\x0b\x2e\x35\xdf\xc5\x56\xdb\x18\x6c\x4a\x77\xbd\xe7\x59\x63\xff\x16\x73\x2f\x5c\x77\xae\xee\xab\xf7\xfc\x0a\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func webTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}

func webTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/query/index.go.html", size: 2479, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xcf\x6a\x03\x21\x10\xc6\xef\x79\x8a\x41\x72\xec\x46\x1a\x72\x2a\xbb\x1e\xfa\x00\x25\xaf\x30\xac\x93\x28\xb8\x63\x50\xfb\x07\xc4\x77\xaf\x09\x36\xad\xdb\x52\x0f\xea\xcc\xf7\x93\xf9\x3e\x73\xd6\x74\xb2\x4c\x20\x66\xcf\x89\x38\x89\x52\x36\xa3\xb6\x6f\x30\x3b\x8c\x71\x12\xc1\xbf\x0b\xb5\x01\xf8\xd9\xbb\xa2\x58\x1f\x85\x9b\xb2\xd6\xdc\xb0\xe8\xe1\x71\xdf\xb4\xaa\x9a\xbd\x3a\x06\x3f\x53\x8c\x3e\xc4\x51\xd6\xb2\x29\x39\x07\xe4\x33\xc1\xd6\xb2\xa6\x8f\x07\xd8\xce\x7e\xb9\x78\xae\x2e\xe0\x69\x82\xdd\xbd\x8a\xd5\x13\xb4\xf5\xff\xac\x35\x71\x41\x26\x07\xb7\x7d\xa8\x41\xf1\xd5\xa5\x8e\xfd\x83\x1e\x0c\xa1\xb6\x7c\x5e\x71\xd7\x1c\x87\x1e\x4c\x36\x39\x12\x6a\x44\x30\x81\x4e\x93\xc8\xf9\x3b\xc0\xee\x19\x23\x1d\x31\x99\x52\xa4\x50\x9d\xf2\x82\x0b\x95\x32\x4a\xfc\x35\x40\x9a\x83\xda\xf4\xee\x64\xb5\xd7\x85\xeb\x1b\x5d\x99\x33\xb1\x6e\x5f\x75\x17\xda\xa5\x1d\x5f\xc8\x67\x00\x00\x00\xff\xff\xa1\x8e\x80\xc8\xf7\x01\x00\x00")

func webTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}

func webTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/index/index.go.html", size: 503, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesGraphIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x94\xdf\xee\x93\x30\x14\xc7\xef\xf7\x14\x0d\x99\x5e\x09\xc4\x65\x57\x93\x91\xa8\x31\x0b\x73\x19\x44\xe1\x01\x3a\xda\x41\x63\xd7\x36\xa5\x38\x0d\xe1\xdd\x2d\x50\x27\xb0\x3f\x5c\x98\xdf\xf2\xe3\x02\x4e\xcf\xf9\x9e\x73\x3e\x9c\xb4\xad\x2a\x84\x8f\x84\x61\x60\xa5\x9c\x29\xcc\x94\x55\xd7\x33\x0f\x91\x9f\x20\xa5\xb0\x28\xd6\x96\xe4\x67\xcb\x9f\x01\xd0\xf7\x35\x52\xa8\x93\x64\x1b\x19\xc7\xa8\x7d\x42\xf6\xfb\x85\x89\xe9\x68\xbe\xf0\x23\xc9\x53\x5c\x14\x5c\x16\x9e\xab\x97\x26\x52\x55\x12\xb2\x0c\x83\x39\x61\x08\xff\x7a\x07\xe6\x99\x84\x22\x07\xab\x35\x70\x5a\xab\xd0\x2c\xc0\x3c\x8f\x7b\x8c\x15\x02\x32\x4c\x41\xfb\xb6\xf5\x0f\xc2\x92\xaa\x81\xf6\x86\xda\xce\x31\x44\x84\x65\x23\x5d\xc3\xbf\x1c\x0a\x15\x51\x14\x5b\x7e\x55\x75\xbc\xce\x46\xf2\x52\xf4\x50\x4d\x9a\x9b\x2f\x47\x2d\x5d\xdd\x73\x8a\xe2\xc0\xd1\xef\x6b\x84\x92\x8e\x5d\xbd\xe9\x61\x94\xe1\x00\x35\xf3\x6b\xac\x66\x7c\x06\x2c\x60\xa2\x54\xdf\x95\xc4\xf0\x54\x5c\xf1\xe9\xaa\x94\xf8\xc1\x3e\x4a\xe2\x95\xae\xd5\xe6\x3a\x31\x17\x24\xad\x6b\xf0\x56\x42\x29\x3f\x68\xb7\x90\x84\xa9\x23\xb0\xde\xc4\x56\x57\xde\xf9\xcc\x11\xd6\x12\xcf\xd5\xd9\x37\x98\x30\x43\x37\x5a\x4d\xb3\x6e\xb9\x6e\x14\xc3\x03\xc5\xf7\x50\xb7\x61\xb0\x7f\x15\xa8\x3b\xce\x7f\x94\xe2\x21\xeb\x2e\x0c\xbf\x26\xd1\x33\x60\xcf\x44\xe5\x0d\x18\x37\x44\x3d\xce\xcd\xc5\x79\x87\x72\xf3\x2d\x4c\xa2\xf8\xe3\xa7\xdd\x97\x96\xf4\x5f\x91\x09\xde\x9e\xf0\xbf\xa8\x29\xe7\x62\x38\x57\xd1\xed\xd6\xfb\x53\xed\x66\xda\x24\x4e\x30\xb6\x92\x17\xda\x00\x61\xa9\x26\x0f\x56\x98\xc4\x4f\x38\x59\x9e\x3b\xbc\x19\x46\x57\xcc\x60\xd9\xaf\x70\x09\x18\xc3\x7c\xfe\x4a\xfe\x04\x00\x00\xff\xff\x44\x2a\x3f\x10\x16\x06\x00\x00")

func webTemplatesGraphIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesGraphIndexGoHtml,
		"web/templates/graph/index.go.html",
	)
}

func webTemplatesGraphIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesGraphIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/graph/index.go.html", size: 1558, mode: os.FileMode(436), modTime: time.Unix(1511963369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html": webTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html": webTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html": webTemplatesCommonMenuGoHtml,
	"web/templates/monitor/index.go.html": webTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html": webTemplatesMonitorMenuGoHtml,
	"web/templates/monitor/processor.go.html": webTemplatesMonitorProcessorGoHtml,
	"web/templates/query/index.go.html": webTemplatesQueryIndexGoHtml,
	"web/templates/index/index.go.html": webTemplatesIndexIndexGoHtml,
	"web/templates/graph/index.go.html": webTemplatesGraphIndexGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"common": &bintree{nil, map[string]*bintree{
				"base.go.html": &bintree{webTemplatesCommonBaseGoHtml, map[string]*bintree{}},
				"head.go.html": &bintree{webTemplatesCommonHeadGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesCommonMenuGoHtml, map[string]*bintree{}},
			}},
			"graph": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesGraphIndexGoHtml, map[string]*bintree{}},
			}},
			"index": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesIndexIndexGoHtml, map[string]*bintree{}},
			}},
			"monitor": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesMonitorIndexGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesMonitorMenuGoHtml, map[string]*bintree{}},
				"processor.go.html": &bintree{webTemplatesMonitorProcessorGoHtml, map[string]*bintree{}},
			}},
			"query": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesQueryIndexGoHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

