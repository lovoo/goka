// Code generated by go-bindata. DO NOT EDIT.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/index/index.go.html
// web/templates/monitor/details_processor.go.html
// web/templates/monitor/details_view.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html

package templates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataWebTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func bindataWebTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}



func bindataWebTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/base.go.html",
		size: 141,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x73\xf2\x36\x18\xbc\xe7\x57\x78\x74\xe1\x90\x5a\xc2\x98\x16\x92\xc1\xe9\xa4\xa4\xe5\x23\x5f\x04\x12\x08\xbd\x74\x84\xf4\xd8\x96\x23\x4b\x8e\x25\x03\x2e\xe5\xbf\x77\x1c\x4a\xc2\xa4\x79\x3f\x72\x78\x6f\x7e\xd6\xab\xf5\xee\xfa\x19\x6d\x36\x1c\x42\xa1\xc0\x41\x31\x50\x8e\xb6\xdb\xa3\x4e\xf5\x70\x76\xe4\x38\x8e\xd3\x49\xc1\x52\x87\xc5\x34\x37\x60\x03\x54\xd8\xd0\x6d\xa3\xc3\x57\xb1\xb5\x99\x0b\xcf\x85\x58\x06\x68\xed\x16\xd4\x65\x3a\xcd\xa8\x15\x0b\x09\xc8\x61\x5a\x59\x50\x36\x40\x02\x02\xe0\x11\xec\x4f\x5a\x61\x25\x9c\x6d\x36\x38\xa3\x11\xfc\xf5\x32\x6d\xb7\x1d\xb2\x83\x0f\xc4\x15\x4d\x21\x40\x1c\x0c\xcb\x45\x66\x85\x56\x07\x92\xe8\xff\xc4\xa5\x80\x55\xa6\x73\x7b\xc0\x5a\x09\x6e\xe3\x80\xc3\x52\x30\x70\x5f\x86\x9f\x1c\xa1\x84\x15\x54\xba\x86\x51\x09\x81\xb7\x17\x92\x42\x3d\x39\x71\x0e\x61\x50\xab\x42\x99\x53\x42\x42\xad\xac\xc1\x91\xd6\x91\x04\x9a\x09\x83\x99\x4e\x09\x33\xe6\xd7\x90\xa6\x42\x96\xc1\x6d\x06\xea\x78\x42\x95\x39\xee\x6a\xc5\x41\x19\xe0\xa7\x7e\xbd\xfe\xcf\x2b\x5e\x73\x72\x90\x41\xcd\xd8\x52\x82\x89\x01\x6c\xcd\xb1\x65\x06\x41\xcd\xc2\xda\x56\x4a\xb5\xc3\x8f\x57\x5c\xf4\xc6\x45\x3b\x37\x68\xef\x26\xa5\x6b\xc6\x15\x5e\x68\x6d\x8d\xcd\x69\x56\x0d\x95\xa1\x57\x80\xf8\xd8\xc7\xad\x4a\xf6\x0d\xc3\xa9\x50\x98\x19\x83\x1c\xa1\x2c\x44\xb9\xb0\x65\x80\x4c\x4c\xfd\x76\xd3\xfd\x6d\x3a\x17\x62\x32\xf8\x03\x2e\x3d\xde\x4b\x87\xe3\xf3\xa7\x92\x15\xfd\xf3\xfe\x38\xf2\x1b\xb7\xe9\x03\x5b\xad\x5a\x5a\xf9\xe3\x39\x8f\x9a\x53\x7a\x3c\x4a\x27\xf7\xe6\x6f\x72\xf9\x4b\x7b\xb9\xe0\xbf\x27\x71\xb3\x40\x0e\xcb\xb5\x31\x3a\x17\x91\x50\x01\xa2\x4a\xab\x32\xd5\x85\x41\x3f\x3a\x94\x6b\x63\x48\xe1\x6b\xd1\xf2\x7e\xa9\x6f\x3c\x31\x36\xd3\xc7\x69\x53\x5d\xd4\x87\x85\x95\xaa\x47\x8d\xec\x0e\x8b\x6e\xab\x58\x25\xbc\x98\x9d\x4c\xa6\xf9\xd5\x72\x3c\xd7\x7a\x94\x35\x16\xb3\x79\x94\x46\xc3\xbb\xc1\xe3\x4a\x92\x49\xf6\xad\x68\xbb\x8d\x74\x4c\xce\x02\x44\x08\x4d\xe8\xfa\xfd\x9a\x54\x18\x91\x62\x61\x48\xf2\x5c\x40\x5e\x12\x0f\x7b\x1e\xae\xff\x37\xbd\x78\x4f\x0c\x3a\xeb\x90\x9d\xd4\x07\xba\x9f\xad\x28\x79\xff\xdb\x93\x0f\xab\xb9\x67\x3f\x0f\xee\xc4\xa2\xde\x68\x3d\x2f\xcb\x64\x72\x1d\xf6\x93\xdb\x6b\x7a\xf5\x14\x16\xb3\xe9\xfa\xcf\xf5\xc3\x48\x75\x87\xe7\x2d\xd9\x48\xbb\xb3\x9b\x41\xd6\x3b\x49\x7b\xdd\x8b\xf6\xaa\x77\x33\x60\xa3\x8b\xd6\xfd\x9a\x7e\xb9\x9a\xef\xc8\xc2\xb8\x4a\x0c\x66\x52\x17\x3c\x94\x34\x87\x77\x55\x49\xcd\xa9\x89\x71\x62\x48\x13\x7b\x2d\xec\xed\x81\x4f\xb4\xc5\xfd\xc4\x60\x9d\x47\x84\xfb\x78\xd9\xfc\xe0\x64\x87\xec\xae\xb7\xcd\x06\x14\xdf\x6e\x8f\xfe\x0d\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func bindataWebTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}



func bindataWebTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/head.go.html",
		size: 1280,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4\x0b\x38\x08\x72\x13\x57\x8d\x6a\x1c\x94\x36\x91\x50\x94\xbb\x23\x98\x36\xc0\xcc\x2a\xb1\xfe\x8b\xde\x8f\x4b\x71\x3c\x7b\x65\xc0\x77\xd6\x84\xb5\x76\x46\x29\x83\x15\xda\xb6\x01\x95\xf2\x44\x11\xae\xc7\xb3\xe3\x99\x92\xec\x38\x76\x00\xc6\xf9\x46\xd9\xa0\x3b\x79\xe5\xf8\x93\xfc\xcf\x8e\xa7\x0b\x93\x6b\x39\x80\xa1\x9b\x7c\x8a\xa4\x0e\x61\x89\x3c\x0f\xf8\x80\x10\xf4\x55\xbc\x5d\x07\x5c\xfc\xb6\x87\xf8\x79\x99\xc8\xae\x8f\x4f\x38\xbe\x90\x5d\x4d\x4f\x87\xa8\x77\x3e\xdf\x3b\x6d\x10\xa1\x8f\x8d\xcf\xde\xe7\xfc\xab\x4f\xf2\xc7\x7f\x62\x4a\xb9\x11\xa5\x4c\x12\xec\x7a\xdd\xca\xdb\xf7\x07\x59\x77\x84\x4b\xad\x0d\x60\x75\x6d\x32\x7d\x92\x9b\x4a\xc7\xc5\xf4\x4a\x79\xec\x4a\x01\x56\x07\xb5\x76\x5f\x01\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func bindataWebTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}



func bindataWebTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/menu.go.html",
		size: 369,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4a\xc4\x30\x10\x87\xef\x7d\x8a\x21\xec\xd1\x6e\x51\xf6\x24\x6d\x0f\x3e\x80\xf8\x0a\x43\x67\xba\x09\xa4\xd3\xa5\x8d\xab\x30\xcc\xbb\x8b\x4b\xac\xa6\x0a\x5e\x92\xcc\x7c\x5f\xfe\xfc\xa2\x4a\x3c\x06\x61\x70\xc3\x2c\x89\x25\x39\xb3\xaa\xa5\x70\x85\x21\xe2\xba\x76\x6e\x99\xdf\x5c\x5f\x01\xfc\xec\x7d\xaa\x18\x84\x97\x1b\xd9\xb3\x58\x4f\x54\xdf\x3f\x64\x06\xa0\xba\xa0\x9c\x19\x0e\x41\x88\xdf\xef\xe0\x30\xcc\xd3\x65\x16\x96\x04\x8f\x1d\x1c\xb7\x6a\x35\xcb\x3b\xfe\x3b\x71\x6f\x5c\x50\x38\xc2\x6d\xac\x89\x47\x7c\x8d\xa9\x70\xff\xb0\x6b\xcf\x48\x41\xce\x3b\x0f\xa0\xf5\xa7\x52\x4c\x21\x45\x76\x7d\x8b\xe0\x17\x1e\x3b\xa7\xfa\x1d\xe0\xf8\x84\x2b\xbf\x60\xf2\x66\x8d\xeb\x0b\xf2\x8c\x13\x9b\xb5\x0d\xfe\xba\xa0\xf1\xa7\xbe\x2a\x5f\xd7\x50\xb8\x16\xe1\xca\x46\x51\xaa\xb2\x50\xfe\xaa\x0d\xe4\x45\x9e\xbe\x94\x8f\x00\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd\x01\x00\x00")

func bindataWebTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}



func bindataWebTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/index/index.go.html",
		size: 477,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsprocessorGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\x5d\x73\xdb\x36\xf2\x3d\xbf\x62\xcb\x7b\x10\xd9\xc8\xa4\x3f\x7a\x2f\xb2\xa5\x1b\xa7\xe9\x5d\xd3\x71\x3e\xa6\xf5\x5c\x1f\x7c\x1e\x0f\x44\x42\x12\x62\x0a\xe0\x00\xa0\x64\x55\xa3\xff\x7e\x03\x80\x1f\x20\x44\xea\x23\xc9\xb5\xc9\x8d\xf5\xd0\x98\xd8\xc5\x62\x81\xfd\x5e\x82\x5d\xaf\x13\x3c\x21\x14\x83\x17\x33\x2a\x31\x95\xde\x66\xf3\xe2\x2a\x21\x0b\x88\x53\x24\xc4\xd0\xe3\x6c\xe9\x8d\x5e\x00\xd8\x63\x0a\x15\x11\x8a\xb9\x86\xb8\xb0\xf4\x64\x9e\x9c\x9c\x9d\x97\xb0\xd9\xd9\x68\xbd\x0e\x25\x91\x29\xde\x6c\xae\xa2\xd9\xd9\xe8\xc5\xd6\xa4\x0c\x51\x9c\x82\xfe\xef\x49\x82\x27\x28\x4f\x65\x31\xbd\x1b\x6f\x86\x51\x42\xe8\xb4\xc2\x53\x4b\x5d\x8c\x3e\x20\x2e\x89\x24\x8c\xc2\x2d\x1a\xa7\x18\xfc\xdf\x24\x92\x38\xb8\x8a\x66\x17\x15\xc1\x28\x21\x8b\x82\x89\x16\xf2\x27\x63\x96\xac\x6c\xaa\x52\x13\x2a\x50\xcc\x83\xfe\xef\x89\x90\x9c\x64\x38\xb1\x70\x15\xb6\xe2\xcb\x1e\x51\x63\xbc\x39\xa0\xd1\x40\x1f\xc9\xd0\xab\x38\xf6\x80\xb3\xa5\xc8\x10\x1d\x7a\xe7\x5e\xbd\x91\xab\x48\xce\x76\x4c\x57\xfb\xcb\x05\xb0\x09\xc8\x19\x86\x8c\xb3\x18\x0b\xc1\x78\x93\x98\x3e\x84\x03\x08\x09\x48\x72\x4e\xe8\x14\x38\x8e\xd9\x02\xf3\x95\x07\x31\x4b\x0d\x99\x0b\x6f\xf4\x6b\x31\x7a\x14\xa5\x9c\x82\x24\x73\x6c\x51\x3a\xf7\x46\xbf\x73\x22\xb1\xd8\xa6\x73\x15\xb9\x67\xb5\xfb\xf0\x6e\xc9\x1c\xab\xbd\x67\x48\x08\x9c\x54\x6c\x83\x60\x30\x41\xdc\x1b\x29\xf8\x1e\x6e\xdf\xe5\xf3\x31\xe6\x8a\xc8\x1c\x0b\x81\xa6\x58\x94\x64\x70\x02\x19\xe6\x20\x70\xcc\x68\xe2\x8d\x7e\xdd\x7f\x86\x2d\xb4\x52\x34\x9d\xaa\x73\x18\xe3\x19\xa1\x09\xfc\xfc\xfb\x5b\x6f\x74\x83\xa6\xc7\x13\xca\xb3\x04\xc9\xcf\x61\x69\xbc\x92\x1d\x64\x5e\xad\x0e\x12\x86\xc2\x70\x94\xfb\x4a\x2a\x6b\x01\x92\x14\x96\xa1\x44\x4f\x84\x24\xb1\xf0\x9c\x99\x0a\xcf\x32\xaa\x48\xa3\x3b\x26\x09\x8e\x75\xfe\x6f\x5c\xc4\x2f\x8c\x50\x11\xdd\x30\xf6\x98\x67\xa2\xc5\x31\x74\xd0\xfc\xb3\xfd\xc2\xed\x2a\xd3\xaa\xdd\xb4\x64\x35\xba\x47\xe2\xb7\x2c\x23\xb1\x33\x4b\x0d\xed\x99\xf6\x45\xfd\x90\x76\xbe\x5f\xb3\x0f\xfa\xc1\x1b\xbd\xa1\x31\x9b\x13\xda\x62\x8a\xcf\x5e\xe8\x2b\xf2\x42\x0d\x3a\xb4\xa2\xc3\x26\x13\x81\xa5\xe8\x6b\x75\x5b\x10\xbc\x04\x52\x6d\xd3\x1b\xbd\xd7\x50\xd8\xbf\x45\xa5\x16\x90\xe0\x14\xad\x3a\x28\x69\xd9\xb6\xd2\x39\xce\x3d\x7e\x64\x84\x6a\xa5\xfc\x7a\x1d\xe3\x1b\x9a\xe5\x12\x6e\x39\x9a\x4c\x94\xb7\xa8\x1d\x23\xc0\x55\x9e\xea\x5d\x10\x85\xa2\xbd\x89\xbd\x8f\xab\x28\x4f\xeb\x84\xea\xeb\xf2\xa2\x9f\xe6\x0c\x6f\x90\x90\x60\x94\xa8\x39\xb9\x50\x2c\x7f\x4e\x68\x84\x16\xd3\x68\x8e\x9e\x82\x3d\xb4\x94\x79\x28\x8d\xc5\x0b\x4c\xa5\x68\xe6\x41\x3f\xa9\x31\x38\xc0\x80\x4a\x22\xda\x7c\x9a\x34\x94\xdd\x1c\x42\xe2\x06\x4d\x61\xc2\x78\x61\x39\x80\x68\xe2\x3a\xc5\x0b\xed\x14\xc0\x37\x18\x91\x82\xb6\x6c\xee\x58\xef\x68\xf6\xc8\xd5\x06\x08\x05\xc9\x24\x4a\x95\x10\x24\x4a\xf7\x30\x6c\x4d\x54\x7e\x22\xab\x02\xd4\xe8\x03\xe6\x70\x68\x60\xd2\xc7\xf3\x09\xab\xd7\xf3\x3e\x63\xf1\xb7\x84\x2a\xe7\xe1\x8d\xde\x92\x7d\xa8\xd7\x8b\xa9\x41\xbd\x5e\xec\x73\x5a\x6f\xd1\x53\x41\x15\x3d\x7d\xae\x5f\xd2\x16\xfd\x2d\xa4\x6d\xef\x73\x39\x65\x2a\x86\x3d\x3b\xa8\xbf\xd6\xa9\x3c\xdb\xff\xce\xc5\x8f\x33\x3f\x96\xcb\x2f\x6f\x7f\x22\xe6\x24\x93\x20\x57\x99\xca\x70\xf0\x93\x8c\x3e\xa2\x05\x32\xa3\x5e\x65\x07\x0b\xc4\x21\x45\x42\xbe\x29\x3d\x80\x80\x21\x24\x17\x61\xca\x62\x94\xfa\xc1\xa5\x83\xf6\xbe\xe2\x74\x37\xde\x6d\x59\x07\xee\x46\xfb\xa5\xcc\x87\x3a\xb1\x84\xae\x28\xde\xa2\x0c\x86\xb0\x3e\x1d\x78\x42\xb2\x4c\xd9\x5b\x1f\xce\x06\x1e\xa1\x44\x12\x94\x92\x3f\x94\xa3\xe8\xc3\xf9\xc0\x8b\x19\xa5\x38\x96\xe6\xf9\x62\xe0\x15\xe9\xb3\x79\xfe\x61\xe0\x65\x1c\x67\xa8\x78\xfc\xfb\x00\x3c\x9e\x53\xaa\x9e\x36\x97\xf6\x81\x08\x1c\x8b\x5b\xf6\x0e\x51\x06\x43\x38\x3b\x2d\x7f\x0d\x1c\x8e\x69\x82\xf9\x6b\x2c\x11\x49\x15\xfb\x93\x9c\xc6\x4a\x17\xfc\x4a\x49\x44\xb0\x7e\x51\x09\x8d\x4c\x2c\x00\x0c\x87\x40\xf3\x34\x0d\xd6\x96\x9c\x39\x96\x39\xa7\x97\xd5\xc8\xa6\x9e\xac\xd6\x33\xc9\xf2\x6d\xb3\xbe\xb6\xd7\x55\x27\xd5\x58\xd2\x3e\x40\x18\xd6\x27\x79\xa7\x31\x43\x53\xab\xdd\x5f\xda\x13\xc8\xc4\xaf\x80\x69\x8a\x93\x06\x83\x50\xd3\xf2\x84\x81\x7b\x97\x16\x7c\xe3\xac\xcc\x71\xfc\x13\x4d\x74\xea\x6c\x56\x17\x61\x59\xb7\x55\x7f\x68\xe8\x77\x43\xf0\x3c\xf8\xc7\x4e\x9c\x41\x01\x7d\xc7\x96\x97\xdb\xeb\xd4\x78\x43\xf0\x29\x5e\xc2\x6b\x24\xb1\x5f\x33\x10\xc0\x09\x54\xc3\xce\x32\xbf\x49\xc4\xa5\x46\x0a\x20\xd2\xd2\x0e\x4f\xbb\x96\xd0\xbe\x72\x08\x9d\x70\x95\x38\x6d\xed\xf5\xe7\xe5\x1c\x4e\xdc\xc1\x22\x85\xbc\x74\xc5\xb5\xe4\x44\xe2\xae\x65\x34\x50\x57\x48\x06\x6a\x81\xa3\x08\x52\x2c\x7b\x02\xe2\x19\x8e\x1f\x81\x4c\x60\x89\x61\x86\x16\x18\x10\x64\x1c\x2f\x08\xcb\x05\x24\x48\xa2\x32\xeb\x53\xff\xca\x19\x9e\x83\x64\xea\x5f\xc2\x9b\xc4\x62\xc6\x39\x8e\x25\x2c\x50\x9a\x63\xe1\xf0\xa1\x4c\xb7\x34\xdb\xa6\xb5\x87\x53\x2c\x7d\x39\x23\x22\x70\xf5\xaa\x9a\xe3\xe8\x54\x14\x41\x42\x26\x13\xc5\x46\xc5\xa7\x3e\x2b\xe5\xa9\x4d\x55\x28\x1a\x13\x14\x03\x2a\x29\x7d\xad\x66\x0d\xc1\xaf\xf4\x02\x4e\x6a\xc6\xd4\xb3\x2d\xce\x06\x85\x42\xcb\x73\x6d\x87\xb6\x8b\x70\x58\x03\x57\xee\xae\xea\x14\x42\xb4\xd7\x75\x60\x41\x54\xb2\x7a\xd9\x20\xbd\x69\x72\x64\x4b\xbd\x58\xc4\x34\x47\xc3\x1f\x59\x4e\x9b\x2b\xd8\x80\x2e\xf2\x0d\x45\x69\x12\x34\xa3\x2d\x04\x35\xa0\x9d\xa0\x6d\xd9\x8e\xbc\x45\x21\xef\xbe\x11\x5a\x53\xec\xc6\xa5\x41\xef\x4a\x26\xa3\xde\x4b\xc3\x46\xe5\x05\x43\xc9\xfe\x49\x9e\x70\xe2\x9f\x06\x2f\x7b\x57\x91\x4c\x46\xff\xa1\xbd\x97\x8d\x6d\x58\x13\x73\xb1\x07\xc9\xf6\x02\x2f\x7b\xe2\x20\x5c\x75\xe2\x87\xb3\x61\x19\xf9\x1e\xcc\x4a\x9c\x87\x13\xaf\x25\xd6\x3a\xc7\x0a\x0b\x97\xcd\xb8\x30\xe5\x2c\xcf\x7e\x9c\x21\x42\x61\x08\x0f\x61\xac\xfe\xb2\x42\x4d\xf8\x2f\x05\x0f\x2e\x1b\x73\x2a\xf0\x0d\x11\x12\x86\x16\x0d\x47\xff\xc3\x09\x49\x25\xe6\x7e\x15\x64\x16\xc1\xba\x10\xea\x22\xb4\x62\xfc\x77\x26\x9e\x5d\xc2\x26\x70\x29\xcc\x51\x66\x4d\xef\xeb\xb5\xdf\xb8\x81\xc5\x52\x96\x87\x10\x09\x41\xa6\xd4\xdf\x42\x00\x58\x6f\xfa\x2d\xa3\x36\x27\x6d\xf0\x35\xf4\xde\xb1\x65\x6f\x50\x47\x80\x85\x76\x0f\x6d\xb8\x00\xbd\xea\x70\x7a\x30\x50\xdc\x0a\xfc\x86\x4a\xbf\x60\xbb\x6d\x4e\x0b\x53\xc1\xa5\x33\xb4\x09\x42\xe3\x49\xfd\x20\x14\x8c\xcb\x57\x2b\xdf\x5a\xa8\x00\xfa\xb6\xf5\x44\x11\x28\x44\x40\x69\x5a\xcb\x4b\xd8\x60\x93\x11\xf4\x01\x53\x89\xb9\xf6\xe9\x1c\xcf\xd9\x02\x6b\x37\xdf\x90\x77\x62\xd2\x2b\x81\x53\x1c\x4b\xdf\xfb\x9b\xdb\xa5\x0f\x0a\xd0\x75\x9a\xfa\x5e\x6d\xa1\x63\xf6\xe4\x05\xa1\xa2\xe6\x37\x34\xc6\xda\x5d\x12\xce\xe4\x3c\xf5\x5b\x93\x93\x06\x9a\x66\xd2\x0f\x42\x94\x65\x98\x26\xbe\x27\xb9\x17\x84\xba\x9e\xc2\x89\xef\x35\x96\xec\x83\xe4\x39\x0e\x0e\xa6\xfc\x44\xa4\x1f\x84\x66\xef\x7e\xd0\xb4\x0e\x93\xa5\x99\x9e\x96\x95\x2b\xa9\x3d\x35\x54\x50\x07\x15\x55\x71\xa9\x93\x42\x12\xdd\x9d\xde\xbb\xc1\x57\x94\x79\xaa\x02\x9f\xdd\xbb\xd1\xb7\xa8\x6b\x8b\x80\x09\x4b\xdc\xe3\x18\x4c\xad\x2a\x19\x24\x44\x64\x29\x5a\x85\xcd\x39\xca\x71\x02\x1b\x7f\x54\x81\x76\x49\xd2\x14\xc6\x18\x84\x64\x1c\x27\x2a\xf8\x39\x69\xb9\x64\x10\xa3\x34\xce\x53\x54\x94\x24\x02\x90\x5a\x27\x4d\x1d\x46\x0b\x0e\x86\xd0\xb4\x31\x8f\xb2\xa5\x37\xa8\x6c\xc0\x51\x65\x2f\x56\xf1\xe4\xb7\x7c\xee\xc1\x00\x1e\x42\x91\xcf\x8b\xb0\x61\xe2\x4c\x1b\xf2\xf5\x62\x6a\x90\xe7\x18\xd1\x5d\xd8\xba\xb2\x6c\x21\x6d\x22\x4e\x1b\x72\x1b\xe9\x6d\x6c\xe5\x0a\x9d\xbd\x6b\xc6\xba\xd2\xa7\x0a\x78\xbd\x98\xb6\xc1\xf5\xd2\x5d\x93\x2b\x60\x35\x79\x4f\x52\x54\x8b\xee\x2f\x48\x8a\x8c\x0e\x84\xd4\xc9\x8a\xe8\xee\xac\xa8\xa4\xb0\xe5\x9d\xed\x63\x2d\x69\x97\x0a\x73\x52\x93\x2f\x87\xba\xd2\x12\x70\x45\xd0\xa0\x75\xbd\x98\xba\xb4\xae\x17\xd3\x6e\x5a\xb6\xb8\x4a\x42\xa5\xaa\x59\x84\xca\xa1\x03\x08\x35\x99\x2a\x35\xd1\xa5\xb5\x83\xa9\x4d\x47\xd2\x14\x45\x80\x92\x44\x07\xa0\xc2\x3a\x27\x8c\xeb\x57\x0d\x14\x3f\x49\xe0\x2c\xa7\x89\x93\x63\x59\xea\x53\xe7\x58\x66\x72\xb0\xa5\x7b\xfa\xdd\xc5\x96\xc5\xcf\x09\x35\x46\x44\x4a\x1b\x7a\xad\xf0\x02\x2b\xc3\x28\x94\xc1\xfc\x9a\x96\xa8\x4c\xcf\xb5\xc1\xa3\xe6\xa3\x27\x33\x1d\x3d\x1d\x3d\x7b\xd3\x9d\x45\x6a\x2f\xdd\x9e\x4c\x15\x18\xf6\x86\x6f\x90\x90\x45\x26\x6e\xe7\x55\x5e\xe4\xbd\x6c\x6c\x6c\x37\x5e\xb5\x83\x0e\xb4\x5d\xdc\x54\x1a\x7f\xf4\x84\xeb\xc5\xf4\xd0\x39\x95\x06\x1f\x3d\xe1\x88\x45\xec\x73\x35\x87\x70\x83\xa6\xcd\x73\x88\x7a\x2f\xb5\x2a\x2a\xcc\x0a\x70\x1e\x74\xe4\xe3\x35\xdd\x5a\x10\x7b\x09\x63\x74\x14\xe5\x4a\x74\x7b\x09\xa3\xa7\x76\xba\x96\xb1\x6d\x9a\xf9\xd9\x92\xf1\x47\x15\xdf\x19\x2d\x83\xb8\x67\x32\x8d\x19\xe6\xd8\x1b\xd4\xa8\xdf\x57\x7f\xda\x06\xea\xe9\xd4\xdc\x1b\xb8\x71\xfa\x74\x6b\x48\xe5\xd1\xea\xe7\x0c\x9a\xd5\xda\xb0\xc1\xcb\x05\xe6\x27\x71\x4a\xe2\x47\x05\xf7\x74\x5c\xf6\x06\x70\x76\xde\x57\xa4\x36\x5b\x13\xdc\x11\x27\xa9\xdd\xf4\x5b\x3d\xdb\xf7\x51\x23\xdb\x42\xd3\x29\xc7\x53\x24\x4d\x2e\xfe\x6a\x75\x5b\x64\x54\xdb\xbd\x31\xbd\xf5\x3e\x08\x96\xf3\x18\x17\xb5\xe3\xbf\x8d\x73\x5b\x3b\x89\x95\x7f\x16\xc0\x14\x9b\x44\x58\x79\xcc\x2a\x0e\x22\x48\x55\xf9\xb2\x54\xa7\xad\x21\x26\x81\xa3\x68\x8e\x81\x68\x0c\x35\xf8\x88\x57\xd0\xd3\x90\x5e\x5b\xbe\xa7\x19\x69\xab\x9c\x4c\xdd\xb4\x55\x0f\xa5\x48\xbe\x45\xd9\x76\x71\x52\x97\x38\x6a\x17\x2d\xe5\x8d\x55\xe0\xa8\x92\x48\xa3\xdd\x99\xfd\xdf\xb7\x57\x22\x1d\x0b\xe8\xfd\xf7\x35\xf3\xad\xcb\x6c\xff\xf4\x8c\x3b\xef\x41\xcf\xf1\xee\x61\x68\xb6\xee\x86\xc1\xf6\x5f\xc1\xb5\xa6\xb1\x6f\xc6\x66\xab\xee\xd9\x56\x2c\xab\x10\x72\x20\x3a\x21\xc6\xd4\x54\xa3\x40\x24\x8c\x57\x26\x44\xa2\x39\x76\x50\x35\xca\xab\x55\x6b\x5d\x5a\x6f\xf4\x72\xd3\x56\x58\xe9\x85\x54\x62\x54\x34\xc8\x6c\xc0\xf7\xd6\x83\x63\x95\x0d\x83\xba\x73\xf8\xd9\x36\x30\x57\xa4\x16\xc6\x45\x3b\x86\x6b\xdf\xf7\xed\x26\xa7\x8d\xce\xb1\x90\xf3\xa0\x68\xfe\x55\x06\x68\xae\x31\x98\x54\x43\xb2\x29\x96\x33\xcc\x75\xce\x81\x51\x3c\x33\xe2\x17\x4d\x22\x4b\xdc\x53\x06\xc6\x11\x15\x8c\xcf\x4d\x6b\x50\x30\x0b\x1f\x66\x48\x00\xa2\x75\xbd\x22\x67\xa5\x09\xb2\x89\xd1\x8f\x36\x03\x2b\x53\x62\xad\xf6\xc6\xc4\xfd\xda\xf2\xfa\xb5\x5e\xd7\xd8\x8e\x5a\x57\x76\xa3\x99\x9b\x30\x3e\xb7\x70\xdd\x53\x54\x99\x56\x71\x08\x8c\x2b\x37\x10\xeb\x46\xb5\xd9\xbb\xbe\x8f\x53\xf0\xef\xb7\x08\x0d\x5c\x7b\xaf\x98\x43\x71\x5c\x64\x5f\x2d\x36\x17\x45\x30\x65\xc0\x16\xd8\xa4\x74\x28\x8e\xf3\xf2\xec\x55\x55\x6e\x4a\x5e\x73\x92\x7a\x18\x26\x9c\xcd\x8b\xec\x6f\x59\xf0\xe3\x1a\x03\xc0\x43\x38\x61\xfc\x27\x14\xcf\xda\x3a\x21\x0f\xe1\x23\x5e\x09\xc5\x56\x47\x1b\xa3\xe2\xfc\x11\xaf\x3a\xdd\x04\x8a\xe3\xbb\x47\xbc\xba\x0f\xb3\x5c\xcc\x0a\x97\xa4\x9e\x5b\xcc\x18\x5a\x4c\xb9\xad\xcf\xd1\x22\x0f\x3c\xcf\xe4\x4a\x9f\xca\x5c\x15\xaf\x8c\x0f\x8a\x21\xa5\x3b\x26\x13\x56\xbe\xbd\x2a\x9c\x61\x89\xa8\x7c\xe1\xee\xf7\x0f\x92\xbd\xd7\x27\xe5\x5b\xc1\xa2\x5f\x78\xd3\xc6\x50\xb5\xf5\xca\x27\xdc\x29\x57\xd0\x94\xad\xfd\xb4\x69\xed\x5a\xd6\x3a\xd6\xf9\x4e\xa6\x46\x29\x1a\x69\x0f\xa1\x64\x1f\x10\xe1\xc2\x6f\x0d\x85\x5b\x7d\xb9\x7e\x19\xc3\xfb\x70\x57\x68\x63\x1f\xf4\x4b\x47\xa1\xfe\xa8\x72\x16\xf5\x50\xe7\x9e\xea\x49\xe7\xd2\xde\x7d\xe0\xb4\x8c\x2c\xbf\x66\xd9\x2a\x9b\x98\xe8\xa9\xcd\xbe\xef\x9a\xae\x75\xf8\x3e\xa3\xb8\x76\x13\x15\xb7\x81\xbd\x84\x69\xa9\x68\xf5\xd5\xef\xd9\xb5\xe9\x17\xaf\xa3\x8a\x98\x6b\xc6\xc7\xec\x69\x67\x17\xca\xbd\x74\xb0\xbf\x0b\xd5\x3c\x6f\x4b\xd2\x49\xb0\x2e\xc5\x96\xdc\x9d\xde\x5f\x36\x22\xd1\xa7\x37\x9f\xac\xee\xd1\x76\xcf\xab\x0b\xb8\xd5\x8f\x6a\x69\x48\x99\xd7\xa8\xcf\x1d\xa9\xe7\x8e\xd4\x9f\xd9\x91\xb2\x5e\xde\x3f\xb7\xa4\xb6\x09\x3d\xb7\xa4\xf6\xb4\xa4\x6c\xfd\xd9\xdd\x93\x3a\xb6\x65\xf3\x8d\x36\x49\xba\x5b\x03\x56\x90\x34\x97\x7b\x5a\xa2\x64\x01\x70\xc3\x64\x7d\x19\xe8\x33\xb2\x0a\x23\xaa\xb6\xb4\xa2\x99\x32\xb4\xc5\xe5\xad\xdb\x48\xfb\x03\xb3\xc3\xf3\x9f\x15\x99\xcd\x2e\xbb\x42\x73\x0b\x74\x77\x6c\x36\xef\x9a\xec\x3b\x49\xbb\x2e\xd7\x44\x91\x96\x29\x4e\xb1\x10\xf5\x27\x57\x02\x12\x46\x7b\xd2\x64\x60\xe6\xa2\xa0\x5b\x1a\x95\x97\x6c\x5a\x6f\x01\x6d\xdf\x03\x72\xba\xa1\xf5\x75\x87\x61\xfd\x42\x73\xbb\x23\xfc\x7c\xed\xe7\x9b\xba\xf6\xc3\x31\x4a\xba\x57\x41\xc9\x57\x78\xe9\xa7\xb2\x93\xe7\x3b\x3f\x87\xde\xf9\x71\x18\xaa\x76\x34\x3a\x6d\xe1\xa2\x52\x88\x82\x03\x9d\x78\xb7\xdc\x07\xb2\xc6\xbb\xf3\x09\x5b\x87\x1a\xf4\xb6\xaf\x03\x59\xe3\xc7\xe6\x14\x4d\xb5\x38\xfa\x6a\x90\x5c\x65\xf8\x80\xab\x40\x22\xdc\x91\x50\x40\xc7\x6d\xa3\xff\xb7\x2b\x46\xa5\x7e\x1c\x43\xbb\x50\x81\xe3\x2e\x5e\x95\x0a\x51\xf5\x22\x0e\x9f\xde\x50\x34\xdd\xb0\x88\xea\xd7\x7d\x41\xd7\xdb\x96\x4a\xb1\x9a\x19\x15\x7e\x92\x1c\xc5\xe6\x35\xc0\x47\x46\xa8\xe9\xad\xe9\x2b\x32\xda\xa3\x2d\x08\x2a\xea\x65\x35\x5e\xc9\xfd\xe4\xcd\xeb\x46\x8c\x57\x53\x71\x52\x25\x56\x1d\xd7\xa5\xaa\x3e\xff\xf6\x9b\x8b\x8e\x1b\x4c\x55\x93\xd2\xa1\x18\xfe\xa2\x17\xdc\x6a\x76\x97\xbf\xc6\xf5\xa8\xac\x0f\xfb\xfa\xfa\x45\xda\x5e\xbf\xee\xd0\x5f\xf0\xcc\x70\xbd\xe3\xc2\xb7\x17\x55\x7c\x27\xa1\xec\xae\x78\x2b\x72\xc0\xfb\x80\xec\xce\xba\xac\xa4\xf0\xcd\x11\xec\x9c\xa0\x8c\x59\xe3\xf6\xd4\x91\xf7\xba\x71\x8b\x93\xcb\xba\x30\x36\x9d\x67\xd7\xf5\x22\xa1\x01\xf7\xad\x04\xd0\x7a\x1f\xa0\x55\xaa\x38\x3a\x2d\xb2\x66\x2a\x98\xea\x0f\x83\xbb\xd5\xc4\x7c\x38\xdc\xa2\x27\x3a\xe5\x6b\x17\xa3\xa3\x22\x1a\x33\xfc\x50\xdf\x16\x3f\x54\x45\x3a\x6f\xd0\x95\xbf\x6f\x50\x47\xcc\x79\x7f\x6b\x5a\x32\xc7\x7c\x6a\x9c\x89\x79\xc3\x11\x33\x1a\x23\xe9\xd7\x3e\xa6\x6f\x29\x52\x60\xf7\x86\xca\x77\x5d\xa5\xff\x32\xcd\xd8\xf1\xaa\xcd\x85\x55\x93\x9a\xcb\x59\x4f\xfa\x4a\x61\xad\x23\xa8\x3f\x76\xb4\xc3\xa4\x91\x22\x4f\x95\x3a\x23\x1d\x68\xcd\xc7\x16\xf8\x47\x36\xcf\x10\xc7\xfe\x58\x0f\x3a\xfd\x7c\x32\xf1\xcb\x59\x43\x68\xcb\x51\x6a\x8a\x8a\xed\x6d\x92\xda\x0a\xf6\x64\x41\x07\xae\x50\xeb\xee\x09\x8c\xeb\xa7\x5d\xc4\x0b\x9d\x31\x44\x1a\x25\x8b\x2b\x8b\x4f\xbf\x4a\x59\x7f\xd1\xbb\xbf\x4a\xb6\x24\xd6\x75\x85\xb2\xca\x9e\xbe\xe0\xe5\xc9\x0e\x9a\x1d\xa5\x70\x1d\x76\x97\x84\x26\x6c\xa9\xd2\xb8\x37\x6a\xfd\x05\x4a\x6b\x15\x0b\xac\x56\x6e\x72\x11\x7e\x14\x8c\xfa\xde\x7a\x1d\x8e\x91\xc0\x0f\x19\x92\xb3\xcd\x26\x52\x7b\x8e\xaa\xc2\x38\x5a\xaf\xc3\x05\xe2\x22\x24\xc9\xd3\x66\xe3\xf5\x9b\x1f\xd0\x54\xac\x6d\xfa\x70\xae\xb2\x83\x8a\x0b\x55\x96\xa8\x98\x4f\x24\x14\x9f\xfb\xa4\xab\x17\x5f\x74\x61\x4d\xed\x2a\x32\x5f\x46\xe9\xff\xcb\x8d\xf9\x8c\xaa\xf8\x67\xbd\xc6\x34\xd9\x6c\x5e\xfc\x37\x00\x00\xff\xff\x59\xbb\xeb\x36\x25\x47\x00\x00")

func bindataWebTemplatesMonitorDetailsprocessorGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsprocessorGoHtml,
		"web/templates/monitor/details_processor.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsprocessorGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsprocessorGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details_processor.go.html",
		size: 18213,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1602774383, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsviewGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x98\xe3\x3d\x58\x42\x6c\x29\x7f\x7a\x2f\xb6\xe5\xc3\xb5\xb9\x45\x03\xa4\xd9\xa2\x0d\xba\x0f\xbb\x8b\x82\x11\xc7\x36\xbb\x32\x29\x90\x94\x9c\xac\xa0\xef\xbe\x20\x25\x4b\x94\xe2\x34\x29\x76\xfb\x60\x9b\xf3\xe7\x37\xc3\x99\xe1\x8f\x6c\xaa\x8a\xe1\x9a\x0b\x04\x92\x4a\x61\x50\x18\x52\xd7\x27\x4b\xc6\x4b\x48\x33\xaa\x75\x42\x94\xdc\x93\xd5\x09\x80\x2f\xb3\xa6\x94\x0b\x54\x4e\x33\xd6\x65\xb3\x1d\x9b\x9d\x5f\x1c\x74\xdb\xf3\xd5\x17\x8e\x7b\xa8\xaa\xc8\x70\x93\x61\x5d\x2f\xe3\xed\xf9\xea\xe4\x89\x67\x4e\x05\x66\xe0\x3e\x67\x0c\xd7\xb4\xc8\x4c\x8b\xf1\xbc\xdd\x16\x29\xe3\x62\xd3\xd9\xd9\x78\x97\xab\x3b\x7a\x9f\x21\x68\x43\x0d\xd7\x86\xa7\x7a\x19\x6f\x2f\x3b\xa4\x98\xf1\xb2\x8d\x7e\x04\x77\x76\x2f\xd9\xa3\x0f\x67\x1c\x56\x6b\xd2\x2c\xdc\xe7\x4c\x1b\xc5\x73\x64\x9e\xad\xb5\xb6\x09\xf9\x12\x2b\x53\x43\x81\x33\x03\x57\x8b\x84\x7c\xa4\xca\x70\xc3\xa5\x20\xa0\xe4\x5e\xe7\x54\x24\xe4\x82\xac\x3a\xf1\x32\x36\xdb\xef\xb8\x7f\x36\xd4\x14\x1a\xe4\x1a\xcc\x16\x21\x57\x32\x45\xad\xa5\x1a\x82\x59\x23\x7c\x05\x90\x06\x56\x28\x2e\x36\xa0\x30\x95\x25\xaa\x47\x02\xa9\xcc\x1a\x98\x4b\xb2\xfa\xd4\x4a\x7f\x08\xa9\x10\x60\xf8\x0e\x3d\xa4\x37\x64\x75\x2d\x52\xb9\xb3\xea\x3b\x45\xd7\x6b\x9e\x3e\x45\x5c\xc6\xe3\xaa\x7d\xbf\x8c\x77\x7c\x87\xb6\x0a\x39\xd5\x1a\x59\xb7\x01\xd0\x12\xd6\x54\x91\x95\xd5\xbf\x90\xf7\x6d\xb1\xbb\x47\x65\x41\x76\xa8\x35\xdd\xa0\x3e\xc0\x20\x83\x1c\x15\x68\x4c\xa5\x60\x64\xf5\xe9\xe5\x6a\x1e\xc1\xca\xe8\x66\x63\xb7\x7c\x8f\x5b\x2e\x18\xbc\xff\xe5\x03\x59\xdd\xd0\xcd\x8f\x03\x15\x39\xa3\xe6\xef\xa4\x74\xff\x68\x9e\x81\x79\x6b\x35\x2f\xe0\x88\x0e\x47\xae\xd7\x1a\x8d\x9e\xba\xd1\x2b\xed\x11\xe7\xdd\x36\xc9\xea\x67\xa7\x85\x97\xb7\x68\xc7\x03\x18\x66\xf4\xf1\x19\x24\xd7\xdb\xa3\x38\xe3\x29\xb1\x16\xa3\xf3\xb7\x34\xf6\x40\x03\x67\x09\xb1\xc0\x9f\x3b\x4e\x20\x23\x47\x6b\xe6\x1d\xfb\xd8\x1d\xf2\x11\x69\xc0\x88\x3f\x96\x3a\x55\x3c\x37\x60\x1e\x73\xbb\x11\x7c\x30\xf1\x37\x5a\xd2\x46\x4a\x3a\x92\x29\xa9\x82\x8c\x6a\xf3\xa5\x4d\x40\x43\x02\xec\x32\xca\x64\x4a\xb3\x20\x5c\x78\x56\xda\x1d\xe7\x0f\x34\x87\x04\xaa\xb3\x39\xd1\x46\xe6\x96\x63\xa6\x70\x3e\x27\x5c\x70\xc3\x69\xc6\xff\xb4\x55\x99\xc2\xc5\xdc\xf2\xb0\xc0\xd4\x34\xeb\xcb\x39\x69\xe7\xb5\x59\xbf\x99\x93\x5c\x61\x4e\xdb\xe5\x7f\xe6\x40\x54\x21\x84\x5d\xd5\x0b\x3f\x35\x8d\xa9\xbe\x93\xb7\x54\x48\x48\xe0\xfc\xec\xf0\x6f\x60\xa3\x50\x30\x54\x57\x68\x28\xcf\x6c\xfa\xeb\x42\xa4\x96\x9e\x82\xfc\x40\x54\x3a\xac\x4e\xba\xf2\xf1\xb5\xa7\x80\x24\x01\x51\x64\x59\x58\x79\x15\x57\x68\x0a\x25\x16\x9d\xa4\xee\x9d\x6d\xbc\x66\x3a\xbf\x0c\x3a\xe6\x87\xb5\x85\x1a\x44\xf4\xeb\x07\x49\x5f\xc8\x5f\x9d\x65\xd4\xf0\xe4\xef\x0b\xdf\x81\xaf\x83\x4e\x99\x65\xc8\x06\xf9\x41\x8f\x45\x74\xa3\x27\x0b\x4f\x5f\x8f\x22\x2b\x4c\xff\x2f\x98\x1b\xd5\x26\xba\x8e\x0e\x7c\xd9\xfd\x70\xda\x7f\x25\x40\x08\xfc\xf7\xbb\x36\xf3\x56\x7b\x2b\xf7\x8b\xa7\x71\x7a\xbb\x04\x02\x81\x7b\xb8\xa2\x06\x83\x3e\x81\x10\x66\xd0\x89\x47\x61\x3e\x1b\xaa\x8c\x33\x0a\x21\x76\xcd\x8e\xce\x9e\x0b\x61\x49\x05\x12\x78\x56\x7f\x43\x37\x4f\xf7\xfa\x7e\xbf\x83\xd9\x58\xd8\x70\xc1\x62\xdc\xad\x54\x16\xc2\x3c\x17\xc5\xb2\x54\xaf\xf3\x5d\xe3\x18\x32\x34\x13\x0d\xe9\x16\xd3\x3f\x80\xaf\x61\x8f\xb0\xa5\x25\x02\x85\x5c\x61\xc9\x65\xa1\x81\x51\x43\x2d\xff\x50\xc1\xc0\x7e\x9b\x2d\xee\xc0\x48\xfb\xcd\xd5\x10\x2c\x95\x4a\x61\x6a\xa0\xa4\x59\x81\x7a\x94\x86\x3d\xb7\x87\x33\x3b\x38\xc3\xd1\x06\x4d\x60\xb6\x5c\x87\xe3\xa1\xea\x5c\x46\x03\x15\xc7\xc0\xf8\x7a\x6d\xb3\xe8\xd2\x74\x85\x02\x2e\x5a\x0a\xd6\x03\x07\x1b\xdf\xb2\xe3\x95\xf5\x4a\x20\xe8\x86\x02\x66\x7d\x5e\x76\xed\xf7\x72\x80\xd0\x8e\x78\xe1\xce\xa0\x4f\x0f\xa3\xd4\x60\xdc\xf4\xf1\xdc\xb4\x6c\xee\xc7\x1d\xe9\xc2\xf8\x90\xea\x62\x00\x5d\x0f\x33\xf2\x7b\xde\x06\xb9\x16\x79\x61\xa2\x77\x56\x31\x08\xe0\xc9\x9f\x03\xf7\x86\x64\x00\xe6\x2e\xb2\x23\x60\x4e\x7e\x1c\xcc\x3f\xd0\xc3\x46\xeb\xb6\xd1\xd3\xa6\x5b\xe1\x93\x39\x76\x97\xd7\x38\x85\x2b\x2b\x0c\xe3\x9e\x5c\x07\x6e\x0d\xfd\xc1\x64\x69\xd8\x6a\x72\xda\xf8\x75\x8c\x19\x19\xf9\x13\x7f\x40\x16\x9c\x85\xa7\x93\x65\x6c\xd8\xea\x37\x31\x39\x1d\x6c\xdc\x73\x2c\xf4\x0b\x46\x3e\x65\x9c\x4e\xf4\xab\x6c\x6d\x51\x5f\x9f\x86\xc7\x08\x2f\x58\x76\xed\x7f\x3d\xf8\xa1\xc7\x3f\x56\x95\x43\x1b\x9a\xe1\xbc\xa1\x9b\xd7\xbb\xbb\x76\x76\xe6\x17\xa1\x57\x33\xef\xbe\x5a\x0c\x2f\xac\x8d\x92\x45\xfe\x6e\x4b\xb9\x80\x04\xbe\x46\xa9\xfd\xe5\xdd\x81\xd1\xc7\xfe\x9e\x5c\x0c\x1c\x3b\x9b\x1b\xae\x0d\x24\x1e\xd0\x20\xb7\x68\x47\xf3\xa0\xbb\xfe\xca\xa9\xf3\xbb\x1e\xdf\x59\xde\x68\x7d\x8d\xa8\xd6\x7c\x23\x82\x27\x06\x00\x55\x3d\x3d\x22\x2d\x8f\x09\x2b\x98\xdc\xca\xfd\x64\xde\xdf\x28\xe1\x31\x33\x80\x49\xb7\x91\x09\xcc\x6d\x76\x1a\xaf\x85\x09\xda\x34\x8f\xf9\xd4\x4f\x64\xe1\x88\x3a\xc2\xa8\xe1\xe4\x20\x8c\xb4\x54\xe6\xed\x63\xe0\x45\x69\x95\x81\x7f\x1e\xe3\x18\xac\x21\xd0\x2c\xeb\x0b\xab\x7d\x75\xf3\xb0\x98\x02\x0a\x83\xca\xdd\x0e\x0a\x77\xb2\x44\x77\x61\x0c\x1a\xc3\x9a\x57\x9a\xc6\x0c\x53\x13\x90\x7f\x8f\x9e\x8f\x61\xab\xf9\x5f\x96\x05\xa4\x3f\xbb\xf7\xf2\x81\x84\x91\x05\x0b\x06\x9d\xf5\xb6\xc6\xa2\xad\xd9\x65\xc1\xb1\x27\xce\xc0\xca\xa5\x18\x84\x11\xcd\x73\x14\x2c\x20\x46\x91\x30\x72\xff\x11\x45\x16\x90\x41\xc4\x29\x18\x55\x60\xf8\x5a\xe0\x07\x6e\x82\x30\x6a\x36\x1e\x84\x87\xf2\xf5\x23\xbd\xe7\x82\xc9\xbd\x25\xbe\x6b\x9b\x43\x49\xb3\x7e\xf4\x42\xe8\x47\x8e\x5d\x46\xdf\xb4\x14\x01\xa9\xaa\xe8\x9e\x6a\xfc\x9a\x53\xb3\xad\xeb\xd8\x6e\x3f\xb6\xf5\x8a\xab\x2a\x2a\xa9\xd2\x11\x67\x0f\x75\x4d\xa6\xc3\x77\x64\x97\x54\x3d\x85\x8b\xb3\xb3\xb3\xbe\x93\xf6\x56\xb6\x3d\xe4\x06\xda\x57\x6f\xf6\x78\xf2\x4f\xc5\x6c\x9f\xf1\xcd\x2b\xdd\xfd\x69\xa3\x79\xd2\xb7\x5f\x55\x85\x82\xd5\xf5\xc9\x5f\x01\x00\x00\xff\xff\xb6\xfc\x7d\x2a\x1a\x11\x00\x00")

func bindataWebTemplatesMonitorDetailsviewGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsviewGoHtml,
		"web/templates/monitor/details_view.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsviewGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsviewGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details_view.go.html",
		size: 4378,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1602774383, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xc1\x8e\xda\x30\x10\x86\xef\xfb\x14\xa3\x88\xf6\x54\x12\x15\xed\x69\x1b\x90\xda\xaa\x42\x6c\xd1\x06\xb5\xa1\xd7\xca\xe0\x81\x58\xf5\xda\x96\xe3\x40\x2b\xcb\xef\x5e\x39\x90\x6c\x48\xa0\x39\xd0\x5d\xb5\x17\xb0\x3d\xbf\xc7\xdf\x4c\xc6\x1e\x6b\x29\x6e\x98\x40\x08\xd6\x52\x18\x14\x26\x70\xee\x26\xa6\x6c\x07\x6b\x4e\xf2\x7c\x1c\x68\xb9\x0f\x26\x37\x00\xcd\x35\x2f\x25\x4c\xa0\x2e\x2d\x6d\x1b\x1f\x3e\xd2\xe1\xdb\xd1\xd1\x06\x10\x67\xa3\xc9\x42\xcb\x35\xe6\xb9\xd4\x79\x1c\x65\xa3\xca\x62\xed\x60\x45\x72\xfc\xae\x88\xc9\xe0\x6e\x0c\x61\x3d\x73\xae\x96\x68\x22\xb6\x08\x03\x26\x28\xfe\x7c\x03\x03\x55\x79\x2a\x37\xd4\xb3\xbc\xde\xd1\x87\xd3\x56\x28\x22\x90\x43\xf9\x3b\xa4\xb8\x21\x05\x37\x27\xda\x33\xea\x61\x86\x84\x32\xb1\x6d\xe9\x7c\xa8\xb7\xa7\x42\xc3\x0c\xc7\x60\x12\x13\xc8\x34\x6e\xc6\x41\x33\x62\xe7\xa2\x1a\x3f\xb2\xf6\x10\xa1\x73\xc1\xc4\xda\xa7\x28\xc3\xa9\x26\x2a\x0b\xa7\x5a\x16\xca\xb9\x38\x22\x9d\x23\xa3\xec\xb6\x85\x1b\x51\xb6\xeb\x8b\x60\x25\xe9\xaf\x0e\xbe\xb5\xb0\x67\x26\x83\xc1\xd6\x1f\xea\x13\xdc\x06\x81\x46\x9a\x8f\xae\x0b\xde\x76\xd3\xf8\x6a\x48\xb7\x38\xa3\xfe\xbb\xf9\x51\xe9\xb1\xf4\x1d\xce\x84\x2a\xcc\x57\xa3\x91\x3c\xe6\x1d\x9f\x00\x31\x67\x93\xd9\xc3\x62\x99\xde\xf9\x22\xf1\x7b\xc3\x54\x2a\xb6\x76\x0e\x5e\x6b\xa2\xf5\x3b\xb0\x56\x69\x26\xcc\x06\x82\x57\x69\x70\x70\x1f\x7e\x94\x14\xd7\x3e\x4b\x9c\x9d\x63\x42\x41\xcf\x1c\xd5\xcf\x7a\x2f\x99\x30\x29\x59\x71\xbc\x84\x7a\x9f\xcc\x1e\xfe\x09\xd4\xb9\x94\x3f\x0a\xf5\x47\xd6\x79\x92\x7c\x5e\x2e\x5e\x02\xb6\xaa\x25\x79\x24\x6a\x70\x4e\xeb\xc5\x0b\x94\xd3\x2f\xc9\x72\x91\xbe\xff\x30\xff\x54\x92\x3e\x39\xe9\xe1\x6d\x08\xaf\xa2\xe6\x52\xaa\xd3\xbc\xaa\x43\xb5\x5e\xce\xea\x21\xa7\x7e\x63\x0f\x63\x29\x79\xa6\x02\x48\x0a\xd3\x7b\xb1\x92\x65\xfa\x02\x37\x2b\x8e\xba\x2f\x83\xb5\x80\x82\xb6\x1f\x91\xce\x83\xd5\x5a\x38\x99\x36\x0f\xab\x0d\xc7\xc1\xd5\x6d\xea\x1b\xc3\xfd\xd5\x1d\x6a\xc7\x70\x5f\x6a\xfd\xe0\xff\xec\x4b\x9e\xbc\xdd\x92\xfc\x5a\x55\x2a\xcf\xda\x87\xfe\x5a\x39\x1c\xff\x2a\xc9\xef\x00\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func bindataWebTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}



func bindataWebTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/index.go.html",
		size: 2283,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\x83\x30\x10\x46\xf7\x9e\x62\x08\x2e\xfe\x1f\x4a\xb2\x2f\x31\x5b\x2f\xd0\xbd\xa4\x3a\xd6\x80\x4d\x42\xa2\x6d\x61\x98\xbb\x97\x54\x70\x25\xa5\xab\x99\xc5\xe3\x7b\x8f\x68\xc0\xd1\x79\x04\x71\x47\xbf\x76\x7d\xf0\x0b\xfa\x45\x30\x57\x44\xc9\xfa\x1b\x42\xed\xfc\x80\xaf\x13\xd4\x31\x85\x1e\xce\x0d\xc8\xf2\x60\xce\x21\x65\xe6\x0a\x40\xcf\xce\x68\x0b\x53\xc2\xb1\x11\x44\xb5\xbc\xda\x8c\x5d\xb4\xcb\xc4\xac\x76\x56\x11\x6d\x4b\xcc\xc2\x10\x7d\xd6\x64\x9b\x6c\x9c\x64\x9b\xc2\x1a\x99\xe1\x6f\x87\xff\xb5\xb2\x46\xab\xd9\x99\x8a\x08\xfd\xf0\x35\xe7\xe1\xf0\xf9\x43\x49\xc1\x0e\x23\x2e\x21\xba\xbe\xe8\x0b\x71\x68\xde\xee\x3b\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func bindataWebTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}



func bindataWebTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/menu.go.html",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x08\xa3\x39\xb4\xb2\xd0\xe4\xd6\x50\xea\xa5\x39\x15\x28\x50\xf4\xd0\x63\x40\x89\x23\x89\x28\x4d\xaa\xe4\x30\x8e\x21\xe8\xbf\x2f\xf4\x19\x5b\x96\xed\x2c\x16\x0b\xec\x45\xc9\x68\x3e\x38\xef\xcd\xe3\x58\x4d\x23\xb1\x50\x06\x81\xe5\xd6\x10\x1a\x62\x6d\x7b\xc7\xa5\x7a\x83\x5c\x0b\xef\x13\xe6\xec\x9e\xa5\x77\x00\x00\xc7\x6f\xbb\x60\xa1\x0c\xba\xd1\xb7\xf4\x7f\x64\xad\x79\x73\xab\xa3\x9d\x8c\x7e\x7d\x5c\xc4\x00\xf0\xea\x31\xfd\x3b\xa0\x3b\xc0\x9f\x78\xf0\x3c\xae\x1e\x97\x11\x4d\xa3\x0a\xd8\xa2\x73\xd6\xb5\xed\x32\xfb\xe8\x0c\xa1\xd1\x11\xf4\xcf\x48\x0a\x53\xa2\x9b\x0c\xe5\x77\xca\x7b\x95\x69\x64\xe0\xac\xc6\x31\xf6\xac\x17\x00\x9e\x05\x22\x6b\x80\x0e\x35\x26\x6c\x30\xd8\x0c\x42\x5b\x8f\x0c\xa4\x20\x31\xd5\x9c\x2b\x71\x5f\x0b\x93\xfe\x44\x6a\x87\xfe\x99\xc7\xbd\xc5\xe3\xa1\xc0\xca\x31\x9e\x9c\x35\x65\xfa\xd2\x81\xba\xe7\xf1\x68\x42\xd3\x0c\x38\xb7\x2f\xeb\x68\x63\xa9\xde\xce\xe9\x41\x23\xcf\x42\x07\xd2\xf6\xc2\x19\x65\xca\x4f\xd3\x36\xc6\xff\xf0\xbc\xfd\x3b\xf4\x79\xca\xdc\xd8\xfc\xb7\x73\x37\xb1\xe7\x6d\x70\x39\xfa\x15\x3f\x2f\xac\xdb\x81\x35\x3e\x64\x3b\x45\x09\xdb\x2b\x23\xed\x7e\xab\x6d\x2e\x48\x59\x03\x09\x3c\x34\xcd\x36\x13\x1e\x5f\x6b\x41\x55\xdb\xc6\x4d\xb3\xf5\xa8\x31\x27\x94\xaf\x43\xdd\xb6\x8d\x1f\xe0\x67\xf0\x28\x5c\x5e\x6d\xdf\x84\x0e\xf8\x0c\x0e\x29\x38\x03\x85\xd0\x1e\x9f\x57\x78\x5e\x0e\x4f\x99\x3a\x50\x54\x3a\x1b\x6a\x38\xfa\x3f\xd2\xe5\x85\xe4\x2b\x05\xa2\x8c\xcc\x95\xac\x9b\x63\xce\xc8\x40\x46\x26\x92\x58\x88\xa0\x09\xa4\xb3\xb5\xb4\x7b\x13\x91\x2d\x4b\x3d\x09\x60\x30\x12\x36\x79\x59\xba\x46\x4d\x2f\x8b\x59\x3f\xc2\x61\x27\x95\x5b\xea\x38\xe9\x34\xe8\x29\x7d\xee\x63\x87\x26\xdc\x00\x08\xfd\xf0\x37\xf3\xe4\xe0\xb7\x04\x8e\xe7\xf8\x89\x64\xd7\xad\x1e\xd8\x28\x23\xf1\xfd\x17\xd8\x0c\x88\xfa\x3a\x97\xf5\x74\xd6\xbd\x56\x29\x17\x50\x39\x2c\x12\x76\xdc\x4f\xaf\xa4\xcd\xc4\x52\xc7\xdd\x6c\xf0\x58\xa4\x3c\xd6\xea\x33\x00\xd7\x55\x7f\xd2\x41\x1c\xf4\x15\x05\xad\x5d\xa6\x23\x77\xaf\x2a\x50\x32\x61\x83\xbc\xd9\xa8\x18\xc2\x77\x9a\xf5\xd2\xdd\xa1\xa8\xfb\x59\x71\x56\x33\x70\xf8\x7f\x50\x0e\xe5\xf7\x97\xed\x70\x69\x2f\xc9\x96\xa5\xff\xf4\x2d\xdf\x96\xd9\x15\x12\x2e\xb8\x78\xdc\x61\x3e\x7f\xdf\x34\xa8\x3d\xae\xed\x99\xeb\x7b\x7a\xb1\x95\xff\xb2\x30\x4a\x0c\x0a\x1b\x8c\xbc\x87\x3f\x94\x84\x83\x0d\x50\x58\x57\x22\x01\x59\x10\x44\x22\xaf\x80\x2a\xdc\xfd\x7e\xa1\xcb\x35\x79\x2c\x42\x17\xe6\xb0\x2e\xfb\x15\x76\x94\xc7\x2b\x17\xaf\x7f\x2b\xd4\xc2\xa0\x86\xfe\x39\x6f\x8b\xc1\xf2\x21\xcf\xd1\xfb\x2b\x5f\x12\x43\x5c\x85\x42\x76\x04\xac\x70\x5c\x3d\x9d\x86\x92\x22\x8d\xfd\x96\xf9\x0f\x0f\xdd\x35\xa9\x9e\xd2\x6b\xd8\xd6\x0f\xcc\xac\x3c\xac\x9d\x56\x3b\xec\x4a\x8f\xd8\x79\xdc\xd9\x5f\xc5\xdc\x07\xd7\xa3\x6b\xfc\x33\x79\xbe\x04\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func bindataWebTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}



func bindataWebTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := bindataWebTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/query/index.go.html",
		size: 2479,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html":               bindataWebTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html":               bindataWebTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html":               bindataWebTemplatesCommonMenuGoHtml,
	"web/templates/index/index.go.html":               bindataWebTemplatesIndexIndexGoHtml,
	"web/templates/monitor/details_processor.go.html": bindataWebTemplatesMonitorDetailsprocessorGoHtml,
	"web/templates/monitor/details_view.go.html":      bindataWebTemplatesMonitorDetailsviewGoHtml,
	"web/templates/monitor/index.go.html":             bindataWebTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html":              bindataWebTemplatesMonitorMenuGoHtml,
	"web/templates/query/index.go.html":               bindataWebTemplatesQueryIndexGoHtml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"web": {Func: nil, Children: map[string]*bintree{
		"templates": {Func: nil, Children: map[string]*bintree{
			"common": {Func: nil, Children: map[string]*bintree{
				"base.go.html": {Func: bindataWebTemplatesCommonBaseGoHtml, Children: map[string]*bintree{}},
				"head.go.html": {Func: bindataWebTemplatesCommonHeadGoHtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesCommonMenuGoHtml, Children: map[string]*bintree{}},
			}},
			"index": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesIndexIndexGoHtml, Children: map[string]*bintree{}},
			}},
			"monitor": {Func: nil, Children: map[string]*bintree{
				"details_processor.go.html": {Func: bindataWebTemplatesMonitorDetailsprocessorGoHtml, Children: map[string]*bintree{}},
				"details_view.go.html": {Func: bindataWebTemplatesMonitorDetailsviewGoHtml, Children: map[string]*bintree{}},
				"index.go.html": {Func: bindataWebTemplatesMonitorIndexGoHtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesMonitorMenuGoHtml, Children: map[string]*bintree{}},
			}},
			"query": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesQueryIndexGoHtml, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
