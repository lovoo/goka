// Code generated by go-bindata.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/monitor/processor.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html
// web/templates/graph/index.go.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x01\xaa\xc9\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x02\x14\x07\x04\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func webTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}

func webTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/base.go.html", size: 141, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x4d\x73\xe2\x38\x10\xbd\xe7\x57\xb8\x7c\xe1\x90\xb5\x85\x81\x5d\x48\x0a\x67\x2b\x4b\x76\xf8\xc8\x17\x81\x04\xc2\x5c\xa6\x84\xd5\xb6\xe5\xc8\x92\x23\xc9\x80\x87\xe1\xbf\x8f\x1c\x86\x84\xca\x64\x3e\x72\x18\x4e\xea\x47\xf7\xeb\xf7\x9e\x55\x5a\xaf\x09\x84\x94\x83\x65\xc7\x80\x89\xbd\xd9\x1c\xb4\xcb\xc3\xc9\x81\x65\x7e\xed\x14\x34\xb6\x82\x18\x4b\x05\xda\xb7\x73\x1d\x3a\x2d\x7b\xff\xaf\x58\xeb\xcc\x81\xc7\x9c\x2e\x7c\x7b\xe5\xe4\xd8\x09\x44\x9a\x61\x4d\xe7\x0c\x6c\x2b\x10\x5c\x03\x37\x73\x14\x7c\x20\x11\xec\x26\x35\xd5\x0c\x4e\xd6\x6b\x37\xc3\x11\x7c\x7a\xaa\x36\x9b\x36\xda\xc2\x7b\xe4\x1c\xa7\xe0\xdb\x04\x54\x20\x69\xa6\xa9\xe0\x7b\x94\xf6\xf7\x8d\x0b\x0a\xcb\x4c\x48\xbd\xd7\xb5\xa4\x44\xc7\x3e\x81\x05\x0d\xc0\x79\x2a\xfe\xb2\x28\xa7\x9a\x62\xe6\xa8\x00\x33\xf0\xbd\x1d\x11\xa3\xfc\xc1\x8a\x25\x84\x7e\xa5\x34\xa5\x8e\x11\x0a\x0d\x8d\x72\x23\x21\x22\x06\x38\xa3\xca\x35\xe6\x50\xa0\xd4\xbf\x21\x4e\x29\x2b\xfc\xeb\x0c\xf8\xe1\x18\x73\x75\xd8\x11\x9c\x00\x57\x40\x8e\xeb\xd5\xea\x97\x67\xbc\x62\x49\x60\x7e\x45\xe9\x82\x81\x8a\x01\x74\xc5\xd2\x45\x06\x7e\x45\xc3\x4a\x97\x4c\x95\xfd\xe5\x65\xaf\xfd\xd2\x6b\x6f\xd5\xd8\x3b\x35\x29\x5e\x05\x84\xbb\x73\x21\xb4\xd2\x12\x67\x65\x51\x0a\x7a\x06\x50\xdd\xad\xbb\xcd\x92\xf6\x05\x73\x53\x6a\xba\x94\xb2\x8d\x6d\x0d\x91\xa4\xba\x30\x3b\x62\x5c\x6f\x35\x9c\xff\x26\x33\x4a\xc7\xfd\x0f\x70\xee\x91\x6e\x3a\x18\x9d\x3e\x14\x41\xde\x3b\xed\x8d\xa2\x7a\xed\x3a\xbd\x0b\x96\xcb\xa6\xe0\xf5\xd1\x8c\x44\x8d\x09\x3e\x1c\xa6\xe3\x5b\xf5\x19\x9d\xff\xd3\x5a\xcc\xc9\xff\x49\xdc\xc8\x4d\xce\x52\x28\x25\x24\x8d\x28\xf7\x6d\xcc\x05\x2f\x52\x91\x2b\xfb\x4f\x9b\x72\x74\x0c\x29\xfc\xcc\x9a\xec\x15\xe2\xca\xa3\x23\x35\xb9\x9f\x34\xf8\x59\x75\x90\x6b\xc6\xbb\x58\xb1\xce\x20\xef\x34\xf3\x65\x42\xf2\xe9\xd1\x78\x22\x2f\x16\xa3\x99\x10\xc3\xac\x36\x9f\xce\xa2\x34\x1a\xdc\xf4\xef\x97\x0c\x8d\xb3\x5f\x59\xdb\xde\x48\x4b\xc9\xc0\xb7\x11\xc2\x09\x5e\xbd\xbe\x26\x25\x86\x18\x9d\x2b\x94\x3c\xe6\x20\x0b\xe4\xb9\x9e\xe7\x56\xbf\x55\x4f\xda\x13\x43\xd7\x46\x5b\xaa\x37\x78\xdf\x1b\x51\xf2\xfa\xb3\x27\x6f\x46\x73\x1b\xfc\xdd\xbf\xa1\xf3\x6a\xad\xf9\xb8\x28\x92\xf1\x65\xd8\x4b\xae\x2f\xf1\xc5\x43\x98\x4f\x27\xab\x8f\xab\xbb\x21\xef\x0c\x4e\x9b\xac\x96\x76\xa6\x57\xfd\xac\x7b\x94\x76\x3b\x67\xad\x65\xf7\xaa\x1f\x0c\xcf\x9a\xb7\x2b\xfc\xe3\x68\x7e\xc3\x8b\xd1\x9e\x98\x7c\x98\xc8\x49\xc8\xb0\x84\x57\x51\x31\x41\xb0\x8a\x8d\x70\xd4\x70\xbd\xa6\xeb\xed\x80\x77\xa4\x45\xea\x66\x81\x90\x91\x39\xb8\x8b\xc6\x1b\x93\x6d\xb4\x7d\xde\xd6\x6b\xe0\xc4\xbc\x76\x5f\x03\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func webTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}

func webTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/head.go.html", size: 1280, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x51\x4e\xc3\x30\x0c\x86\xdf\x7b\x0a\xcb\xef\x2c\x17\xc8\xfa\xce\x29\x26\xb7\xf1\xd4\x89\xe0\x4e\x4d\x82\x90\xac\xdc\x1d\xc3\x9a\x00\xdd\x53\x6c\xfd\x9f\xff\xdf\xb1\x6a\xe0\xeb\x4d\x18\xf0\x9d\xa5\x60\xad\x83\x17\xfa\x80\x39\x52\x4a\x67\xb4\x72\xa2\x0d\x1e\xcf\x8b\x91\x54\x62\xc6\x71\x00\xf0\xe1\xd6\xa9\x79\x95\x4c\xe6\xb1\xfd\x28\xff\xb5\x7d\x74\x61\x0a\x5d\x37\x82\x0e\xfa\xb4\x91\x04\x84\x65\xe3\xeb\x19\x55\x4f\x13\x25\xbe\xdc\x29\x2f\xb5\x3a\x1c\x5f\x25\xf0\xa7\x77\xb4\xdb\x3b\xf3\x7f\x4e\x9a\xd7\x18\xe9\x9e\xb8\x6d\xdb\xfa\xdf\xd0\x12\xff\xa4\x36\xcc\x9e\x4e\xa8\x4e\x71\x9d\xdf\x1e\xb7\xb8\x7c\x7f\x8b\x25\x23\x9c\xec\x2a\x0d\x60\x09\xbd\xf3\xae\xc4\xc3\x4a\x7b\xe1\x9d\xd9\x8e\x83\x2a\x18\x0f\x36\xf0\x15\x00\x00\xff\xff\xc7\x56\xa2\x02\x67\x01\x00\x00")

func webTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}

func webTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/menu.go.html", size: 359, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcd\x6e\xeb\x20\x10\x85\xf7\x79\x8a\x11\xca\xf2\x3a\xd6\x8d\xb2\xaa\x1c\x36\xad\x54\x75\xd7\x37\xa8\x88\x99\xc4\x48\x14\x2c\x20\xfd\x43\xbc\x7b\xc7\x96\x4d\x62\x3b\x6a\x36\xd8\x33\xe7\x1b\x73\x0e\x26\x46\x89\x47\x65\x10\x58\x6d\x4d\x40\x13\x58\x4a\xab\x4a\xaa\x0f\xa8\xb5\xf0\x7e\xcf\x9c\xfd\x64\x7c\x05\x70\xdd\xeb\x50\x41\x43\xae\x57\xe6\x9a\x2e\xde\x65\xf1\x7f\x3b\x68\xa4\x36\x5b\xfe\xea\x6c\x8d\xde\x5b\xe7\xab\x92\xca\x41\x89\x71\x7d\x10\x1e\xdf\x5a\x11\x1a\x78\xd8\xc3\x26\x57\x64\x62\x44\x9c\x30\x27\x84\xb5\x32\x12\xbf\xfe\xc1\xba\x1d\xbf\xd4\x0f\xe4\xca\xe7\x89\x7b\x76\xe6\x44\x2b\x0c\x6a\xe8\xd7\x82\xce\x42\x9c\x75\x98\xb0\x37\xe8\xa2\x41\x21\x95\x39\xcd\xb8\x2e\xea\x6e\x0a\x06\x15\x34\x32\x5e\x09\x68\x1c\x1e\xf7\xec\x3a\x71\x4a\x65\xb6\x5f\x92\xd0\x27\x4c\x89\x5d\x0e\x0b\x2e\xdd\xaa\x14\x8b\xcd\xca\x66\xc7\x57\x53\xa7\x25\x59\xbd\x67\xfe\x60\xe5\xf7\xd2\xb9\xd4\x23\x25\x29\x9f\x75\xea\xa7\xfb\xc9\x7a\x01\x76\x68\xe0\x8f\x5a\xd1\x5d\x81\x97\x27\xda\x31\xdc\x42\x24\x27\xef\x39\xde\xe6\xd9\x89\xb6\xa1\xd5\x9e\xdb\x2e\x0b\xc9\x8b\x30\x52\xf3\xbf\xb3\xcc\x1a\x93\x32\x46\x34\x72\xb8\x02\x59\x18\x5e\x86\xc7\x88\xfc\x06\x00\x00\xff\xff\x0d\xdd\xfa\x23\xf2\x02\x00\x00")

func webTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}

func webTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/index.go.html", size: 754, mode: os.FileMode(436), modTime: time.Unix(1511968216, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\xc1\x0a\xc2\x30\x0c\x86\xef\x3e\x45\x28\x3b\xca\x7a\x97\x6e\x57\x1f\x63\xc4\x2d\x73\x05\x4d\x4b\xdb\x81\x10\xf2\xee\x66\x13\xbc\x24\x3f\xfc\x1f\x5f\x22\xb2\xd0\x1a\x99\xc0\xbd\x89\xf7\x69\x4e\xdc\x88\x9b\x53\xbd\x88\x14\xe4\x27\x41\x17\x79\xa1\xcf\x15\xba\x5c\xd2\x0c\xb7\x01\xfa\x23\x50\xad\xa9\x54\xc3\x00\xc2\x2b\x8e\x01\x61\x2b\xb4\x0e\x4e\xa4\xeb\x1f\x58\x69\xca\xd8\x36\x55\xff\x67\xbd\x35\xa7\x49\xd5\x8d\x96\x8f\xa2\xbf\x17\xcc\x9b\xcd\xb4\x67\xd5\xe0\x71\x0c\xde\x64\x76\x9a\x78\x39\x5f\xf8\xed\x6f\x00\x00\x00\xff\xff\x6a\x55\x29\xb9\xa5\x00\x00\x00")

func webTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}

func webTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/menu.go.html", size: 165, mode: os.FileMode(436), modTime: time.Unix(1511968193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorProcessorGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x59\x5b\x73\xdb\xb8\x15\x7e\xf7\xaf\x40\xd8\xc9\x8a\x5c\x89\x94\x94\xa4\xfb\xe0\x8b\x76\xda\x99\x6d\xe3\x99\xdd\xc4\x93\xa6\xbb\x0f\x6e\x46\x03\x91\x90\xc4\x98\x24\x38\x04\x64\xd9\xa3\xe5\x7f\xef\xc1\x85\x24\xc0\x8b\xa4\xa4\x4d\xfc\x40\x53\xc0\x87\xef\x5c\x70\x70\x70\x00\x1e\x0e\x11\x59\xc7\x19\x41\x4e\x48\x33\x4e\x32\xee\x94\xe5\xc5\x75\x14\x3f\xa2\x30\xc1\x8c\xdd\x38\x05\xdd\x3b\x8b\x0b\x84\xcc\x36\x01\xc5\x30\xa8\x90\x3d\xed\xbe\xc4\x4f\x23\x7f\xfe\xaa\xea\xdb\xce\x17\x87\x43\xb0\x29\x70\xbe\x0d\xfe\x59\xd0\x5d\x5e\x96\xd7\x53\x68\xec\x8c\xcc\x71\x46\x12\x24\x9f\x3e\x28\x85\x77\x09\xd7\x1c\xc3\xb8\x2d\xc1\x51\x9c\x6d\x6a\x9c\x92\x77\x57\xd0\x90\x30\x46\x0b\x5f\x0a\x44\xee\x47\xbc\x4a\x88\xd7\x88\x05\xd8\x14\x18\x07\xd9\xfd\x15\x8d\x9e\x4d\x52\x2e\x08\x2a\x88\xfa\x21\x9f\x3e\xe3\x45\x9c\x93\xc8\xc0\x0a\xb4\x50\xcb\x6c\x11\x6d\x85\xdd\x20\x61\x88\xc7\x3c\x21\x42\x68\x01\x6f\x31\xcd\x50\xb6\x4b\x57\xc2\xaf\x77\x55\xcb\xf5\x94\x6f\x8f\x8c\xfc\x17\xc7\x7c\xc7\x10\x5d\x23\x10\x8a\xf2\xca\x70\x07\x2d\x44\x0f\x39\x31\xfa\x9d\x94\x26\x46\xa7\x30\x0c\x6f\x08\x43\x09\xde\x6c\xc0\xa3\x68\x45\xb6\x71\x16\xa1\xb7\x7f\xfc\xe6\x2c\xde\xaf\xd7\x8c\x70\xff\x57\xbc\x39\xc1\xf7\x36\xde\x6c\xd1\x1e\xe4\x16\x28\xc5\xc5\x03\x72\xa9\x1c\x59\xa9\x97\x91\x27\x5e\x49\x02\x01\x42\x0c\x84\x12\xdb\xa5\x24\xf2\x9c\x05\x88\xea\xa5\x7f\xe1\xfb\xa6\x8c\x5f\x18\x8f\x53\x10\x11\x41\x43\x4a\x04\x75\x41\x42\xfa\x48\x8a\x67\x14\x67\x88\xc1\x7b\x16\x31\x67\xf1\xcb\xc7\x0f\xc8\x65\x9e\x64\x44\xbe\x7f\x8a\x15\x3c\xb7\x29\x40\x33\x8b\x8f\x16\x28\x27\x45\x08\xab\x42\x28\x0c\x3d\xe0\x9c\xca\x31\xc2\x9e\xed\x3e\x45\x34\x0b\x49\x35\x42\xc4\xc1\x9d\x26\xea\x17\x0c\xad\x56\x1c\x08\x54\x2b\x56\xae\xb9\x08\x3e\x14\x47\x46\x58\xfc\x1e\x93\xbd\xd3\x1a\x27\x50\x46\x84\x4e\x65\x3c\xb6\xc2\x5b\xad\x31\x16\x42\x8c\x72\xc4\x9f\x73\x30\x94\xc3\x1c\x4c\x3f\xe3\x47\xac\x5a\x6b\xd6\x47\x5c\x80\x19\x59\x44\x8a\x3a\xf4\x18\xba\x41\xeb\x5d\x16\x8a\x77\xb7\xd6\x85\x79\x87\x5a\xea\x74\x8a\x72\x13\xbd\x0c\xf2\x38\x7c\xf8\xfb\xb3\x81\x9e\x34\x14\x8f\x38\xd9\x91\x09\x7a\x20\xcf\x13\x44\x57\x9f\x49\xc8\x3d\x64\x71\x21\xd0\x80\xef\x8a\x4c\x40\x02\xc6\x81\x83\xfd\x11\xf3\xad\xeb\x6c\xe8\x03\x0e\x20\x8b\xd4\xf1\xfd\x0e\xa7\xa4\x2c\x1d\xef\xca\x1c\x5e\xda\x3f\x85\x45\x42\x8f\x5f\x63\xc6\xa5\x6e\xeb\x04\x73\x48\x71\xee\x32\x48\x71\x7e\x54\x45\x98\x60\xf2\xe4\xb5\x74\x13\x7c\x21\x4d\x73\x9a\x41\x40\x08\x6b\x25\x2a\x60\x79\x12\x73\xd7\x09\x1c\x2f\x60\x49\x1c\x12\xf7\x95\xa5\x86\xcd\x01\x8f\x78\x6d\xb0\x04\x09\xc9\x36\x10\x85\x2f\x6e\xd0\xeb\x89\x8c\xa9\x94\x40\x46\x09\x19\x8a\x19\xc2\x88\x53\xf0\x27\x62\x39\x09\xe3\x35\xbc\xa8\xbe\x0e\x63\x81\x61\x60\x01\xa3\x71\x06\x63\x9a\x5c\xc2\x29\xc7\x89\x8d\x8e\xd7\xee\x0b\xa5\x76\x9c\x85\xc9\x2e\x22\x4c\x39\xd7\xf1\xd0\x9f\x7f\x0e\xe8\xd5\x99\xa4\x7a\x9a\xee\x3f\x5d\xd9\x3d\x65\xdb\x63\xe0\xcd\xfb\x91\x52\x3b\x83\x29\x1b\x7d\x02\xb7\x19\x52\x3e\xd3\x38\x93\xae\x1b\xf6\x58\x25\x4a\x72\x7d\x6a\xcd\x37\xb8\xac\xd8\x11\x18\x6d\x36\x8b\x94\x42\x13\x12\x24\x74\xe3\xca\x25\x84\x12\x88\x00\x5b\x86\x89\xa9\x62\xa4\x45\x53\x85\xcf\xc7\x82\x10\x19\x3e\x22\x68\x96\xb0\x91\xc1\x8e\xa2\x23\x5c\x8c\x9a\xd8\x4b\xa4\x1d\x34\x5a\x7d\xd1\x15\x34\x7e\x08\xd8\x6e\x25\x76\x8e\x6c\xe3\xce\x26\x9d\x4e\xd8\x65\xf8\xad\x98\xa4\xf7\x6b\xe9\x9c\x76\x94\x7f\x41\xbc\x56\xd1\xa4\xf5\xff\x5d\xc0\x99\x61\x85\x1e\xdf\xf0\xb5\x49\x8c\xd9\x7e\xec\x37\xe0\x71\x48\xf5\x51\x30\xf2\xc6\x73\xef\xaa\x4d\x68\x19\xa0\xc6\x1e\x91\xaa\x00\xf7\xb3\x76\xa8\xa1\xf6\x72\x47\x95\xb1\xf7\xa3\x3a\xd4\xa4\x5f\x86\x50\xb2\xb3\x1f\xd6\x3b\x87\x7a\x60\x27\xe5\x1c\x8f\x3d\x0e\xe1\xd3\xca\x53\xed\xe0\x13\x11\x66\xf2\x88\x89\xdb\xe5\x11\xec\x71\x75\x2a\xbe\x93\x35\x8f\x91\x8e\xa1\x17\x1b\x5e\x43\x75\xb8\x4a\xf8\x6d\x04\x58\x01\xb1\xfc\xa6\x40\x90\x57\x65\xf6\x92\xdd\xf3\xde\xee\x9d\xe8\x77\x8a\x5d\x96\x89\xda\xca\x44\x88\xfc\x21\x09\x02\x59\x52\x05\x1f\xaa\x8d\xcf\xd2\x05\x99\x2c\x0a\xd1\x26\x2a\x6d\x52\x93\x13\x0a\x97\x24\x39\xc2\xc8\x54\xff\x20\x9d\xb0\x42\xd5\x1d\x50\xb0\xc0\x00\x93\xfb\x2d\xec\xd8\xbe\xd5\xa2\x6a\x1b\x68\x9c\x9b\x7c\x7a\xca\x47\xd7\x3c\x5a\x8c\xc6\x86\x5f\xc7\x23\xd8\x69\xa3\xc5\x7f\xb2\xd1\xd8\x52\x4f\x23\x95\x96\x27\x40\xb5\x72\x67\x90\x19\x8a\x37\xe8\x46\xd3\xb2\xb3\xe3\xa9\xe2\xf4\xa6\x89\x85\x40\xad\xd7\xf6\x2e\x35\x9b\xcc\x3d\x9d\x7f\x9d\xfe\x7d\xf3\x0c\x92\xf9\xe4\x95\x49\xd2\x66\x11\xa5\x8d\x98\x31\x61\x8e\x33\x96\x9a\x8d\x1d\x69\x84\x6a\x11\xf4\xba\xc1\xb9\x30\x3c\xa0\x87\xcb\x3a\xc8\x88\x79\x2b\x22\xe4\xca\x64\xfb\x98\x87\xdb\x66\x2b\x0f\x94\xff\x03\x99\xd6\xba\xf0\x10\x33\x82\x66\x97\xe2\x07\xcd\x49\xd6\xee\xb6\xa7\xfd\x9a\xc1\x51\xa0\x2a\xf9\x13\xbc\x82\xf5\x27\x9f\xcd\xd9\xe4\x3d\x70\x5c\x4f\x05\x6c\x21\x6d\x18\x5d\xf5\x0a\x9c\x4b\x81\xcd\x3a\xb0\x40\x5d\x1d\x84\xe5\xeb\x82\xa6\x96\xfb\xf5\xe8\xa5\x2c\x8a\x96\xba\xaa\xfe\xe1\x87\x13\x08\xe5\x07\xb4\xb8\x99\xa1\x9f\xcf\x83\x5e\xa2\x59\xc7\x08\x5d\x1b\x42\x3a\x02\x95\x0c\x5f\x57\xa5\xfb\xb2\x3a\x3b\x2c\x25\xc6\x94\xd4\x0f\xb9\x1f\xcd\xd3\x40\xbc\x40\xf2\x05\x81\xde\x80\x44\x4e\x7b\x5d\x20\x8a\xee\x3e\x6b\xa0\xfd\xa4\x11\xe1\xae\x80\x1a\x97\xf7\xf2\xea\xbe\xca\xb9\x7d\x22\x6c\xc8\x49\x69\x66\x12\xda\xca\xc4\xa3\x09\x7a\xf0\x62\x5b\xc0\x49\xb8\x4b\x84\x0b\xab\xc3\x48\x3f\x6d\x7d\x54\x81\xd9\x70\x2b\x8b\x7c\x19\x33\xde\x8f\xf3\xd9\x0c\x4d\x91\xcb\xa9\x2f\x7f\x7b\x01\xa7\xff\x88\x9f\x48\x64\x55\xa5\x35\x9d\x41\x15\xb3\x77\xf8\x9d\x5b\x35\x78\x3f\xcf\x2e\xab\xf7\x01\xeb\x60\x37\x94\x1a\xc0\x34\xd5\x86\x79\x48\x56\xa3\xa4\x11\xdb\x3b\xbb\xe6\x32\xfb\x50\xaf\x0b\xb5\x86\xd0\xb8\x8b\x17\x7f\x3a\x27\x0a\x76\xc3\x26\x9d\x13\x4f\x8d\x12\xbe\x38\x13\xda\x4e\xce\xa7\xf0\x9c\x9e\x09\x04\x7f\x55\xc8\x63\x40\xeb\x2e\x42\xcf\x80\x03\x3b\xd6\xb3\x38\xa5\xc2\xa1\x1a\x0e\xe7\xfe\x8a\x72\x4e\xd3\xcb\x59\xfe\x74\xe5\x0c\xb2\x09\xbe\x1e\x2e\x7f\x85\x0b\x07\x15\xd4\x3c\xf4\xca\xa6\x4a\x04\xf0\xef\xe3\x88\x6f\x2f\xd1\x1b\x92\x5e\x21\xf5\x0e\xc6\x35\xc1\x32\x46\xa3\x97\x42\xf0\x90\xc1\x4d\x5c\x8d\x47\x2f\xd5\x49\xb4\x7a\x76\xb3\x64\x6f\xca\x7c\x65\xa6\x4c\xa4\x37\xfc\xff\x35\x5d\xeb\x48\x43\xba\xbe\x38\x23\x73\xbf\x36\xd5\xe8\x2a\xf0\xbd\xd3\xe2\xf7\xcc\x60\x72\xfb\xde\xdb\x9b\x50\xfd\xb6\x4c\x28\x8e\x7a\x52\x71\x1f\xe0\x88\x0c\x78\x64\xdd\x0b\x28\x71\x08\xd6\x6a\xfa\xda\x12\x38\x0b\xdb\xb7\x2e\x7d\xda\x9e\x99\x6d\x7b\x27\x91\xac\x61\x7e\xc5\x45\xce\x0d\xfa\x0d\x0e\xd3\x01\x2c\x82\x2a\xb3\x4e\x74\x0b\x7e\x72\x81\xd5\x17\xf3\xf3\xe3\x4f\x70\x68\x9b\x79\xdd\x09\x82\x42\x56\xfa\xec\x06\x7a\x3b\xc5\x87\x12\x95\x48\xfd\x20\x4b\x77\x06\x97\x24\x61\xe4\xe8\x28\xb7\xd6\xc4\x48\xfb\xb5\xee\x9e\xd0\xa9\xca\xff\x52\xd5\xba\xe7\xe8\x2e\x50\x1e\x75\x8f\x5e\x62\x56\xae\x16\x6b\x67\x38\xe1\x7d\x4d\xa2\x96\x63\xfc\x0a\x01\xed\xb2\x34\x39\xc2\x7e\x66\x96\xd6\xe8\xed\xfe\x44\xf6\xef\xc8\x17\xbb\xdb\x20\xf0\xff\x94\xa2\x07\xd3\x33\x32\x7f\xf8\x6c\x17\x86\x52\xc0\xd7\xe4\x6c\x11\x38\xc7\xd3\x75\x22\x7c\xf8\x12\xe6\x19\x2a\x8f\xf8\x91\x54\xf7\xbf\x5f\x95\xb6\xdf\xa8\x7c\xa9\xce\x8d\x27\x57\xdd\xf7\x4a\x65\x56\xb5\xa1\x74\x3b\x6b\xc3\xfe\x16\x39\xfd\x4b\x4b\x97\x26\x26\x45\xd7\xe0\xaa\xa8\x75\xd6\x4e\xf9\x0a\xee\x9e\xac\x3a\x88\x1d\x58\x1c\x7d\x9e\x63\x19\xce\xd9\x96\xf2\xa5\xba\xd0\x00\x57\xc4\xd4\xf2\x5b\x1f\xa0\x99\xcc\x3e\x87\xf5\xef\xd5\x7f\x95\xb1\x17\x26\x94\xb5\x63\x4f\xfe\xd3\x41\xe0\x68\x80\xd3\x4f\xf2\x53\x4d\x72\xa4\xdc\x70\x54\x7f\x97\x42\x57\x1a\x97\xc3\x23\xff\x9d\x3d\x64\x74\x9f\xc9\x0b\x08\xd2\x25\xb0\x53\x31\x2a\x5d\xf3\x4c\x6d\x9c\xf0\x63\x71\x15\xe4\x38\xed\x4e\x2d\x45\x9e\xba\xc7\xea\xf4\x3c\x96\x68\xfb\x64\x5e\x0e\xde\x58\x19\x77\xfc\x57\xd6\x6d\x94\xbc\x2e\xac\xef\xd1\x39\xbd\xc3\x71\xc1\x0c\xb8\xfa\xb0\xe7\x05\x8c\x16\xdc\xad\xcf\xeb\x78\xb2\xf2\x0e\xcd\x05\x28\x23\xb7\x19\x77\xc5\x95\x94\x07\xfb\x56\xdd\xb0\x12\x0d\x57\xad\xcb\x3c\x15\x0c\x13\x04\xb1\x0c\xe5\x01\x86\x9d\xbf\x20\x29\x2c\x7b\x79\x6b\x65\xa9\x26\x6f\xba\x5e\x07\x8c\x24\x24\xe4\xae\xf3\x17\xfb\x9b\x89\xa7\x3b\xfe\x96\x24\xae\xd3\xd4\x27\x2b\xfa\x04\x5d\x82\xcb\xad\x4d\x33\x2e\x25\x23\xef\x50\x39\x33\x12\x37\x68\xd6\x55\x63\x14\x6c\x79\x9a\xb8\x7d\x17\x74\x26\xea\xdb\xab\x14\x48\xe7\xb8\x5e\x80\xf3\x9c\x64\x91\xeb\xf0\x02\x18\xe4\x7e\x02\xeb\xc5\xb1\x98\xf5\x45\xf9\x79\xaa\x07\xe4\x29\xe6\xc0\xab\x5c\xee\x7a\x55\xbc\x94\x75\x1c\xed\xa1\x16\xa3\x7b\x30\x84\xdf\x0a\x1d\x60\xb9\xba\x7d\xb7\x34\xe0\x84\xcf\x0c\x9a\x9c\xc3\x21\x58\xc1\xfa\x5a\xe6\x50\xc0\x94\xe5\xb4\xfe\x8c\x23\xcc\x9d\x42\x27\x4c\x24\x6b\x3e\xee\xdc\x46\x65\x09\x1a\xb7\xbf\x46\xd5\x2a\x96\x13\xf4\x66\x36\x9b\x35\x8b\x43\x1d\x9e\x13\x14\x43\xa9\x98\x01\x18\xde\x9f\x2f\xbe\xa1\x0a\x70\x74\x90\x1f\xcf\xf4\x37\xec\xea\x53\xb2\x7e\xd1\xff\x0e\x07\x18\x5c\x96\x17\xff\x0d\x00\x00\xff\xff\x8d\x83\xa6\x45\x62\x1f\x00\x00")

func webTemplatesMonitorProcessorGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorProcessorGoHtml,
		"web/templates/monitor/processor.go.html",
	)
}

func webTemplatesMonitorProcessorGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorProcessorGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/processor.go.html", size: 8034, mode: os.FileMode(436), modTime: time.Unix(1511972132, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\x26\x82\x71\xb3\xb8\x95\x85\x26\xbb\x46\x56\x37\xcd\xaa\x40\x81\xa2\x8b\x2e\x03\x5a\x1c\x4b\x44\x69\xd2\xe5\x23\x8e\x61\xf8\xdf\x3b\x12\x25\xc5\x96\x69\x25\x45\x51\xa0\x02\x2c\x7b\x34\x0f\x9e\x39\x3c\x1c\x6b\xbf\xe7\xb8\x12\x0a\x21\x29\xb5\x72\xa8\x5c\x72\x38\x5c\xe5\x5c\x3c\x41\x29\x99\xb5\x8b\xc4\xe8\x6d\x52\x5c\x01\x5d\xc7\x4f\x9b\x60\x46\x69\xa6\xf3\x8d\xfd\x2f\x59\x31\x6f\xa9\x65\xba\xe6\xe9\xfb\xdb\x51\x0c\x45\xd5\xb7\xc5\x57\x8f\x66\x07\x9f\x71\x67\xf3\x8c\xcc\x51\xc4\x7e\x2f\x56\x30\x47\x63\xb4\x21\xa4\xa3\xec\xa3\x35\x98\x44\xe3\xa0\xbd\xa7\x9c\xa9\x0a\x4d\x6f\x08\xbb\x16\xd6\x8a\xa5\xc4\x04\x8c\x96\xd8\xc5\x9e\x61\xa1\x7a\x4b\xef\x9c\x56\xe0\x76\x1b\x8a\x0a\x46\x32\x34\x21\xb5\xa5\x0a\x9c\x39\xd6\xd7\x1c\x2a\xe5\x76\xc3\x54\xf1\x9f\x13\x6b\xb4\xf7\x79\xd6\x5a\x79\x16\x0a\x44\x96\xb1\xce\x68\x55\x15\x0f\x4d\x53\xd7\x14\x1e\x4c\x6a\x35\xf4\x39\x7f\x88\x77\x9b\x51\xbb\xe7\xf4\xa0\xe2\x67\xa1\x81\xb4\x2d\x33\x4a\xa8\xea\xcd\xb4\x75\xf1\xff\x3c\x6f\xdf\x03\xce\x53\xe6\x3a\xf0\x7f\xce\x5d\xcf\x9e\xd5\xde\x94\x68\x23\xfe\x7c\xa5\xcd\x1a\xb4\xb2\x7e\xb9\x16\x6e\x91\x6c\x85\xe2\x7a\x3b\x97\xba\x64\x4e\x10\x0d\x0b\xb8\x21\x40\x4b\x66\xf1\x71\xc3\x5c\x7d\x38\x64\x64\x5a\x94\x58\x3a\xe4\x8f\xa1\x2e\x3d\xbc\x81\xff\xc1\x22\x33\x65\x3d\x7f\x62\xd2\xe3\x3d\x18\x74\xde\x28\x58\x31\x69\xf1\x3e\xc2\xf3\x78\xf3\x84\xda\x78\x97\x56\x46\xfb\x0d\x1c\xfd\x4e\x65\x75\x21\x79\xa2\x40\xba\x74\x6a\x22\xab\xcd\x9c\xda\x66\x4a\x07\xfa\xa4\x34\x5e\x98\x97\x0e\xb8\xd1\x1b\x62\x45\xa5\x4e\x57\x95\xec\x05\x10\x8c\x45\xd2\x7b\x93\x22\x46\x4d\x2b\x8b\x41\x3f\x8c\x68\x21\xa9\xbc\xa6\x8e\x13\xa4\x5e\xf6\xe9\x03\x8e\x35\x2a\xff\x4a\x83\xcd\xb5\xdf\xcf\x86\x9d\x83\x0f\x0b\x38\xde\xc7\x37\x24\x9b\x66\xf4\xc0\x8c\x14\x81\xcf\xef\x60\x16\x3a\x6a\xeb\x5c\xd6\xd3\x19\x7a\x29\x8a\x9c\x41\x6d\x70\xb5\x48\x8e\xf1\xb4\x4a\x9a\xf5\x2c\x35\xdc\x0d\x46\x9e\x31\xe2\x86\x12\xdf\x80\x31\xae\xfa\x13\x04\x99\x97\x13\x0a\x8a\x1d\xa6\x23\x77\xab\x2a\x10\x7c\x91\x04\x79\x27\x9d\x62\x1c\x3e\xbb\x41\x2f\xcd\x19\x4a\x9b\xbf\x15\x1a\x2d\x34\x5f\xf0\xa7\x17\x06\xf9\xdf\x97\x6d\x38\xb4\x97\x64\x9b\x14\xdf\x5a\xc8\xaf\xcb\x6c\x82\x84\x0b\xae\x3c\x6b\x7a\x3e\x7f\x4e\x1b\x42\xe7\x3d\x36\x67\xa6\xe7\xf4\x68\x2a\x7f\xd1\xd0\x49\x0c\x56\xda\x2b\x7e\x0d\x9f\x04\x87\x9d\xf6\x64\x9a\x0a\x1d\x38\x0d\xcc\x39\x56\xd6\xe0\x6a\x5c\x7f\xbc\x80\x32\x26\x8f\x51\xe8\xc8\x0c\xe3\xb2\x1d\x61\x47\x79\x79\x6d\xb2\xf8\xbb\x02\x1d\x63\x94\xd0\xde\x87\x69\x11\x2c\xeb\x4b\x82\x6f\x27\xde\x24\x42\x5c\x8d\x8c\x37\x04\x44\x38\xae\xef\x4e\x43\x9d\x70\x34\x7c\x9a\x29\xf3\x03\x77\xcd\x31\xa9\xef\x8a\xa9\xde\xe2\x0b\x2e\x35\xdf\xc5\x56\xdb\x18\x6c\x4a\x77\xbd\xe7\x59\x63\xff\x16\x73\x2f\x5c\x77\xae\xee\xab\xf7\xfc\x0a\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func webTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}

func webTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/query/index.go.html", size: 2479, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xcf\x6a\x03\x21\x10\xc6\xef\x79\x8a\x41\x72\xec\x46\x1a\x72\x2a\xbb\x1e\xfa\x00\x25\xaf\x30\xac\x93\x28\xb8\x63\x50\xfb\x07\xc4\x77\xaf\x09\x36\xad\xdb\x52\x0f\xea\xcc\xf7\x93\xf9\x3e\x73\xd6\x74\xb2\x4c\x20\x66\xcf\x89\x38\x89\x52\x36\xa3\xb6\x6f\x30\x3b\x8c\x71\x12\xc1\xbf\x0b\xb5\x01\xf8\xd9\xbb\xa2\x58\x1f\x85\x9b\xb2\xd6\xdc\xb0\xe8\xe1\x71\xdf\xb4\xaa\x9a\xbd\x3a\x06\x3f\x53\x8c\x3e\xc4\x51\xd6\xb2\x29\x39\x07\xe4\x33\xc1\xd6\xb2\xa6\x8f\x07\xd8\xce\x7e\xb9\x78\xae\x2e\xe0\x69\x82\xdd\xbd\x8a\xd5\x13\xb4\xf5\xff\xac\x35\x71\x41\x26\x07\xb7\x7d\xa8\x41\xf1\xd5\xa5\x8e\xfd\x83\x1e\x0c\xa1\xb6\x7c\x5e\x71\xd7\x1c\x87\x1e\x4c\x36\x39\x12\x6a\x44\x30\x81\x4e\x93\xc8\xf9\x3b\xc0\xee\x19\x23\x1d\x31\x99\x52\xa4\x50\x9d\xf2\x82\x0b\x95\x32\x4a\xfc\x35\x40\x9a\x83\xda\xf4\xee\x64\xb5\xd7\x85\xeb\x1b\x5d\x99\x33\xb1\x6e\x5f\x75\x17\xda\xa5\x1d\x5f\xc8\x67\x00\x00\x00\xff\xff\xa1\x8e\x80\xc8\xf7\x01\x00\x00")

func webTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}

func webTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/index/index.go.html", size: 503, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesGraphIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x94\xdf\xee\x93\x30\x14\xc7\xef\xf7\x14\x0d\x99\x5e\x09\xc4\x65\x57\x93\x91\xa8\x31\x0b\x73\x19\x44\xe1\x01\x3a\xda\x41\x63\xd7\x36\xa5\x38\x0d\xe1\xdd\x2d\x50\x27\xb0\x3f\x5c\x98\xdf\xf2\xe3\x02\x4e\xcf\xf9\x9e\x73\x3e\x9c\xb4\xad\x2a\x84\x8f\x84\x61\x60\xa5\x9c\x29\xcc\x94\x55\xd7\x33\x0f\x91\x9f\x20\xa5\xb0\x28\xd6\x96\xe4\x67\xcb\x9f\x01\xd0\xf7\x35\x52\xa8\x93\x64\x1b\x19\xc7\xa8\x7d\x42\xf6\xfb\x85\x89\xe9\x68\xbe\xf0\x23\xc9\x53\x5c\x14\x5c\x16\x9e\xab\x97\x26\x52\x55\x12\xb2\x0c\x83\x39\x61\x08\xff\x7a\x07\xe6\x99\x84\x22\x07\xab\x35\x70\x5a\xab\xd0\x2c\xc0\x3c\x8f\x7b\x8c\x15\x02\x32\x4c\x41\xfb\xb6\xf5\x0f\xc2\x92\xaa\x81\xf6\x86\xda\xce\x31\x44\x84\x65\x23\x5d\xc3\xbf\x1c\x0a\x15\x51\x14\x5b\x7e\x55\x75\xbc\xce\x46\xf2\x52\xf4\x50\x4d\x9a\x9b\x2f\x47\x2d\x5d\xdd\x73\x8a\xe2\xc0\xd1\xef\x6b\x84\x92\x8e\x5d\xbd\xe9\x61\x94\xe1\x00\x35\xf3\x6b\xac\x66\x7c\x06\x2c\x60\xa2\x54\xdf\x95\xc4\xf0\x54\x5c\xf1\xe9\xaa\x94\xf8\xc1\x3e\x4a\xe2\x95\xae\xd5\xe6\x3a\x31\x17\x24\xad\x6b\xf0\x56\x42\x29\x3f\x68\xb7\x90\x84\xa9\x23\xb0\xde\xc4\x56\x57\xde\xf9\xcc\x11\xd6\x12\xcf\xd5\xd9\x37\x98\x30\x43\x37\x5a\x4d\xb3\x6e\xb9\x6e\x14\xc3\x03\xc5\xf7\x50\xb7\x61\xb0\x7f\x15\xa8\x3b\xce\x7f\x94\xe2\x21\xeb\x2e\x0c\xbf\x26\xd1\x33\x60\xcf\x44\xe5\x0d\x18\x37\x44\x3d\xce\xcd\xc5\x79\x87\x72\xf3\x2d\x4c\xa2\xf8\xe3\xa7\xdd\x97\x96\xf4\x5f\x91\x09\xde\x9e\xf0\xbf\xa8\x29\xe7\x62\x38\x57\xd1\xed\xd6\xfb\x53\xed\x66\xda\x24\x4e\x30\xb6\x92\x17\xda\x00\x61\xa9\x26\x0f\x56\x98\xc4\x4f\x38\x59\x9e\x3b\xbc\x19\x46\x57\xcc\x60\xd9\xaf\x70\x09\x18\xc3\x7c\xfe\x4a\xfe\x04\x00\x00\xff\xff\x44\x2a\x3f\x10\x16\x06\x00\x00")

func webTemplatesGraphIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesGraphIndexGoHtml,
		"web/templates/graph/index.go.html",
	)
}

func webTemplatesGraphIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesGraphIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/graph/index.go.html", size: 1558, mode: os.FileMode(436), modTime: time.Unix(1511965848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html": webTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html": webTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html": webTemplatesCommonMenuGoHtml,
	"web/templates/monitor/index.go.html": webTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html": webTemplatesMonitorMenuGoHtml,
	"web/templates/monitor/processor.go.html": webTemplatesMonitorProcessorGoHtml,
	"web/templates/query/index.go.html": webTemplatesQueryIndexGoHtml,
	"web/templates/index/index.go.html": webTemplatesIndexIndexGoHtml,
	"web/templates/graph/index.go.html": webTemplatesGraphIndexGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"common": &bintree{nil, map[string]*bintree{
				"base.go.html": &bintree{webTemplatesCommonBaseGoHtml, map[string]*bintree{}},
				"head.go.html": &bintree{webTemplatesCommonHeadGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesCommonMenuGoHtml, map[string]*bintree{}},
			}},
			"graph": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesGraphIndexGoHtml, map[string]*bintree{}},
			}},
			"index": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesIndexIndexGoHtml, map[string]*bintree{}},
			}},
			"monitor": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesMonitorIndexGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesMonitorMenuGoHtml, map[string]*bintree{}},
				"processor.go.html": &bintree{webTemplatesMonitorProcessorGoHtml, map[string]*bintree{}},
			}},
			"query": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesQueryIndexGoHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

