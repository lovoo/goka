// Code generated by go-bindata.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/details.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _webTemplatesCommonBaseGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x01\xaa\xc9\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x02\x14\x07\x04\x00\x00\xff\xff\xfd\x8f\xc0\x67\x8d\x00\x00\x00")

func webTemplatesCommonBaseGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonBaseGoHtml,
		"web/templates/common/base.go.html",
	)
}

func webTemplatesCommonBaseGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonBaseGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/base.go.html", size: 141, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonHeadGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x4d\x73\xe2\x38\x10\xbd\xe7\x57\xb8\x7c\xe1\x90\xb5\x85\x81\x5d\x48\x0a\x67\x2b\x4b\x76\xf8\xc8\x17\x81\x04\xc2\x5c\xa6\x84\xd5\xb6\xe5\xc8\x92\x23\xc9\x80\x87\xe1\xbf\x8f\x1c\x86\x84\xca\x64\x3e\x72\x18\x4e\xea\x47\xf7\xeb\xf7\x9e\x55\x5a\xaf\x09\x84\x94\x83\x65\xc7\x80\x89\xbd\xd9\x1c\xb4\xcb\xc3\xc9\x81\x65\x7e\xed\x14\x34\xb6\x82\x18\x4b\x05\xda\xb7\x73\x1d\x3a\x2d\x7b\xff\xaf\x58\xeb\xcc\x81\xc7\x9c\x2e\x7c\x7b\xe5\xe4\xd8\x09\x44\x9a\x61\x4d\xe7\x0c\x6c\x2b\x10\x5c\x03\x37\x73\x14\x7c\x20\x11\xec\x26\x35\xd5\x0c\x4e\xd6\x6b\x37\xc3\x11\x7c\x7a\xaa\x36\x9b\x36\xda\xc2\x7b\xe4\x1c\xa7\xe0\xdb\x04\x54\x20\x69\xa6\xa9\xe0\x7b\x94\xf6\xf7\x8d\x0b\x0a\xcb\x4c\x48\xbd\xd7\xb5\xa4\x44\xc7\x3e\x81\x05\x0d\xc0\x79\x2a\xfe\xb2\x28\xa7\x9a\x62\xe6\xa8\x00\x33\xf0\xbd\x1d\x11\xa3\xfc\xc1\x8a\x25\x84\x7e\xa5\x34\xa5\x8e\x11\x0a\x0d\x8d\x72\x23\x21\x22\x06\x38\xa3\xca\x35\xe6\x50\xa0\xd4\xbf\x21\x4e\x29\x2b\xfc\xeb\x0c\xf8\xe1\x18\x73\x75\xd8\x11\x9c\x00\x57\x40\x8e\xeb\xd5\xea\x97\x67\xbc\x62\x49\x60\x7e\x45\xe9\x82\x81\x8a\x01\x74\xc5\xd2\x45\x06\x7e\x45\xc3\x4a\x97\x4c\x95\xfd\xe5\x65\xaf\xfd\xd2\x6b\x6f\xd5\xd8\x3b\x35\x29\x5e\x05\x84\xbb\x73\x21\xb4\xd2\x12\x67\x65\x51\x0a\x7a\x06\x50\xdd\xad\xbb\xcd\x92\xf6\x05\x73\x53\x6a\xba\x94\xb2\x8d\x6d\x0d\x91\xa4\xba\x30\x3b\x62\x5c\x6f\x35\x9c\xff\x26\x33\x4a\xc7\xfd\x0f\x70\xee\x91\x6e\x3a\x18\x9d\x3e\x14\x41\xde\x3b\xed\x8d\xa2\x7a\xed\x3a\xbd\x0b\x96\xcb\xa6\xe0\xf5\xd1\x8c\x44\x8d\x09\x3e\x1c\xa6\xe3\x5b\xf5\x19\x9d\xff\xd3\x5a\xcc\xc9\xff\x49\xdc\xc8\x4d\xce\x52\x28\x25\x24\x8d\x28\xf7\x6d\xcc\x05\x2f\x52\x91\x2b\xfb\x4f\x9b\x72\x74\x0c\x29\xfc\xcc\x9a\xec\x15\xe2\xca\xa3\x23\x35\xb9\x9f\x34\xf8\x59\x75\x90\x6b\xc6\xbb\x58\xb1\xce\x20\xef\x34\xf3\x65\x42\xf2\xe9\xd1\x78\x22\x2f\x16\xa3\x99\x10\xc3\xac\x36\x9f\xce\xa2\x34\x1a\xdc\xf4\xef\x97\x0c\x8d\xb3\x5f\x59\xdb\xde\x48\x4b\xc9\xc0\xb7\x11\xc2\x09\x5e\xbd\xbe\x26\x25\x86\x18\x9d\x2b\x94\x3c\xe6\x20\x0b\xe4\xb9\x9e\xe7\x56\xbf\x55\x4f\xda\x13\x43\xd7\x46\x5b\xaa\x37\x78\xdf\x1b\x51\xf2\xfa\xb3\x27\x6f\x46\x73\x1b\xfc\xdd\xbf\xa1\xf3\x6a\xad\xf9\xb8\x28\x92\xf1\x65\xd8\x4b\xae\x2f\xf1\xc5\x43\x98\x4f\x27\xab\x8f\xab\xbb\x21\xef\x0c\x4e\x9b\xac\x96\x76\xa6\x57\xfd\xac\x7b\x94\x76\x3b\x67\xad\x65\xf7\xaa\x1f\x0c\xcf\x9a\xb7\x2b\xfc\xe3\x68\x7e\xc3\x8b\xd1\x9e\x98\x7c\x98\xc8\x49\xc8\xb0\x84\x57\x51\x31\x41\xb0\x8a\x8d\x70\xd4\x70\xbd\xa6\xeb\xed\x80\x77\xa4\x45\xea\x66\x81\x90\x91\x39\xb8\x8b\xc6\x1b\x93\x6d\xb4\x7d\xde\xd6\x6b\xe0\xc4\xbc\x76\x5f\x03\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05\x00\x00")

func webTemplatesCommonHeadGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonHeadGoHtml,
		"web/templates/common/head.go.html",
	)
}

func webTemplatesCommonHeadGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonHeadGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/head.go.html", size: 1280, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesCommonMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4\x0b\x38\x08\x72\x13\x8f\x5a\xd5\x38\x28\x6d\x90\x50\x34\x77\xc7\x30\x4d\x80\x61\xf5\x63\xfd\x67\x7f\xc7\xa5\x04\x3e\x2f\xca\x80\xaf\xac\x19\x2f\x97\xce\x29\xbd\x83\x17\xda\xb6\x01\xed\x39\x51\x82\xab\x3c\x1a\x49\x59\x76\x1c\x3b\x00\x17\x96\x46\xf9\xa8\x3b\xd9\x8c\xf4\xed\xfc\xf5\x8e\xd6\x99\x29\x34\xdf\x08\xba\xf1\xa7\x44\x1a\x10\xe6\xc4\xe7\x01\xef\x10\xa2\x3e\xcb\xe2\xd7\x01\xe7\x65\xdb\x63\xfa\x38\x4d\xe4\xd7\xfb\x07\x1c\x9f\x4c\x5d\x4f\x47\x50\x6f\x49\xff\x33\x7d\x14\xa1\xb7\x8d\xeb\xde\xb5\xfe\x89\xcf\xf2\x2b\xbf\x62\x26\x8d\x28\x65\x92\xe8\xd7\xeb\x55\x5e\xbe\x3e\xc8\xba\x23\x9c\xec\x3e\x15\x60\x0d\xad\x72\x7d\x96\x9b\x95\x8e\x87\xeb\x6d\xec\xd8\x95\x02\xc6\x83\x35\x7c\x06\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func webTemplatesCommonMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesCommonMenuGoHtml,
		"web/templates/common/menu.go.html",
	)
}

func webTemplatesCommonMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesCommonMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/common/menu.go.html", size: 369, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorDetailsGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\x98\xd3\x3d\x44\x42\x6d\x39\x69\xde\x2e\x89\x81\xbb\x16\x77\xcd\xa1\x4d\x8b\xb6\x68\x1f\xee\x16\x05\x2d\xd1\x36\x5b\x49\xf4\x92\x94\x1d\xaf\xe1\xef\xbe\x33\xa4\xfe\x90\x4a\x1c\x67\x0b\x34\x08\x6c\x69\xfe\xfc\x66\x38\x9c\x19\x0e\xbd\xdf\xe7\x7c\x21\x2a\x0e\x51\x26\x2b\xc3\x2b\x13\x1d\x0e\xa3\xeb\x5c\x6c\x20\x2b\x98\xd6\x37\x91\x92\xdb\x68\x36\x02\xf0\x69\x24\xca\x50\x49\x59\xce\x90\x57\x4c\xca\x7c\x72\xf1\xb2\xe5\xad\x2e\x66\xfb\x7d\x6a\x84\x29\xf8\xe1\x70\x3d\xc5\xd7\x07\x3a\x6b\x56\xf1\x02\xec\xe7\x04\xdd\x61\x75\x61\x1a\xed\xe3\x72\x2b\xce\x72\x51\x2d\x3b\x39\xb2\x74\x39\xfb\xcc\xe6\x05\x07\x6d\x98\x11\xda\x88\x4c\xa3\xbd\xcb\x0e\x69\x8a\x50\x47\x61\x27\x73\x99\xef\x7c\x34\x63\xa1\x1a\x11\xf7\x62\x3f\x27\xda\x28\xb1\xe6\xb9\x27\x4b\xd2\xe4\x8f\x4f\x21\x9a\x0a\x09\x56\x0c\x6c\x24\xc8\xa8\xc2\x27\x21\x2b\xa8\xea\x72\x8e\xa1\x04\x8c\xb4\x46\x57\x6e\x22\x0c\xdd\x87\x96\x7b\x3d\x35\xab\x27\x50\x3e\xe1\x4a\x6b\x0d\x72\x01\xe8\x00\xac\x95\xcc\xb8\xd6\x72\x00\x46\x42\xfc\x04\xd0\x9d\x75\x82\x80\x4a\x44\x60\x4b\xae\xa1\x60\xcb\x25\x46\x18\xe6\x7c\x25\xaa\x1c\xde\x7c\x7d\x17\xc2\xbe\x5f\x2c\x34\x37\x93\xb7\x6c\x79\x02\xfb\x8d\x58\xae\x60\x8b\x3e\x28\x28\x99\xfa\x01\xb1\xb4\x9a\xad\xd7\x15\xbf\x37\xad\x55\x34\x46\x26\x31\xc1\x74\x5d\xf2\x3c\x09\x2d\xa2\x0b\xc7\x4c\xf9\x62\x5f\x95\x30\x7c\xf2\xf1\x89\x45\x63\x92\x3a\xe9\xcb\x68\x76\x5b\xad\x6b\x73\x52\x90\xd6\x5b\x9b\x47\x25\x91\xa2\x9e\xb3\xf3\x33\x75\xdc\xa3\xd9\x7c\x67\xb8\x3e\xc6\xcc\x79\xc1\x76\xc7\x98\x3f\x81\x3a\xf4\x98\x24\x06\xe9\x7b\x6d\xa8\x1e\x40\xe4\x5e\xa6\x7e\x11\x7c\x1b\x0d\xf4\x48\xca\x2b\x9a\xa9\x2d\x91\x41\xc5\xb9\x7a\xd7\x19\x96\x8d\x01\xb3\x5b\x63\x4a\x18\xdc\xf3\xe9\x77\xb6\x61\x8e\x8a\xa8\xa3\x46\x67\xc3\x14\x66\x9e\x36\x5d\x05\xc0\x0d\xe4\x97\x69\x21\x33\x56\xc4\xc9\x95\x2f\xa6\x78\x95\x73\xd5\x09\x6a\x94\x5c\xd4\x55\x46\xcf\x71\xe7\xb4\x4e\xf6\xa3\xce\x3f\xd2\xaa\xd7\x39\x46\xac\xd3\xfa\x60\x7b\x8a\xa7\x89\x5c\x86\x3a\xfd\x2a\x49\xa9\x83\xbb\xcd\xc9\x1f\x14\xf9\xdf\xf9\x6f\x57\x03\x21\x6a\x3b\xba\x65\x5f\x3c\xca\xae\x89\x1f\xa9\xba\xaa\xa8\x77\xf9\x12\x62\x11\xff\xcd\x02\xa4\xb6\x87\xa5\x1f\x79\x26\x37\x5c\x61\x0d\xec\x83\xbd\xf3\x50\x9c\xc4\x10\xe8\x10\x82\xfa\x98\xd8\x08\x8a\xe2\x09\x44\xed\xf8\x47\xe1\x68\x15\xae\x76\xb1\xe8\x51\xc1\xc7\x7e\xb3\x2d\x61\x12\x50\x5c\x7f\x40\xe2\xc5\xd5\x68\xe4\xa1\x4c\xa7\x20\x2a\x0c\x26\x2b\xc4\x1f\x9c\x3a\x40\x09\xf3\x1d\x34\x7d\x7f\x60\x6d\x4b\xa5\x4c\x95\x8c\xd6\xce\x87\x01\x15\x54\xb9\x4f\x32\xff\x45\xf9\xff\x18\x57\xda\x5a\x3e\xa6\xeb\xb8\x47\x95\x2d\xf4\x6b\xaa\x49\xe4\x4e\x2e\xae\xc2\xb5\x61\x08\x94\x81\xad\xc0\xee\xc1\x20\x5b\xd1\x39\x99\x83\x5c\x73\xac\x53\xca\x66\xfc\xa7\xa6\x67\xbb\x0e\x75\x40\x17\xb1\xc7\x2c\xbc\x22\x5d\xb4\xf0\x2d\xb5\x28\xcd\x4e\x5a\xc5\x64\x60\x53\x2c\x60\xcb\x21\x97\xb0\x62\x1b\x8e\x08\x45\x8d\x9e\x1b\x09\x4b\x8c\x3f\x59\x63\x9b\x25\x2c\x94\x2c\xc7\x50\x70\x73\x86\x2c\xf6\x83\x83\x30\xe9\x63\x28\x78\xba\x91\xc3\x15\xb0\x0a\x78\xb9\x36\x3b\x28\xf0\x2c\x1d\xa3\x38\x6c\x65\x5d\xe4\x90\x29\x4e\x71\x63\x70\xc7\xee\xc2\x5c\xeb\xdd\x4e\x35\xee\x6d\x9c\xa4\xd6\x95\x38\x81\x19\x9c\x0f\xb2\x2e\x08\xa2\xa7\xb8\x28\x98\x79\xc7\xd6\x71\x64\x79\x51\x92\x96\x9c\x55\x1e\xd2\x14\x2e\xce\xed\x5f\x98\xa4\x83\x04\x73\xcb\xcc\x56\x3c\xfb\xd1\x2c\xcb\x46\x86\xe1\x11\xc9\x37\x42\x62\xba\x53\x91\x52\x7a\x32\x3c\xda\xb4\x0b\x53\x49\x21\xc3\x6f\xa1\x42\xb0\x4c\x2a\xac\x35\xd3\xc4\x75\xb0\x55\xd4\xab\x3e\x35\x85\x1f\xf4\xad\x14\x83\x1f\x9b\x95\xd0\x7d\xd3\x6a\xc2\xd4\xa9\x0c\x42\x62\x4d\xad\x77\x76\xc7\x5c\x2f\x41\x7f\xd8\x46\x8a\x1c\x4a\x99\x8b\xc5\x8e\x8e\x46\xdc\x06\x8c\x56\xc1\x32\x1e\xe8\x92\x2b\x59\xad\x5a\x4f\xfe\xfb\xe9\xfd\x5d\x8a\x4d\x4b\xf3\xd8\x3e\xd2\xcc\x52\x2d\x11\xc2\x65\x51\x12\x24\x90\xb5\x8c\xf8\x0b\xb2\xd7\x05\xc8\x79\x80\x19\xa8\xb1\xcf\x54\xb9\x7e\x60\xce\x88\x92\xbf\x26\xad\x1b\x88\x2b\xbe\x85\xd7\x98\x15\x71\xeb\x43\x7a\x27\xb7\x09\xd6\x7e\xc7\xe8\x16\x6d\x39\xed\x3e\xa6\xe7\xa1\x23\x7e\xbd\xf7\x58\x83\x7e\xd2\x43\xf9\x0c\x82\x6c\x5d\x0a\x22\x0e\x5d\x6f\x77\x3b\x48\x02\xb1\x9c\x7f\xff\x42\x2f\x63\xd0\x2a\xb3\x4f\x09\xec\x07\x27\xa8\xe2\xa6\x56\xd5\x03\x32\xc0\x2b\x59\x57\xe6\x1f\xd0\x62\xa4\xf6\x9d\xba\x5f\x03\xe5\x08\xe3\x07\x7a\xb6\xa3\x78\x7a\xae\xc3\x78\x7a\x96\x30\xd4\x3b\x84\x21\x0a\x73\xdd\x6d\xc5\x52\xc9\x1a\x47\x52\xd7\x54\xa8\x63\x94\x5c\x2d\xf9\x57\xec\x41\x7d\x10\x2d\x73\xec\x05\xaf\x21\x74\x31\x19\xe4\x84\xdf\x5d\xdb\x16\xe4\xdb\x49\xfa\x52\xb5\xcb\xc5\x52\xc5\x99\x2d\xa8\xd4\x7e\x3b\x1e\x00\xb7\xcd\xf5\x04\xb2\x15\x7b\x12\xf9\x58\x2c\xdc\xb4\x76\x2c\x18\x8e\xeb\x47\xa3\xa5\x1c\x0b\x47\x70\x62\x0c\xbc\x76\xba\x3f\x1d\x90\xf0\xb8\x39\x85\x7d\x3a\x24\x7e\xae\xf4\xcf\x61\x73\xd2\x4d\x73\x1a\xbb\x3a\x0f\x7b\x54\x93\xf8\x67\xd7\x26\x9f\x9d\xbd\xf0\x66\x9f\x17\x67\x38\xe1\xe5\xb3\xff\x57\x67\x2f\x82\x15\x34\x92\x6e\x92\x38\x21\xd4\x0d\x10\xcf\x00\xf3\x86\x8b\x13\xd2\x5d\xe3\x48\x8d\xfc\xb7\xb8\xe7\x79\xfc\x32\x39\xa1\xd2\x25\xf8\x5f\x54\xb1\x1b\xd0\xe9\x9c\x3f\x4b\xc7\x1e\x66\x81\x1d\x28\xf5\xd3\x61\xea\xf2\xed\xf9\xee\x79\x89\xf4\xa8\x7f\x7d\x6a\x1c\xbc\xfd\xde\xef\xf1\x84\xe4\xbf\x43\xea\xe6\xe9\xcf\x38\xa0\x43\xd4\x5f\x25\x0f\xc3\x09\xd0\x26\x26\x26\x6a\x3f\x62\xa7\xff\x21\xd2\x95\x87\xc8\x0b\xcd\x9f\xa3\xd8\x0f\xef\x81\x76\x95\xa3\xf2\xe8\x81\xee\x5b\x1c\x44\x6c\x85\x18\xf9\x81\x09\xa5\x5d\x8d\x60\x29\x48\x65\xe2\x6e\x80\x67\xe3\x79\xb2\x6f\x52\xd8\x1e\x81\xb7\x95\x89\x69\x5e\xa7\xf3\xa8\x23\xcc\x89\x70\x75\xf0\xaa\x1c\x0f\x41\x77\x37\x18\x03\xaf\xe8\xb2\x4a\xa3\x81\xe2\x25\x0e\xd9\x76\x5a\x08\xfc\xc9\xdd\xb5\x44\xf3\x02\x27\x83\x38\xfa\x7b\x78\x49\x4a\x1a\xc6\x3f\x8b\x22\x8e\xd2\x8e\x37\x97\xf7\xc8\x22\xac\xb8\x5b\xcf\xd8\xbb\x79\x24\xfb\xb6\xf4\x72\xba\x5e\x80\xef\x5d\x9e\xae\x4c\x59\xc4\x8f\xdd\x5e\x7c\xa9\x5f\xef\x52\x6a\x83\x83\xad\x87\xad\xd7\xb8\x51\x71\x64\x14\x22\xd8\xdf\x49\x30\xdd\xa2\x00\x79\x8c\xd3\x24\x9e\xac\xcf\x73\x3d\xe5\xf7\xc2\x20\xae\x0b\x79\x9c\x8c\x86\xa9\xba\x15\x55\x2e\xb7\xd4\xba\x6e\xc9\x05\x6c\x7d\xfd\xa6\x7b\xa3\x14\xc6\xe0\xbb\x46\x52\xb4\xdf\xa7\x73\x9c\xf1\xbe\xad\x99\x59\x1d\x0e\x53\x5a\xe4\x14\x69\x7d\x9a\x23\x11\xdf\x71\x3b\x75\x2a\xf2\xfb\xc3\x01\xfd\x1d\xde\x29\x3b\x07\x0f\x63\x78\x89\x03\x4b\xdf\x28\x69\x5a\xc3\xeb\x92\x1b\xc8\xec\x75\xa6\xd8\x8d\x7e\x9d\x07\xd7\x53\x77\x55\x6e\x7e\x3d\x6b\x7f\xcb\x6a\x1e\x9a\xaf\xb6\x74\xfe\x0c\x00\x00\xff\xff\x20\x3e\x08\xca\xd6\x13\x00\x00")

func webTemplatesMonitorDetailsGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorDetailsGoHtml,
		"web/templates/monitor/details.go.html",
	)
}

func webTemplatesMonitorDetailsGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorDetailsGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/details.go.html", size: 5078, mode: os.FileMode(436), modTime: time.Unix(1512557490, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x95\x51\x6f\xd3\x30\x10\xc7\xdf\xf7\x29\xac\xa8\xf0\x44\x13\x31\xed\x69\xa4\x91\x00\xa1\xaa\xa3\x5a\x2a\x48\x79\x45\x6e\x7c\x6d\x2c\x32\xdb\x72\x9c\x15\x14\xf9\xbb\x63\xa7\x49\x48\x9d\x96\x3c\x94\x4d\xec\xa5\xb5\x7d\xff\x3b\xff\x7c\xbe\xf8\xaa\x8a\xc0\x96\x32\x40\x5e\xca\x99\x02\xa6\x3c\xad\xaf\x42\x42\x1f\x51\x9a\xe3\xa2\x98\x79\x92\xef\xbd\xe8\x0a\xa1\xfe\x9a\x95\x62\xe3\x24\x6b\x8b\x6b\xcb\xa7\x0f\x64\xfa\xf6\xba\xb1\x19\x6b\x76\x1d\xad\x24\x4f\xa1\x28\xb8\x2c\xc2\xc0\x4c\x1b\x4b\x55\x4d\x36\xb8\x80\xef\x02\xab\x0c\xdd\xce\x90\xdf\xcd\x0c\x44\x2b\x91\x98\xed\x00\x4d\x28\x23\xf0\xf3\x0d\x9a\x88\x36\x52\xed\xd0\xcd\x8a\xce\x63\x0c\xc7\x55\x08\xcc\x20\x47\xf5\xef\xd4\xe4\x02\x97\xb9\x3a\xd2\x9e\x50\x4f\x33\xc0\x84\xb2\x9d\xa3\xb3\x47\xbd\x39\x16\x2a\xaa\x72\xf0\xa2\x10\xa3\x4c\xc2\x76\xe6\xf5\x4f\xac\x75\xd0\xe1\x07\xc6\x50\x9f\x50\x6b\x2f\x32\xe3\xce\xe0\xcf\x25\x16\x99\xf9\xe5\xa5\xd0\x3a\x0c\xf0\x60\xcb\x20\xbb\x71\x70\x03\xc3\x3b\x76\x82\x0d\x27\xbf\x06\xf8\x55\x85\xf6\xd4\x5c\xc5\x64\x67\x37\xb5\x09\x76\x41\x50\x2f\xcd\x4d\xe8\x32\x77\xc3\xf4\x6e\x0d\xc8\x0e\x16\xc4\xde\x9b\x1d\xd5\x11\xeb\xd8\xfe\x82\x89\x52\x7d\x55\x12\xf0\x43\x31\x88\x69\xa2\xe6\x34\x5a\xdc\xaf\xd6\xc9\xad\x2d\x12\xeb\xeb\x27\x5c\xd0\x54\x6b\xf4\x5a\x62\x29\xdf\x99\x65\x21\x29\x53\x5b\xe4\xbd\x4a\xbc\x43\x78\xff\x23\x27\x90\xda\x2c\x19\xef\x13\x4c\xc0\xc8\x89\xad\xc6\x59\xef\xb8\xd9\x28\xc1\x9b\x1c\xce\xa1\xde\xc5\x8b\xfb\xff\x02\x75\xc9\xf9\x8f\x52\xfc\x95\x75\x19\xc7\x9f\xd7\xab\xe7\x80\x6d\x6b\x89\x37\x44\x3d\xce\x79\xb7\x78\x86\x72\xfe\x25\x5e\xaf\x92\xf7\x1f\x96\x9f\x6a\xd2\x3f\x41\x46\x78\x7b\xc2\x8b\xa8\x73\xce\xc5\x71\x5e\xc5\xa1\x5a\xcf\x67\xf5\x90\x53\xeb\x38\xc2\x58\x4b\x9e\xa8\x00\xe2\x52\x8d\x7e\x58\xf1\x3a\x79\x86\x2f\x2b\x0c\x86\x2f\x83\x79\x60\x8c\xd4\x7d\x44\x06\x0f\x96\xb3\x70\x34\xed\x6f\xd6\x19\x9a\xc1\xc5\x6d\xea\x1b\x85\xfd\xc5\x1d\xea\xd1\x04\xa9\xb5\x76\xf0\x32\xfb\x92\x25\x77\x5b\x92\x5d\x6b\x4b\xe5\x49\xfb\xd0\x3f\x2b\x87\xe6\xaf\x95\xfc\x0e\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func webTemplatesMonitorIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorIndexGoHtml,
		"web/templates/monitor/index.go.html",
	)
}

func webTemplatesMonitorIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/index.go.html", size: 2283, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesMonitorMenuGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8e\xc1\xaa\xc2\x30\x10\x45\xf7\xef\x2b\x86\xd0\xc5\x13\xa4\xd9\x4b\xda\xad\x3f\xe0\xbe\xc4\x76\x6a\x03\x3a\x09\x49\xab\x42\x98\x7f\x77\xa2\xd0\x55\x11\x37\xc9\xc0\x3d\xdc\x7b\x72\x1e\x70\x74\x84\xa0\x6e\x48\x4b\xd7\x7b\x9a\x91\x66\xc5\xfc\x97\x73\xb4\x74\x41\xa8\x1c\x0d\xf8\xdc\x43\x15\xa2\xef\xe1\xd0\x40\x5d\x0e\x4c\xc9\xc7\x24\x18\x80\xb9\xba\xd6\x58\x98\x22\x8e\x8d\xca\xb9\xaa\xcf\x36\x61\x17\xec\x3c\x31\xeb\x95\xd5\x92\xbc\x9b\x98\x55\x2b\x77\x09\xea\x63\xb4\x61\x92\xd7\x2f\x81\x19\xfe\x57\x78\x67\xb4\x6d\x8d\x96\x62\xd1\x40\x1a\xbe\xea\xdc\x1d\x3e\x7e\x30\x29\xd8\xa6\xc4\xc9\x07\xd7\x97\xf9\x42\x6c\x2e\x7f\xfe\x57\x00\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func webTemplatesMonitorMenuGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesMonitorMenuGoHtml,
		"web/templates/monitor/menu.go.html",
	)
}

func webTemplatesMonitorMenuGoHtml() (*asset, error) {
	bytes, err := webTemplatesMonitorMenuGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/monitor/menu.go.html", size: 299, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesQueryIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\x26\x82\x71\xb3\xb8\x95\x85\x26\xbb\x46\x56\x37\xcd\xaa\x40\x81\xa2\x8b\x2e\x03\x5a\x1c\x4b\x44\x69\xd2\xe5\x23\x8e\x61\xf8\xdf\x3b\x12\x25\xc5\x96\x69\x25\x45\x51\xa0\x02\x2c\x7b\x34\x0f\x9e\x39\x3c\x1c\x6b\xbf\xe7\xb8\x12\x0a\x21\x29\xb5\x72\xa8\x5c\x72\x38\x5c\xe5\x5c\x3c\x41\x29\x99\xb5\x8b\xc4\xe8\x6d\x52\x5c\x01\x5d\xc7\x4f\x9b\x60\x46\x69\xa6\xf3\x8d\xfd\x2f\x59\x31\x6f\xa9\x65\xba\xe6\xe9\xfb\xdb\x51\x0c\x45\xd5\xb7\xc5\x57\x8f\x66\x07\x9f\x71\x67\xf3\x8c\xcc\x51\xc4\x7e\x2f\x56\x30\x47\x63\xb4\x21\xa4\xa3\xec\xa3\x35\x98\x44\xe3\xa0\xbd\xa7\x9c\xa9\x0a\x4d\x6f\x08\xbb\x16\xd6\x8a\xa5\xc4\x04\x8c\x96\xd8\xc5\x9e\x61\xa1\x7a\x4b\xef\x9c\x56\xe0\x76\x1b\x8a\x0a\x46\x32\x34\x21\xb5\xa5\x0a\x9c\x39\xd6\xd7\x1c\x2a\xe5\x76\xc3\x54\xf1\x9f\x13\x6b\xb4\xf7\x79\xd6\x5a\x79\x16\x0a\x44\x96\xb1\xce\x68\x55\x15\x0f\x4d\x53\xd7\x14\x1e\x4c\x6a\x35\xf4\x39\x7f\x88\x77\x9b\x51\xbb\xe7\xf4\xa0\xe2\x67\xa1\x81\xb4\x2d\x33\x4a\xa8\xea\xcd\xb4\x75\xf1\xff\x3c\x6f\xdf\x03\xce\x53\xe6\x3a\xf0\x7f\xce\x5d\xcf\x9e\xd5\xde\x94\x68\x23\xfe\x7c\xa5\xcd\x1a\xb4\xb2\x7e\xb9\x16\x6e\x91\x6c\x85\xe2\x7a\x3b\x97\xba\x64\x4e\x10\x0d\x0b\xb8\x21\x40\x4b\x66\xf1\x71\xc3\x5c\x7d\x38\x64\x64\x5a\x94\x58\x3a\xe4\x8f\xa1\x2e\x3d\xbc\x81\xff\xc1\x22\x33\x65\x3d\x7f\x62\xd2\xe3\x3d\x18\x74\xde\x28\x58\x31\x69\xf1\x3e\xc2\xf3\x78\xf3\x84\xda\x78\x97\x56\x46\xfb\x0d\x1c\xfd\x4e\x65\x75\x21\x79\xa2\x40\xba\x74\x6a\x22\xab\xcd\x9c\xda\x66\x4a\x07\xfa\xa4\x34\x5e\x98\x97\x0e\xb8\xd1\x1b\x62\x45\xa5\x4e\x57\x95\xec\x05\x10\x8c\x45\xd2\x7b\x93\x22\x46\x4d\x2b\x8b\x41\x3f\x8c\x68\x21\xa9\xbc\xa6\x8e\x13\xa4\x5e\xf6\xe9\x03\x8e\x35\x2a\xff\x4a\x83\xcd\xb5\xdf\xcf\x86\x9d\x83\x0f\x0b\x38\xde\xc7\x37\x24\x9b\x66\xf4\xc0\x8c\x14\x81\xcf\xef\x60\x16\x3a\x6a\xeb\x5c\xd6\xd3\x19\x7a\x29\x8a\x9c\x41\x6d\x70\xb5\x48\x8e\xf1\xb4\x4a\x9a\xf5\x2c\x35\xdc\x0d\x46\x9e\x31\xe2\x86\x12\xdf\x80\x31\xae\xfa\x13\x04\x99\x97\x13\x0a\x8a\x1d\xa6\x23\x77\xab\x2a\x10\x7c\x91\x04\x79\x27\x9d\x62\x1c\x3e\xbb\x41\x2f\xcd\x19\x4a\x9b\xbf\x15\x1a\x2d\x34\x5f\xf0\xa7\x17\x06\xf9\xdf\x97\x6d\x38\xb4\x97\x64\x9b\x14\xdf\x5a\xc8\xaf\xcb\x6c\x82\x84\x0b\xae\x3c\x6b\x7a\x3e\x7f\x4e\x1b\x42\xe7\x3d\x36\x67\xa6\xe7\xf4\x68\x2a\x7f\xd1\xd0\x49\x0c\x56\xda\x2b\x7e\x0d\x9f\x04\x87\x9d\xf6\x64\x9a\x0a\x1d\x38\x0d\xcc\x39\x56\xd6\xe0\x6a\x5c\x7f\xbc\x80\x32\x26\x8f\x51\xe8\xc8\x0c\xe3\xb2\x1d\x61\x47\x79\x79\x6d\xb2\xf8\xbb\x02\x1d\x63\x94\xd0\xde\x87\x69\x11\x2c\xeb\x4b\x82\x6f\x27\xde\x24\x42\x5c\x8d\x8c\x37\x04\x44\x38\xae\xef\x4e\x43\x9d\x70\x34\x7c\x9a\x29\xf3\x03\x77\xcd\x31\xa9\xef\x8a\xa9\xde\xe2\x0b\x2e\x35\xdf\xc5\x56\xdb\x18\x6c\x4a\x77\xbd\xe7\x59\x63\xff\x16\x73\x2f\x5c\x77\xae\xee\xab\xf7\xfc\x0a\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func webTemplatesQueryIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesQueryIndexGoHtml,
		"web/templates/query/index.go.html",
	)
}

func webTemplatesQueryIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesQueryIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/query/index.go.html", size: 2479, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webTemplatesIndexIndexGoHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4d\x6e\xc3\x20\x10\x85\xf7\x3e\xc5\x08\x65\x59\xc7\x6a\x95\x55\x65\x7b\xd1\x03\x54\xbd\xc2\xc8\x4c\x02\x12\x1e\x22\xa0\x3f\xd2\x88\xbb\x97\x46\x34\x2d\x6e\x15\x2f\x0c\x33\xef\x83\x37\x0f\x11\x4d\x47\xcb\x04\x6a\xf1\x9c\x88\x93\xca\xb9\x1b\xb5\x7d\x83\xc5\x61\x8c\x93\x0a\xfe\x5d\xcd\x1d\xc0\xef\xde\x17\x8a\xe5\x50\xb8\x28\x5b\xcd\xf5\xab\xee\xef\x1f\xaa\x06\x20\x12\x90\x4f\x04\x3b\xcb\x9a\x3e\xee\x60\xb7\xf8\xf5\xec\xb9\x78\xc1\xe3\x04\xfb\x6b\x15\x8b\x33\xd4\xef\xf6\x8d\x5b\xe2\x8c\x4c\x0e\x2e\xff\xbe\xc4\xc1\x57\x97\x1a\xf6\x1f\xba\x37\x84\xda\xf2\x69\xc3\x15\xd2\x1c\x5a\x30\xd9\xe4\x48\xcd\x23\x82\x09\x74\x9c\x94\xc8\x4f\x80\xfd\x13\x46\x7a\xc1\x64\x72\x1e\xd4\xdc\x28\xcf\xb8\x52\xce\xe3\x80\x7f\x0c\x06\x73\x98\xbb\x76\xba\xa1\x8c\xd7\x84\x6b\x1b\x4d\x29\x42\xac\xeb\x53\x5d\x85\xba\xa9\xcb\x37\xf2\x19\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd\x01\x00\x00")

func webTemplatesIndexIndexGoHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webTemplatesIndexIndexGoHtml,
		"web/templates/index/index.go.html",
	)
}

func webTemplatesIndexIndexGoHtml() (*asset, error) {
	bytes, err := webTemplatesIndexIndexGoHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "web/templates/index/index.go.html", size: 477, mode: os.FileMode(436), modTime: time.Unix(1512123257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html": webTemplatesCommonBaseGoHtml,
	"web/templates/common/head.go.html": webTemplatesCommonHeadGoHtml,
	"web/templates/common/menu.go.html": webTemplatesCommonMenuGoHtml,
	"web/templates/monitor/details.go.html": webTemplatesMonitorDetailsGoHtml,
	"web/templates/monitor/index.go.html": webTemplatesMonitorIndexGoHtml,
	"web/templates/monitor/menu.go.html": webTemplatesMonitorMenuGoHtml,
	"web/templates/query/index.go.html": webTemplatesQueryIndexGoHtml,
	"web/templates/index/index.go.html": webTemplatesIndexIndexGoHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"web": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"common": &bintree{nil, map[string]*bintree{
				"base.go.html": &bintree{webTemplatesCommonBaseGoHtml, map[string]*bintree{}},
				"head.go.html": &bintree{webTemplatesCommonHeadGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesCommonMenuGoHtml, map[string]*bintree{}},
			}},
			"index": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesIndexIndexGoHtml, map[string]*bintree{}},
			}},
			"monitor": &bintree{nil, map[string]*bintree{
				"details.go.html": &bintree{webTemplatesMonitorDetailsGoHtml, map[string]*bintree{}},
				"index.go.html": &bintree{webTemplatesMonitorIndexGoHtml, map[string]*bintree{}},
				"menu.go.html": &bintree{webTemplatesMonitorMenuGoHtml, map[string]*bintree{}},
			}},
			"query": &bintree{nil, map[string]*bintree{
				"index.go.html": &bintree{webTemplatesQueryIndexGoHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

